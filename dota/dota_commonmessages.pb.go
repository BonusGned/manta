// Code generated by protoc-gen-go.
// source: dota_commonmessages.proto
// DO NOT EDIT!

package dota

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EDOTAStatPopupTypes int32

const (
	EDOTAStatPopupTypes_k_EDOTA_SPT_Textline EDOTAStatPopupTypes = 0
	EDOTAStatPopupTypes_k_EDOTA_SPT_Basic    EDOTAStatPopupTypes = 1
	EDOTAStatPopupTypes_k_EDOTA_SPT_Poll     EDOTAStatPopupTypes = 2
	EDOTAStatPopupTypes_k_EDOTA_SPT_Grid     EDOTAStatPopupTypes = 3
)

var EDOTAStatPopupTypes_name = map[int32]string{
	0: "k_EDOTA_SPT_Textline",
	1: "k_EDOTA_SPT_Basic",
	2: "k_EDOTA_SPT_Poll",
	3: "k_EDOTA_SPT_Grid",
}
var EDOTAStatPopupTypes_value = map[string]int32{
	"k_EDOTA_SPT_Textline": 0,
	"k_EDOTA_SPT_Basic":    1,
	"k_EDOTA_SPT_Poll":     2,
	"k_EDOTA_SPT_Grid":     3,
}

func (x EDOTAStatPopupTypes) Enum() *EDOTAStatPopupTypes {
	p := new(EDOTAStatPopupTypes)
	*p = x
	return p
}
func (x EDOTAStatPopupTypes) String() string {
	return proto.EnumName(EDOTAStatPopupTypes_name, int32(x))
}
func (x *EDOTAStatPopupTypes) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EDOTAStatPopupTypes_value, data, "EDOTAStatPopupTypes")
	if err != nil {
		return err
	}
	*x = EDOTAStatPopupTypes(value)
	return nil
}
func (EDOTAStatPopupTypes) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

type DotaunitorderT int32

const (
	DotaunitorderT_DOTA_UNIT_ORDER_NONE                   DotaunitorderT = 0
	DotaunitorderT_DOTA_UNIT_ORDER_MOVE_TO_POSITION       DotaunitorderT = 1
	DotaunitorderT_DOTA_UNIT_ORDER_MOVE_TO_TARGET         DotaunitorderT = 2
	DotaunitorderT_DOTA_UNIT_ORDER_ATTACK_MOVE            DotaunitorderT = 3
	DotaunitorderT_DOTA_UNIT_ORDER_ATTACK_TARGET          DotaunitorderT = 4
	DotaunitorderT_DOTA_UNIT_ORDER_CAST_POSITION          DotaunitorderT = 5
	DotaunitorderT_DOTA_UNIT_ORDER_CAST_TARGET            DotaunitorderT = 6
	DotaunitorderT_DOTA_UNIT_ORDER_CAST_TARGET_TREE       DotaunitorderT = 7
	DotaunitorderT_DOTA_UNIT_ORDER_CAST_NO_TARGET         DotaunitorderT = 8
	DotaunitorderT_DOTA_UNIT_ORDER_CAST_TOGGLE            DotaunitorderT = 9
	DotaunitorderT_DOTA_UNIT_ORDER_HOLD_POSITION          DotaunitorderT = 10
	DotaunitorderT_DOTA_UNIT_ORDER_TRAIN_ABILITY          DotaunitorderT = 11
	DotaunitorderT_DOTA_UNIT_ORDER_DROP_ITEM              DotaunitorderT = 12
	DotaunitorderT_DOTA_UNIT_ORDER_GIVE_ITEM              DotaunitorderT = 13
	DotaunitorderT_DOTA_UNIT_ORDER_PICKUP_ITEM            DotaunitorderT = 14
	DotaunitorderT_DOTA_UNIT_ORDER_PICKUP_RUNE            DotaunitorderT = 15
	DotaunitorderT_DOTA_UNIT_ORDER_PURCHASE_ITEM          DotaunitorderT = 16
	DotaunitorderT_DOTA_UNIT_ORDER_SELL_ITEM              DotaunitorderT = 17
	DotaunitorderT_DOTA_UNIT_ORDER_DISASSEMBLE_ITEM       DotaunitorderT = 18
	DotaunitorderT_DOTA_UNIT_ORDER_MOVE_ITEM              DotaunitorderT = 19
	DotaunitorderT_DOTA_UNIT_ORDER_CAST_TOGGLE_AUTO       DotaunitorderT = 20
	DotaunitorderT_DOTA_UNIT_ORDER_STOP                   DotaunitorderT = 21
	DotaunitorderT_DOTA_UNIT_ORDER_TAUNT                  DotaunitorderT = 22
	DotaunitorderT_DOTA_UNIT_ORDER_BUYBACK                DotaunitorderT = 23
	DotaunitorderT_DOTA_UNIT_ORDER_GLYPH                  DotaunitorderT = 24
	DotaunitorderT_DOTA_UNIT_ORDER_EJECT_ITEM_FROM_STASH  DotaunitorderT = 25
	DotaunitorderT_DOTA_UNIT_ORDER_CAST_RUNE              DotaunitorderT = 26
	DotaunitorderT_DOTA_UNIT_ORDER_PING_ABILITY           DotaunitorderT = 27
	DotaunitorderT_DOTA_UNIT_ORDER_MOVE_TO_DIRECTION      DotaunitorderT = 28
	DotaunitorderT_DOTA_UNIT_ORDER_PATROL                 DotaunitorderT = 29
	DotaunitorderT_DOTA_UNIT_ORDER_VECTOR_TARGET_POSITION DotaunitorderT = 30
	DotaunitorderT_DOTA_UNIT_ORDER_RADAR                  DotaunitorderT = 31
	DotaunitorderT_DOTA_UNIT_ORDER_SET_ITEM_COMBINE_LOCK  DotaunitorderT = 32
	DotaunitorderT_DOTA_UNIT_ORDER_CONTINUE               DotaunitorderT = 33
)

var DotaunitorderT_name = map[int32]string{
	0:  "DOTA_UNIT_ORDER_NONE",
	1:  "DOTA_UNIT_ORDER_MOVE_TO_POSITION",
	2:  "DOTA_UNIT_ORDER_MOVE_TO_TARGET",
	3:  "DOTA_UNIT_ORDER_ATTACK_MOVE",
	4:  "DOTA_UNIT_ORDER_ATTACK_TARGET",
	5:  "DOTA_UNIT_ORDER_CAST_POSITION",
	6:  "DOTA_UNIT_ORDER_CAST_TARGET",
	7:  "DOTA_UNIT_ORDER_CAST_TARGET_TREE",
	8:  "DOTA_UNIT_ORDER_CAST_NO_TARGET",
	9:  "DOTA_UNIT_ORDER_CAST_TOGGLE",
	10: "DOTA_UNIT_ORDER_HOLD_POSITION",
	11: "DOTA_UNIT_ORDER_TRAIN_ABILITY",
	12: "DOTA_UNIT_ORDER_DROP_ITEM",
	13: "DOTA_UNIT_ORDER_GIVE_ITEM",
	14: "DOTA_UNIT_ORDER_PICKUP_ITEM",
	15: "DOTA_UNIT_ORDER_PICKUP_RUNE",
	16: "DOTA_UNIT_ORDER_PURCHASE_ITEM",
	17: "DOTA_UNIT_ORDER_SELL_ITEM",
	18: "DOTA_UNIT_ORDER_DISASSEMBLE_ITEM",
	19: "DOTA_UNIT_ORDER_MOVE_ITEM",
	20: "DOTA_UNIT_ORDER_CAST_TOGGLE_AUTO",
	21: "DOTA_UNIT_ORDER_STOP",
	22: "DOTA_UNIT_ORDER_TAUNT",
	23: "DOTA_UNIT_ORDER_BUYBACK",
	24: "DOTA_UNIT_ORDER_GLYPH",
	25: "DOTA_UNIT_ORDER_EJECT_ITEM_FROM_STASH",
	26: "DOTA_UNIT_ORDER_CAST_RUNE",
	27: "DOTA_UNIT_ORDER_PING_ABILITY",
	28: "DOTA_UNIT_ORDER_MOVE_TO_DIRECTION",
	29: "DOTA_UNIT_ORDER_PATROL",
	30: "DOTA_UNIT_ORDER_VECTOR_TARGET_POSITION",
	31: "DOTA_UNIT_ORDER_RADAR",
	32: "DOTA_UNIT_ORDER_SET_ITEM_COMBINE_LOCK",
	33: "DOTA_UNIT_ORDER_CONTINUE",
}
var DotaunitorderT_value = map[string]int32{
	"DOTA_UNIT_ORDER_NONE":                   0,
	"DOTA_UNIT_ORDER_MOVE_TO_POSITION":       1,
	"DOTA_UNIT_ORDER_MOVE_TO_TARGET":         2,
	"DOTA_UNIT_ORDER_ATTACK_MOVE":            3,
	"DOTA_UNIT_ORDER_ATTACK_TARGET":          4,
	"DOTA_UNIT_ORDER_CAST_POSITION":          5,
	"DOTA_UNIT_ORDER_CAST_TARGET":            6,
	"DOTA_UNIT_ORDER_CAST_TARGET_TREE":       7,
	"DOTA_UNIT_ORDER_CAST_NO_TARGET":         8,
	"DOTA_UNIT_ORDER_CAST_TOGGLE":            9,
	"DOTA_UNIT_ORDER_HOLD_POSITION":          10,
	"DOTA_UNIT_ORDER_TRAIN_ABILITY":          11,
	"DOTA_UNIT_ORDER_DROP_ITEM":              12,
	"DOTA_UNIT_ORDER_GIVE_ITEM":              13,
	"DOTA_UNIT_ORDER_PICKUP_ITEM":            14,
	"DOTA_UNIT_ORDER_PICKUP_RUNE":            15,
	"DOTA_UNIT_ORDER_PURCHASE_ITEM":          16,
	"DOTA_UNIT_ORDER_SELL_ITEM":              17,
	"DOTA_UNIT_ORDER_DISASSEMBLE_ITEM":       18,
	"DOTA_UNIT_ORDER_MOVE_ITEM":              19,
	"DOTA_UNIT_ORDER_CAST_TOGGLE_AUTO":       20,
	"DOTA_UNIT_ORDER_STOP":                   21,
	"DOTA_UNIT_ORDER_TAUNT":                  22,
	"DOTA_UNIT_ORDER_BUYBACK":                23,
	"DOTA_UNIT_ORDER_GLYPH":                  24,
	"DOTA_UNIT_ORDER_EJECT_ITEM_FROM_STASH":  25,
	"DOTA_UNIT_ORDER_CAST_RUNE":              26,
	"DOTA_UNIT_ORDER_PING_ABILITY":           27,
	"DOTA_UNIT_ORDER_MOVE_TO_DIRECTION":      28,
	"DOTA_UNIT_ORDER_PATROL":                 29,
	"DOTA_UNIT_ORDER_VECTOR_TARGET_POSITION": 30,
	"DOTA_UNIT_ORDER_RADAR":                  31,
	"DOTA_UNIT_ORDER_SET_ITEM_COMBINE_LOCK":  32,
	"DOTA_UNIT_ORDER_CONTINUE":               33,
}

func (x DotaunitorderT) Enum() *DotaunitorderT {
	p := new(DotaunitorderT)
	*p = x
	return p
}
func (x DotaunitorderT) String() string {
	return proto.EnumName(DotaunitorderT_name, int32(x))
}
func (x *DotaunitorderT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DotaunitorderT_value, data, "DotaunitorderT")
	if err != nil {
		return err
	}
	*x = DotaunitorderT(value)
	return nil
}
func (DotaunitorderT) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{1} }

type CDOTAMsg_LocationPing struct {
	X                *int32 `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y                *int32 `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
	Target           *int32 `protobuf:"varint,3,opt,name=target" json:"target,omitempty"`
	DirectPing       *bool  `protobuf:"varint,4,opt,name=direct_ping,json=directPing" json:"direct_ping,omitempty"`
	Type             *int32 `protobuf:"varint,5,opt,name=type" json:"type,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAMsg_LocationPing) Reset()                    { *m = CDOTAMsg_LocationPing{} }
func (m *CDOTAMsg_LocationPing) String() string            { return proto.CompactTextString(m) }
func (*CDOTAMsg_LocationPing) ProtoMessage()               {}
func (*CDOTAMsg_LocationPing) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

func (m *CDOTAMsg_LocationPing) GetX() int32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *CDOTAMsg_LocationPing) GetY() int32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *CDOTAMsg_LocationPing) GetTarget() int32 {
	if m != nil && m.Target != nil {
		return *m.Target
	}
	return 0
}

func (m *CDOTAMsg_LocationPing) GetDirectPing() bool {
	if m != nil && m.DirectPing != nil {
		return *m.DirectPing
	}
	return false
}

func (m *CDOTAMsg_LocationPing) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

type CDOTAMsg_ItemAlert struct {
	X                *int32 `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y                *int32 `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
	Itemid           *int32 `protobuf:"varint,3,opt,name=itemid" json:"itemid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAMsg_ItemAlert) Reset()                    { *m = CDOTAMsg_ItemAlert{} }
func (m *CDOTAMsg_ItemAlert) String() string            { return proto.CompactTextString(m) }
func (*CDOTAMsg_ItemAlert) ProtoMessage()               {}
func (*CDOTAMsg_ItemAlert) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{1} }

func (m *CDOTAMsg_ItemAlert) GetX() int32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *CDOTAMsg_ItemAlert) GetY() int32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *CDOTAMsg_ItemAlert) GetItemid() int32 {
	if m != nil && m.Itemid != nil {
		return *m.Itemid
	}
	return 0
}

type CDOTAMsg_MapLine struct {
	X                *int32 `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y                *int32 `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
	Initial          *bool  `protobuf:"varint,3,opt,name=initial" json:"initial,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAMsg_MapLine) Reset()                    { *m = CDOTAMsg_MapLine{} }
func (m *CDOTAMsg_MapLine) String() string            { return proto.CompactTextString(m) }
func (*CDOTAMsg_MapLine) ProtoMessage()               {}
func (*CDOTAMsg_MapLine) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{2} }

func (m *CDOTAMsg_MapLine) GetX() int32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *CDOTAMsg_MapLine) GetY() int32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *CDOTAMsg_MapLine) GetInitial() bool {
	if m != nil && m.Initial != nil {
		return *m.Initial
	}
	return false
}

type CDOTAMsg_WorldLine struct {
	X                *int32 `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y                *int32 `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
	Z                *int32 `protobuf:"varint,3,opt,name=z" json:"z,omitempty"`
	Initial          *bool  `protobuf:"varint,4,opt,name=initial" json:"initial,omitempty"`
	End              *bool  `protobuf:"varint,5,opt,name=end" json:"end,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAMsg_WorldLine) Reset()                    { *m = CDOTAMsg_WorldLine{} }
func (m *CDOTAMsg_WorldLine) String() string            { return proto.CompactTextString(m) }
func (*CDOTAMsg_WorldLine) ProtoMessage()               {}
func (*CDOTAMsg_WorldLine) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{3} }

func (m *CDOTAMsg_WorldLine) GetX() int32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *CDOTAMsg_WorldLine) GetY() int32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *CDOTAMsg_WorldLine) GetZ() int32 {
	if m != nil && m.Z != nil {
		return *m.Z
	}
	return 0
}

func (m *CDOTAMsg_WorldLine) GetInitial() bool {
	if m != nil && m.Initial != nil {
		return *m.Initial
	}
	return false
}

func (m *CDOTAMsg_WorldLine) GetEnd() bool {
	if m != nil && m.End != nil {
		return *m.End
	}
	return false
}

type CDOTAMsg_SendStatPopup struct {
	Style            *EDOTAStatPopupTypes `protobuf:"varint,1,opt,name=style,enum=dota.EDOTAStatPopupTypes,def=0" json:"style,omitempty"`
	StatStrings      []string             `protobuf:"bytes,2,rep,name=stat_strings,json=statStrings" json:"stat_strings,omitempty"`
	StatImages       []int32              `protobuf:"varint,3,rep,name=stat_images,json=statImages" json:"stat_images,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CDOTAMsg_SendStatPopup) Reset()                    { *m = CDOTAMsg_SendStatPopup{} }
func (m *CDOTAMsg_SendStatPopup) String() string            { return proto.CompactTextString(m) }
func (*CDOTAMsg_SendStatPopup) ProtoMessage()               {}
func (*CDOTAMsg_SendStatPopup) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{4} }

const Default_CDOTAMsg_SendStatPopup_Style EDOTAStatPopupTypes = EDOTAStatPopupTypes_k_EDOTA_SPT_Textline

func (m *CDOTAMsg_SendStatPopup) GetStyle() EDOTAStatPopupTypes {
	if m != nil && m.Style != nil {
		return *m.Style
	}
	return Default_CDOTAMsg_SendStatPopup_Style
}

func (m *CDOTAMsg_SendStatPopup) GetStatStrings() []string {
	if m != nil {
		return m.StatStrings
	}
	return nil
}

func (m *CDOTAMsg_SendStatPopup) GetStatImages() []int32 {
	if m != nil {
		return m.StatImages
	}
	return nil
}

type CDOTAMsg_CoachHUDPing struct {
	X                *uint32 `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y                *uint32 `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
	Tgtpath          *string `protobuf:"bytes,3,opt,name=tgtpath" json:"tgtpath,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAMsg_CoachHUDPing) Reset()                    { *m = CDOTAMsg_CoachHUDPing{} }
func (m *CDOTAMsg_CoachHUDPing) String() string            { return proto.CompactTextString(m) }
func (*CDOTAMsg_CoachHUDPing) ProtoMessage()               {}
func (*CDOTAMsg_CoachHUDPing) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{5} }

func (m *CDOTAMsg_CoachHUDPing) GetX() uint32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *CDOTAMsg_CoachHUDPing) GetY() uint32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *CDOTAMsg_CoachHUDPing) GetTgtpath() string {
	if m != nil && m.Tgtpath != nil {
		return *m.Tgtpath
	}
	return ""
}

type CDOTAMsg_UnitOrder struct {
	Issuer           *int32          `protobuf:"zigzag32,1,opt,name=issuer,def=-1" json:"issuer,omitempty"`
	OrderType        *DotaunitorderT `protobuf:"varint,2,opt,name=order_type,json=orderType,enum=dota.DotaunitorderT,def=0" json:"order_type,omitempty"`
	Units            []int32         `protobuf:"varint,3,rep,name=units" json:"units,omitempty"`
	TargetIndex      *int32          `protobuf:"varint,4,opt,name=target_index,json=targetIndex" json:"target_index,omitempty"`
	AbilityIndex     *int32          `protobuf:"varint,5,opt,name=ability_index,json=abilityIndex" json:"ability_index,omitempty"`
	Position         *CMsgVector     `protobuf:"bytes,6,opt,name=position" json:"position,omitempty"`
	Queue            *bool           `protobuf:"varint,7,opt,name=queue" json:"queue,omitempty"`
	SequenceNumber   *int32          `protobuf:"varint,8,opt,name=sequence_number,json=sequenceNumber" json:"sequence_number,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *CDOTAMsg_UnitOrder) Reset()                    { *m = CDOTAMsg_UnitOrder{} }
func (m *CDOTAMsg_UnitOrder) String() string            { return proto.CompactTextString(m) }
func (*CDOTAMsg_UnitOrder) ProtoMessage()               {}
func (*CDOTAMsg_UnitOrder) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{6} }

const Default_CDOTAMsg_UnitOrder_Issuer int32 = -1
const Default_CDOTAMsg_UnitOrder_OrderType DotaunitorderT = DotaunitorderT_DOTA_UNIT_ORDER_NONE

func (m *CDOTAMsg_UnitOrder) GetIssuer() int32 {
	if m != nil && m.Issuer != nil {
		return *m.Issuer
	}
	return Default_CDOTAMsg_UnitOrder_Issuer
}

func (m *CDOTAMsg_UnitOrder) GetOrderType() DotaunitorderT {
	if m != nil && m.OrderType != nil {
		return *m.OrderType
	}
	return Default_CDOTAMsg_UnitOrder_OrderType
}

func (m *CDOTAMsg_UnitOrder) GetUnits() []int32 {
	if m != nil {
		return m.Units
	}
	return nil
}

func (m *CDOTAMsg_UnitOrder) GetTargetIndex() int32 {
	if m != nil && m.TargetIndex != nil {
		return *m.TargetIndex
	}
	return 0
}

func (m *CDOTAMsg_UnitOrder) GetAbilityIndex() int32 {
	if m != nil && m.AbilityIndex != nil {
		return *m.AbilityIndex
	}
	return 0
}

func (m *CDOTAMsg_UnitOrder) GetPosition() *CMsgVector {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *CDOTAMsg_UnitOrder) GetQueue() bool {
	if m != nil && m.Queue != nil {
		return *m.Queue
	}
	return false
}

func (m *CDOTAMsg_UnitOrder) GetSequenceNumber() int32 {
	if m != nil && m.SequenceNumber != nil {
		return *m.SequenceNumber
	}
	return 0
}

func init() {
	proto.RegisterType((*CDOTAMsg_LocationPing)(nil), "dota.CDOTAMsg_LocationPing")
	proto.RegisterType((*CDOTAMsg_ItemAlert)(nil), "dota.CDOTAMsg_ItemAlert")
	proto.RegisterType((*CDOTAMsg_MapLine)(nil), "dota.CDOTAMsg_MapLine")
	proto.RegisterType((*CDOTAMsg_WorldLine)(nil), "dota.CDOTAMsg_WorldLine")
	proto.RegisterType((*CDOTAMsg_SendStatPopup)(nil), "dota.CDOTAMsg_SendStatPopup")
	proto.RegisterType((*CDOTAMsg_CoachHUDPing)(nil), "dota.CDOTAMsg_CoachHUDPing")
	proto.RegisterType((*CDOTAMsg_UnitOrder)(nil), "dota.CDOTAMsg_UnitOrder")
	proto.RegisterEnum("dota.EDOTAStatPopupTypes", EDOTAStatPopupTypes_name, EDOTAStatPopupTypes_value)
	proto.RegisterEnum("dota.DotaunitorderT", DotaunitorderT_name, DotaunitorderT_value)
}

func init() { proto.RegisterFile("dota_commonmessages.proto", fileDescriptor8) }

var fileDescriptor8 = []byte{
	// 998 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0x5d, 0x73, 0xda, 0x46,
	0x14, 0x8d, 0xc0, 0x38, 0xf8, 0xfa, 0x6b, 0xbd, 0xb1, 0x1d, 0xf9, 0x2b, 0xc6, 0xb4, 0x69, 0x5d,
	0x4f, 0xeb, 0x99, 0xe6, 0xd1, 0x6f, 0x42, 0xa8, 0xa0, 0x58, 0x48, 0xcc, 0x6a, 0x71, 0xc7, 0x4f,
	0x3b, 0x32, 0xec, 0x90, 0x6d, 0x40, 0x22, 0xd2, 0x32, 0xb5, 0xf3, 0x94, 0xb7, 0xfe, 0x90, 0xfe,
	0x98, 0xfe, 0xad, 0x8e, 0x56, 0x82, 0x60, 0x2c, 0x27, 0x2f, 0x0c, 0xf7, 0xdc, 0xb3, 0xf7, 0xe3,
	0xdc, 0x23, 0x38, 0x18, 0x44, 0x32, 0x60, 0xfd, 0x68, 0x3c, 0x8e, 0xc2, 0x31, 0x4f, 0x92, 0x60,
	0xc8, 0x93, 0xcb, 0x49, 0x1c, 0xc9, 0x08, 0xaf, 0xa4, 0xa9, 0xc3, 0xfd, 0x90, 0xcb, 0xbf, 0xa3,
	0xf8, 0xe3, 0x5d, 0x90, 0x70, 0xf9, 0x30, 0x99, 0x65, 0xeb, 0x5f, 0x34, 0xd8, 0x33, 0x9b, 0x1e,
	0x35, 0x3a, 0xc9, 0x90, 0x39, 0x51, 0x3f, 0x90, 0x22, 0x0a, 0xbb, 0x22, 0x1c, 0xe2, 0x0d, 0xd0,
	0xee, 0x75, 0xad, 0xa6, 0x9d, 0x57, 0x88, 0x76, 0x9f, 0x46, 0x0f, 0x7a, 0x29, 0x8b, 0x1e, 0xf0,
	0x3e, 0xac, 0xca, 0x20, 0x1e, 0x72, 0xa9, 0x97, 0x15, 0x94, 0x47, 0xf8, 0x14, 0xd6, 0x07, 0x22,
	0xe6, 0x7d, 0xc9, 0x26, 0x22, 0x1c, 0xea, 0x2b, 0x35, 0xed, 0xbc, 0x4a, 0x20, 0x83, 0x54, 0x51,
	0x0c, 0x2b, 0x69, 0x77, 0xbd, 0xa2, 0x9e, 0xa9, 0xff, 0xf5, 0x36, 0xe0, 0xf9, 0x04, 0xb6, 0xe4,
	0x63, 0x63, 0xc4, 0x63, 0xf9, 0xbd, 0xf6, 0x42, 0xf2, 0xb1, 0x18, 0xcc, 0xda, 0x67, 0x51, 0xbd,
	0x0d, 0x68, 0x5e, 0xa9, 0x13, 0x4c, 0x1c, 0x11, 0xf2, 0x6f, 0xd6, 0xd1, 0xe1, 0xa5, 0x08, 0x85,
	0x14, 0xc1, 0x48, 0x15, 0xaa, 0x92, 0x59, 0x58, 0xff, 0x6b, 0x61, 0xa6, 0x3f, 0xa3, 0x78, 0x34,
	0xf8, 0x6e, 0xad, 0x0d, 0xd0, 0x3e, 0xe7, 0xe3, 0x68, 0x9f, 0x17, 0x2b, 0xaf, 0x3c, 0xaa, 0x8c,
	0x11, 0x94, 0x79, 0x38, 0x50, 0x02, 0x54, 0x49, 0xfa, 0xb7, 0xfe, 0xaf, 0x06, 0xfb, 0xf3, 0x66,
	0x3e, 0x0f, 0x07, 0xbe, 0x0c, 0x64, 0x37, 0x9a, 0x4c, 0x27, 0xd8, 0x82, 0x4a, 0x22, 0x1f, 0x46,
	0x5c, 0x35, 0xdd, 0x7a, 0x77, 0x70, 0x99, 0xde, 0xf2, 0xd2, 0x4a, 0xc9, 0x73, 0x12, 0x4d, 0xaf,
	0x79, 0xb5, 0xfb, 0x91, 0x29, 0x98, 0xf9, 0x5d, 0xca, 0x28, 0xbf, 0x97, 0x23, 0x11, 0x72, 0x92,
	0xbd, 0xc6, 0x67, 0xb0, 0x91, 0xc8, 0x40, 0xb2, 0x44, 0xc6, 0x22, 0x1c, 0x26, 0x7a, 0xa9, 0x56,
	0x3e, 0x5f, 0x23, 0xeb, 0x29, 0xe6, 0x67, 0x50, 0x7a, 0x39, 0x45, 0x11, 0xe3, 0xd4, 0x3a, 0x7a,
	0xb9, 0x56, 0x3e, 0xaf, 0x10, 0x48, 0x21, 0x5b, 0x21, 0xf5, 0xce, 0x82, 0x4f, 0xcc, 0x28, 0xe8,
	0x7f, 0x68, 0xf7, 0x9a, 0x8f, 0x7d, 0xb2, 0xf9, 0x48, 0x94, 0xcd, 0x5c, 0x60, 0x39, 0x94, 0x93,
	0x40, 0x7e, 0x50, 0xd2, 0xac, 0x91, 0x59, 0x58, 0xff, 0xaf, 0xb4, 0xa0, 0x70, 0x2f, 0x14, 0xd2,
	0x8b, 0x07, 0x3c, 0xc6, 0x87, 0xb0, 0x2a, 0x92, 0x64, 0xca, 0x63, 0x55, 0x71, 0xe7, 0xaa, 0xf4,
	0xdb, 0xef, 0x24, 0x47, 0xf0, 0x7b, 0x80, 0x28, 0x25, 0x31, 0xe5, 0xa0, 0x92, 0x52, 0x64, 0x2f,
	0x53, 0x24, 0xfd, 0x99, 0x86, 0x42, 0xe6, 0xf9, 0xab, 0x5d, 0x25, 0x45, 0xcf, 0xb5, 0x29, 0xf3,
	0x48, 0xd3, 0x22, 0xcc, 0xf5, 0x5c, 0x8b, 0xac, 0xa9, 0x74, 0xaa, 0x17, 0xde, 0x85, 0x4a, 0xca,
	0x9f, 0x2d, 0x9a, 0x05, 0xa9, 0x4e, 0x99, 0x91, 0x99, 0x08, 0x07, 0xfc, 0x5e, 0x9d, 0xae, 0x42,
	0xd6, 0x33, 0xcc, 0x4e, 0x21, 0xfc, 0x03, 0x6c, 0x06, 0x77, 0x62, 0x24, 0xe4, 0x43, 0xce, 0xc9,
	0x9c, 0xbc, 0x91, 0x83, 0x19, 0xe9, 0x57, 0xa8, 0x4e, 0xa2, 0x44, 0xa4, 0x9f, 0x92, 0xbe, 0x5a,
	0xd3, 0xce, 0xd7, 0xdf, 0xa1, 0x6c, 0x4e, 0xb3, 0x93, 0x0c, 0x6f, 0x78, 0x5f, 0x46, 0x31, 0x99,
	0x33, 0xd2, 0x59, 0x3e, 0x4d, 0xf9, 0x94, 0xeb, 0x2f, 0x95, 0x27, 0xb2, 0x00, 0xff, 0x0c, 0xdb,
	0x09, 0xff, 0x34, 0xe5, 0x61, 0x9f, 0xb3, 0x70, 0x3a, 0xbe, 0xe3, 0xb1, 0x5e, 0x55, 0xad, 0xb6,
	0x66, 0xb0, 0xab, 0xd0, 0x8b, 0x18, 0x5e, 0x15, 0x18, 0x02, 0xeb, 0x50, 0x68, 0x09, 0xf4, 0x02,
	0xef, 0xc1, 0xce, 0x62, 0xa6, 0x11, 0x24, 0xa2, 0x8f, 0x34, 0xbc, 0x0b, 0x68, 0x11, 0xee, 0x46,
	0xa3, 0x11, 0x2a, 0x2d, 0xa3, 0xad, 0x58, 0x0c, 0x50, 0xf9, 0xe2, 0x9f, 0x35, 0xd8, 0x5e, 0xd2,
	0x3c, 0x6d, 0x58, 0xa4, 0x3a, 0x7a, 0x81, 0x7f, 0x84, 0xda, 0x72, 0xa6, 0xe3, 0xdd, 0x58, 0x8c,
	0x7a, 0xac, 0xeb, 0xf9, 0x36, 0xb5, 0x3d, 0x17, 0x69, 0xb8, 0x0e, 0x6f, 0x9e, 0x63, 0x51, 0x83,
	0xb4, 0x2c, 0x8a, 0x4a, 0xf8, 0x14, 0x8e, 0x96, 0x39, 0x06, 0xa5, 0x86, 0x79, 0xad, 0xa8, 0xa8,
	0x8c, 0xcf, 0xe0, 0xe4, 0x19, 0x42, 0x5e, 0x63, 0xa5, 0x88, 0x62, 0x1a, 0x3e, 0xfd, 0x3a, 0x4a,
	0xa5, 0xa8, 0x8d, 0xa2, 0xe4, 0x35, 0x56, 0x8b, 0x36, 0x5a, 0x20, 0x30, 0x4a, 0x2c, 0x0b, 0xbd,
	0x2c, 0xda, 0x48, 0xb1, 0xdc, 0xf9, 0x46, 0xd5, 0xe7, 0x5b, 0x79, 0xad, 0x96, 0x63, 0xa1, 0xb5,
	0xa2, 0x71, 0xdb, 0x9e, 0xd3, 0xfc, 0x3a, 0x2e, 0x14, 0x51, 0x28, 0x31, 0x6c, 0x97, 0x19, 0x0d,
	0xdb, 0xb1, 0xe9, 0x2d, 0x5a, 0xc7, 0x27, 0x70, 0xb0, 0x4c, 0x69, 0x12, 0xaf, 0xcb, 0x6c, 0x6a,
	0x75, 0xd0, 0x46, 0x51, 0xba, 0x65, 0xdf, 0x58, 0x59, 0x7a, 0xb3, 0x68, 0xc8, 0xae, 0x6d, 0x5e,
	0xf7, 0xf2, 0xf7, 0x5b, 0xdf, 0x20, 0x90, 0x9e, 0x6b, 0xa1, 0xed, 0xa2, 0x11, 0xbb, 0x3d, 0x62,
	0xb6, 0x0d, 0x3f, 0x6f, 0x82, 0x8a, 0x66, 0xf0, 0x2d, 0xc7, 0xc9, 0xd2, 0x3b, 0x45, 0x92, 0x37,
	0x6d, 0xdf, 0xf0, 0x7d, 0xab, 0xd3, 0x70, 0xf2, 0x22, 0xb8, 0xa8, 0x88, 0x32, 0x91, 0x4a, 0xbf,
	0x7a, 0xfe, 0x6e, 0x4a, 0x6d, 0x66, 0xf4, 0xa8, 0x87, 0x76, 0x8b, 0x9c, 0xec, 0x53, 0xaf, 0x8b,
	0xf6, 0xf0, 0x01, 0xec, 0x3d, 0x51, 0xda, 0xe8, 0xb9, 0x14, 0xed, 0xe3, 0x23, 0x78, 0xbd, 0x9c,
	0x6a, 0xf4, 0x6e, 0x1b, 0x86, 0x79, 0x8d, 0x5e, 0x17, 0xbd, 0x6b, 0x39, 0xb7, 0xdd, 0x36, 0xd2,
	0xf1, 0x2f, 0xf0, 0x76, 0x39, 0x65, 0xbd, 0xb7, 0x4c, 0xaa, 0x46, 0x66, 0x7f, 0x10, 0xaf, 0xc3,
	0x7c, 0x6a, 0xf8, 0x6d, 0x74, 0x50, 0xb4, 0x9c, 0x9a, 0x5e, 0x69, 0x7c, 0x88, 0x6b, 0x70, 0xfc,
	0xf4, 0x08, 0x6e, 0x6b, 0xee, 0x82, 0x23, 0xfc, 0x16, 0xce, 0x9e, 0xfb, 0xc4, 0x9a, 0x36, 0xb1,
	0x4c, 0xe5, 0xa7, 0x63, 0x7c, 0x08, 0xfb, 0x4f, 0x0a, 0x19, 0x94, 0x78, 0x0e, 0x3a, 0xc1, 0x17,
	0xf0, 0xd3, 0x72, 0xee, 0xc6, 0x32, 0xa9, 0x47, 0x66, 0xde, 0x9f, 0xfb, 0xf2, 0x4d, 0xd1, 0xd6,
	0xc4, 0x68, 0x1a, 0x04, 0x9d, 0x16, 0x6d, 0xed, 0x5b, 0xf9, 0xce, 0xa6, 0xd7, 0x69, 0xd8, 0xae,
	0xc5, 0x1c, 0xcf, 0xbc, 0x46, 0x35, 0x7c, 0x0c, 0xfa, 0x93, 0xad, 0x3d, 0x97, 0xda, 0x6e, 0xcf,
	0x42, 0x67, 0x8d, 0x4a, 0x5b, 0xfb, 0xa2, 0xbd, 0xf8, 0x3f, 0x00, 0x00, 0xff, 0xff, 0x70, 0x39,
	0x49, 0xf0, 0x00, 0x09, 0x00, 0x00,
}
