// Code generated by protoc-gen-go.
// source: dota_clientmessages.proto
// DO NOT EDIT!

package dota

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EDotaClientMessages int32

const (
	EDotaClientMessages_DOTA_CM_MapLine                                EDotaClientMessages = 301
	EDotaClientMessages_DOTA_CM_AspectRatio                            EDotaClientMessages = 302
	EDotaClientMessages_DOTA_CM_MapPing                                EDotaClientMessages = 303
	EDotaClientMessages_DOTA_CM_UnitsAutoAttack                        EDotaClientMessages = 304
	EDotaClientMessages_DOTA_CM_SearchString                           EDotaClientMessages = 307
	EDotaClientMessages_DOTA_CM_Pause                                  EDotaClientMessages = 308
	EDotaClientMessages_DOTA_CM_ShopViewMode                           EDotaClientMessages = 309
	EDotaClientMessages_DOTA_CM_SetUnitShareFlag                       EDotaClientMessages = 310
	EDotaClientMessages_DOTA_CM_SwapRequest                            EDotaClientMessages = 311
	EDotaClientMessages_DOTA_CM_SwapAccept                             EDotaClientMessages = 312
	EDotaClientMessages_DOTA_CM_WorldLine                              EDotaClientMessages = 313
	EDotaClientMessages_DOTA_CM_RequestGraphUpdate                     EDotaClientMessages = 314
	EDotaClientMessages_DOTA_CM_ItemAlert                              EDotaClientMessages = 315
	EDotaClientMessages_DOTA_CM_ChatWheel                              EDotaClientMessages = 316
	EDotaClientMessages_DOTA_CM_SendStatPopup                          EDotaClientMessages = 317
	EDotaClientMessages_DOTA_CM_BeginLastHitChallenge                  EDotaClientMessages = 318
	EDotaClientMessages_DOTA_CM_UpdateQuickBuy                         EDotaClientMessages = 319
	EDotaClientMessages_DOTA_CM_UpdateCoachListen                      EDotaClientMessages = 320
	EDotaClientMessages_DOTA_CM_CoachHUDPing                           EDotaClientMessages = 321
	EDotaClientMessages_DOTA_CM_RecordVote                             EDotaClientMessages = 322
	EDotaClientMessages_DOTA_CM_UnitsAutoAttackAfterSpell              EDotaClientMessages = 323
	EDotaClientMessages_DOTA_CM_WillPurchaseAlert                      EDotaClientMessages = 324
	EDotaClientMessages_DOTA_CM_PlayerShowCase                         EDotaClientMessages = 325
	EDotaClientMessages_DOTA_CM_TeleportRequiresHalt                   EDotaClientMessages = 326
	EDotaClientMessages_DOTA_CM_CameraZoomAmount                       EDotaClientMessages = 327
	EDotaClientMessages_DOTA_CM_BroadcasterUsingCamerman               EDotaClientMessages = 328
	EDotaClientMessages_DOTA_CM_BroadcasterUsingAssistedCameraOperator EDotaClientMessages = 329
	EDotaClientMessages_DOTA_CM_EnemyItemAlert                         EDotaClientMessages = 330
	EDotaClientMessages_DOTA_CM_FreeInventory                          EDotaClientMessages = 331
	EDotaClientMessages_DOTA_CM_BuyBackStateAlert                      EDotaClientMessages = 332
	EDotaClientMessages_DOTA_CM_QuickBuyAlert                          EDotaClientMessages = 333
	EDotaClientMessages_DOTA_CM_HeroStatueLike                         EDotaClientMessages = 334
	EDotaClientMessages_DOTA_CM_ModifierAlert                          EDotaClientMessages = 335
	EDotaClientMessages_DOTA_CM_TeamShowcaseEditor                     EDotaClientMessages = 336
	EDotaClientMessages_DOTA_CM_HPManaAlert                            EDotaClientMessages = 337
	EDotaClientMessages_DOTA_CM_GlyphAlert                             EDotaClientMessages = 338
	EDotaClientMessages_DOTA_CM_TeamShowcaseClientData                 EDotaClientMessages = 339
	EDotaClientMessages_DOTA_CM_PlayTeamShowcase                       EDotaClientMessages = 340
	EDotaClientMessages_DOTA_CM_EventCNY2015Cmd                        EDotaClientMessages = 341
	EDotaClientMessages_DOTA_CM_FillEmptySlotsWithBots                 EDotaClientMessages = 342
	EDotaClientMessages_DOTA_CM_DemoHero                               EDotaClientMessages = 343
	EDotaClientMessages_DOTA_CM_AbilityLearnModeToggled                EDotaClientMessages = 344
	EDotaClientMessages_DOTA_CM_AbilityStartUse                        EDotaClientMessages = 345
	EDotaClientMessages_DOTA_CM_ChallengeSelect                        EDotaClientMessages = 346
	EDotaClientMessages_DOTA_CM_ChallengeReroll                        EDotaClientMessages = 347
	EDotaClientMessages_DOTA_CM_ClickedBuff                            EDotaClientMessages = 348
	EDotaClientMessages_DOTA_CM_CoinWager                              EDotaClientMessages = 349
	EDotaClientMessages_DOTA_CM_ExecuteOrders                          EDotaClientMessages = 350
	EDotaClientMessages_DOTA_CM_XPAlert                                EDotaClientMessages = 351
	EDotaClientMessages_DOTA_CM_EventPointsTip                         EDotaClientMessages = 353
	EDotaClientMessages_DOTA_CM_MatchMetadata                          EDotaClientMessages = 354
	EDotaClientMessages_DOTA_CM_KillMyHero                             EDotaClientMessages = 355
	EDotaClientMessages_DOTA_CM_QuestStatus                            EDotaClientMessages = 356
	EDotaClientMessages_DOTA_CM_ToggleAutoattack                       EDotaClientMessages = 357
	EDotaClientMessages_DOTA_CM_SpecialAbility                         EDotaClientMessages = 358
	EDotaClientMessages_DOTA_CM_KillcamDamageTaken                     EDotaClientMessages = 359
	EDotaClientMessages_DOTA_CM_SetEnemyStartingPosition               EDotaClientMessages = 360
	EDotaClientMessages_DOTA_CM_SetDesiredWardPlacement                EDotaClientMessages = 361
	EDotaClientMessages_DOTA_CM_RollDice                               EDotaClientMessages = 362
	EDotaClientMessages_DOTA_CM_FlipCoin                               EDotaClientMessages = 363
	EDotaClientMessages_DOTA_CM_RequestItemSuggestions                 EDotaClientMessages = 364
	EDotaClientMessages_DOTA_CM_MakeTeamCaptain                        EDotaClientMessages = 365
)

var EDotaClientMessages_name = map[int32]string{
	301: "DOTA_CM_MapLine",
	302: "DOTA_CM_AspectRatio",
	303: "DOTA_CM_MapPing",
	304: "DOTA_CM_UnitsAutoAttack",
	307: "DOTA_CM_SearchString",
	308: "DOTA_CM_Pause",
	309: "DOTA_CM_ShopViewMode",
	310: "DOTA_CM_SetUnitShareFlag",
	311: "DOTA_CM_SwapRequest",
	312: "DOTA_CM_SwapAccept",
	313: "DOTA_CM_WorldLine",
	314: "DOTA_CM_RequestGraphUpdate",
	315: "DOTA_CM_ItemAlert",
	316: "DOTA_CM_ChatWheel",
	317: "DOTA_CM_SendStatPopup",
	318: "DOTA_CM_BeginLastHitChallenge",
	319: "DOTA_CM_UpdateQuickBuy",
	320: "DOTA_CM_UpdateCoachListen",
	321: "DOTA_CM_CoachHUDPing",
	322: "DOTA_CM_RecordVote",
	323: "DOTA_CM_UnitsAutoAttackAfterSpell",
	324: "DOTA_CM_WillPurchaseAlert",
	325: "DOTA_CM_PlayerShowCase",
	326: "DOTA_CM_TeleportRequiresHalt",
	327: "DOTA_CM_CameraZoomAmount",
	328: "DOTA_CM_BroadcasterUsingCamerman",
	329: "DOTA_CM_BroadcasterUsingAssistedCameraOperator",
	330: "DOTA_CM_EnemyItemAlert",
	331: "DOTA_CM_FreeInventory",
	332: "DOTA_CM_BuyBackStateAlert",
	333: "DOTA_CM_QuickBuyAlert",
	334: "DOTA_CM_HeroStatueLike",
	335: "DOTA_CM_ModifierAlert",
	336: "DOTA_CM_TeamShowcaseEditor",
	337: "DOTA_CM_HPManaAlert",
	338: "DOTA_CM_GlyphAlert",
	339: "DOTA_CM_TeamShowcaseClientData",
	340: "DOTA_CM_PlayTeamShowcase",
	341: "DOTA_CM_EventCNY2015Cmd",
	342: "DOTA_CM_FillEmptySlotsWithBots",
	343: "DOTA_CM_DemoHero",
	344: "DOTA_CM_AbilityLearnModeToggled",
	345: "DOTA_CM_AbilityStartUse",
	346: "DOTA_CM_ChallengeSelect",
	347: "DOTA_CM_ChallengeReroll",
	348: "DOTA_CM_ClickedBuff",
	349: "DOTA_CM_CoinWager",
	350: "DOTA_CM_ExecuteOrders",
	351: "DOTA_CM_XPAlert",
	353: "DOTA_CM_EventPointsTip",
	354: "DOTA_CM_MatchMetadata",
	355: "DOTA_CM_KillMyHero",
	356: "DOTA_CM_QuestStatus",
	357: "DOTA_CM_ToggleAutoattack",
	358: "DOTA_CM_SpecialAbility",
	359: "DOTA_CM_KillcamDamageTaken",
	360: "DOTA_CM_SetEnemyStartingPosition",
	361: "DOTA_CM_SetDesiredWardPlacement",
	362: "DOTA_CM_RollDice",
	363: "DOTA_CM_FlipCoin",
	364: "DOTA_CM_RequestItemSuggestions",
	365: "DOTA_CM_MakeTeamCaptain",
}
var EDotaClientMessages_value = map[string]int32{
	"DOTA_CM_MapLine":                                301,
	"DOTA_CM_AspectRatio":                            302,
	"DOTA_CM_MapPing":                                303,
	"DOTA_CM_UnitsAutoAttack":                        304,
	"DOTA_CM_SearchString":                           307,
	"DOTA_CM_Pause":                                  308,
	"DOTA_CM_ShopViewMode":                           309,
	"DOTA_CM_SetUnitShareFlag":                       310,
	"DOTA_CM_SwapRequest":                            311,
	"DOTA_CM_SwapAccept":                             312,
	"DOTA_CM_WorldLine":                              313,
	"DOTA_CM_RequestGraphUpdate":                     314,
	"DOTA_CM_ItemAlert":                              315,
	"DOTA_CM_ChatWheel":                              316,
	"DOTA_CM_SendStatPopup":                          317,
	"DOTA_CM_BeginLastHitChallenge":                  318,
	"DOTA_CM_UpdateQuickBuy":                         319,
	"DOTA_CM_UpdateCoachListen":                      320,
	"DOTA_CM_CoachHUDPing":                           321,
	"DOTA_CM_RecordVote":                             322,
	"DOTA_CM_UnitsAutoAttackAfterSpell":              323,
	"DOTA_CM_WillPurchaseAlert":                      324,
	"DOTA_CM_PlayerShowCase":                         325,
	"DOTA_CM_TeleportRequiresHalt":                   326,
	"DOTA_CM_CameraZoomAmount":                       327,
	"DOTA_CM_BroadcasterUsingCamerman":               328,
	"DOTA_CM_BroadcasterUsingAssistedCameraOperator": 329,
	"DOTA_CM_EnemyItemAlert":                         330,
	"DOTA_CM_FreeInventory":                          331,
	"DOTA_CM_BuyBackStateAlert":                      332,
	"DOTA_CM_QuickBuyAlert":                          333,
	"DOTA_CM_HeroStatueLike":                         334,
	"DOTA_CM_ModifierAlert":                          335,
	"DOTA_CM_TeamShowcaseEditor":                     336,
	"DOTA_CM_HPManaAlert":                            337,
	"DOTA_CM_GlyphAlert":                             338,
	"DOTA_CM_TeamShowcaseClientData":                 339,
	"DOTA_CM_PlayTeamShowcase":                       340,
	"DOTA_CM_EventCNY2015Cmd":                        341,
	"DOTA_CM_FillEmptySlotsWithBots":                 342,
	"DOTA_CM_DemoHero":                               343,
	"DOTA_CM_AbilityLearnModeToggled":                344,
	"DOTA_CM_AbilityStartUse":                        345,
	"DOTA_CM_ChallengeSelect":                        346,
	"DOTA_CM_ChallengeReroll":                        347,
	"DOTA_CM_ClickedBuff":                            348,
	"DOTA_CM_CoinWager":                              349,
	"DOTA_CM_ExecuteOrders":                          350,
	"DOTA_CM_XPAlert":                                351,
	"DOTA_CM_EventPointsTip":                         353,
	"DOTA_CM_MatchMetadata":                          354,
	"DOTA_CM_KillMyHero":                             355,
	"DOTA_CM_QuestStatus":                            356,
	"DOTA_CM_ToggleAutoattack":                       357,
	"DOTA_CM_SpecialAbility":                         358,
	"DOTA_CM_KillcamDamageTaken":                     359,
	"DOTA_CM_SetEnemyStartingPosition":               360,
	"DOTA_CM_SetDesiredWardPlacement":                361,
	"DOTA_CM_RollDice":                               362,
	"DOTA_CM_FlipCoin":                               363,
	"DOTA_CM_RequestItemSuggestions":                 364,
	"DOTA_CM_MakeTeamCaptain":                        365,
}

func (x EDotaClientMessages) Enum() *EDotaClientMessages {
	p := new(EDotaClientMessages)
	*p = x
	return p
}
func (x EDotaClientMessages) String() string {
	return proto.EnumName(EDotaClientMessages_name, int32(x))
}
func (x *EDotaClientMessages) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EDotaClientMessages_value, data, "EDotaClientMessages")
	if err != nil {
		return err
	}
	*x = EDotaClientMessages(value)
	return nil
}
func (EDotaClientMessages) EnumDescriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

type CDOTAClientMsg_UnitsAutoAttackMode_EMode int32

const (
	CDOTAClientMsg_UnitsAutoAttackMode_INVALID         CDOTAClientMsg_UnitsAutoAttackMode_EMode = -1
	CDOTAClientMsg_UnitsAutoAttackMode_NEVER           CDOTAClientMsg_UnitsAutoAttackMode_EMode = 0
	CDOTAClientMsg_UnitsAutoAttackMode_AFTER_SPELLCAST CDOTAClientMsg_UnitsAutoAttackMode_EMode = 1
	CDOTAClientMsg_UnitsAutoAttackMode_ALWAYS          CDOTAClientMsg_UnitsAutoAttackMode_EMode = 2
)

var CDOTAClientMsg_UnitsAutoAttackMode_EMode_name = map[int32]string{
	-1: "INVALID",
	0:  "NEVER",
	1:  "AFTER_SPELLCAST",
	2:  "ALWAYS",
}
var CDOTAClientMsg_UnitsAutoAttackMode_EMode_value = map[string]int32{
	"INVALID":         -1,
	"NEVER":           0,
	"AFTER_SPELLCAST": 1,
	"ALWAYS":          2,
}

func (x CDOTAClientMsg_UnitsAutoAttackMode_EMode) Enum() *CDOTAClientMsg_UnitsAutoAttackMode_EMode {
	p := new(CDOTAClientMsg_UnitsAutoAttackMode_EMode)
	*p = x
	return p
}
func (x CDOTAClientMsg_UnitsAutoAttackMode_EMode) String() string {
	return proto.EnumName(CDOTAClientMsg_UnitsAutoAttackMode_EMode_name, int32(x))
}
func (x *CDOTAClientMsg_UnitsAutoAttackMode_EMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CDOTAClientMsg_UnitsAutoAttackMode_EMode_value, data, "CDOTAClientMsg_UnitsAutoAttackMode_EMode")
	if err != nil {
		return err
	}
	*x = CDOTAClientMsg_UnitsAutoAttackMode_EMode(value)
	return nil
}
func (CDOTAClientMsg_UnitsAutoAttackMode_EMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor7, []int{9, 0}
}

type CDOTAClientMsg_UnitsAutoAttackMode_EUnitType int32

const (
	CDOTAClientMsg_UnitsAutoAttackMode_NORMAL   CDOTAClientMsg_UnitsAutoAttackMode_EUnitType = 0
	CDOTAClientMsg_UnitsAutoAttackMode_SUMMONED CDOTAClientMsg_UnitsAutoAttackMode_EUnitType = 1
)

var CDOTAClientMsg_UnitsAutoAttackMode_EUnitType_name = map[int32]string{
	0: "NORMAL",
	1: "SUMMONED",
}
var CDOTAClientMsg_UnitsAutoAttackMode_EUnitType_value = map[string]int32{
	"NORMAL":   0,
	"SUMMONED": 1,
}

func (x CDOTAClientMsg_UnitsAutoAttackMode_EUnitType) Enum() *CDOTAClientMsg_UnitsAutoAttackMode_EUnitType {
	p := new(CDOTAClientMsg_UnitsAutoAttackMode_EUnitType)
	*p = x
	return p
}
func (x CDOTAClientMsg_UnitsAutoAttackMode_EUnitType) String() string {
	return proto.EnumName(CDOTAClientMsg_UnitsAutoAttackMode_EUnitType_name, int32(x))
}
func (x *CDOTAClientMsg_UnitsAutoAttackMode_EUnitType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CDOTAClientMsg_UnitsAutoAttackMode_EUnitType_value, data, "CDOTAClientMsg_UnitsAutoAttackMode_EUnitType")
	if err != nil {
		return err
	}
	*x = CDOTAClientMsg_UnitsAutoAttackMode_EUnitType(value)
	return nil
}
func (CDOTAClientMsg_UnitsAutoAttackMode_EUnitType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor7, []int{9, 1}
}

type CDOTAClientMsg_MapPing struct {
	LocationPing     *CDOTAMsg_LocationPing `protobuf:"bytes,1,opt,name=location_ping,json=locationPing" json:"location_ping,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *CDOTAClientMsg_MapPing) Reset()                    { *m = CDOTAClientMsg_MapPing{} }
func (m *CDOTAClientMsg_MapPing) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_MapPing) ProtoMessage()               {}
func (*CDOTAClientMsg_MapPing) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

func (m *CDOTAClientMsg_MapPing) GetLocationPing() *CDOTAMsg_LocationPing {
	if m != nil {
		return m.LocationPing
	}
	return nil
}

type CDOTAClientMsg_ItemAlert struct {
	ItemAlert        *CDOTAMsg_ItemAlert `protobuf:"bytes,1,opt,name=item_alert,json=itemAlert" json:"item_alert,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CDOTAClientMsg_ItemAlert) Reset()                    { *m = CDOTAClientMsg_ItemAlert{} }
func (m *CDOTAClientMsg_ItemAlert) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_ItemAlert) ProtoMessage()               {}
func (*CDOTAClientMsg_ItemAlert) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{1} }

func (m *CDOTAClientMsg_ItemAlert) GetItemAlert() *CDOTAMsg_ItemAlert {
	if m != nil {
		return m.ItemAlert
	}
	return nil
}

type CDOTAClientMsg_EnemyItemAlert struct {
	ItemEntindex     *uint32 `protobuf:"varint,1,opt,name=item_entindex,json=itemEntindex" json:"item_entindex,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAClientMsg_EnemyItemAlert) Reset()                    { *m = CDOTAClientMsg_EnemyItemAlert{} }
func (m *CDOTAClientMsg_EnemyItemAlert) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_EnemyItemAlert) ProtoMessage()               {}
func (*CDOTAClientMsg_EnemyItemAlert) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{2} }

func (m *CDOTAClientMsg_EnemyItemAlert) GetItemEntindex() uint32 {
	if m != nil && m.ItemEntindex != nil {
		return *m.ItemEntindex
	}
	return 0
}

type CDOTAClientMsg_ModifierAlert struct {
	BuffInternalIndex *int32  `protobuf:"varint,1,opt,name=buff_internal_index,json=buffInternalIndex" json:"buff_internal_index,omitempty"`
	TargetEntindex    *uint32 `protobuf:"varint,2,opt,name=target_entindex,json=targetEntindex" json:"target_entindex,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CDOTAClientMsg_ModifierAlert) Reset()                    { *m = CDOTAClientMsg_ModifierAlert{} }
func (m *CDOTAClientMsg_ModifierAlert) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_ModifierAlert) ProtoMessage()               {}
func (*CDOTAClientMsg_ModifierAlert) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{3} }

func (m *CDOTAClientMsg_ModifierAlert) GetBuffInternalIndex() int32 {
	if m != nil && m.BuffInternalIndex != nil {
		return *m.BuffInternalIndex
	}
	return 0
}

func (m *CDOTAClientMsg_ModifierAlert) GetTargetEntindex() uint32 {
	if m != nil && m.TargetEntindex != nil {
		return *m.TargetEntindex
	}
	return 0
}

type CDOTAClientMsg_ClickedBuff struct {
	BuffInternalIndex *int32  `protobuf:"varint,1,opt,name=buff_internal_index,json=buffInternalIndex" json:"buff_internal_index,omitempty"`
	TargetEntindex    *uint32 `protobuf:"varint,2,opt,name=target_entindex,json=targetEntindex" json:"target_entindex,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CDOTAClientMsg_ClickedBuff) Reset()                    { *m = CDOTAClientMsg_ClickedBuff{} }
func (m *CDOTAClientMsg_ClickedBuff) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_ClickedBuff) ProtoMessage()               {}
func (*CDOTAClientMsg_ClickedBuff) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{4} }

func (m *CDOTAClientMsg_ClickedBuff) GetBuffInternalIndex() int32 {
	if m != nil && m.BuffInternalIndex != nil {
		return *m.BuffInternalIndex
	}
	return 0
}

func (m *CDOTAClientMsg_ClickedBuff) GetTargetEntindex() uint32 {
	if m != nil && m.TargetEntindex != nil {
		return *m.TargetEntindex
	}
	return 0
}

type CDOTAClientMsg_HPManaAlert struct {
	TargetEntindex   *uint32 `protobuf:"varint,1,opt,name=target_entindex,json=targetEntindex" json:"target_entindex,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAClientMsg_HPManaAlert) Reset()                    { *m = CDOTAClientMsg_HPManaAlert{} }
func (m *CDOTAClientMsg_HPManaAlert) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_HPManaAlert) ProtoMessage()               {}
func (*CDOTAClientMsg_HPManaAlert) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{5} }

func (m *CDOTAClientMsg_HPManaAlert) GetTargetEntindex() uint32 {
	if m != nil && m.TargetEntindex != nil {
		return *m.TargetEntindex
	}
	return 0
}

type CDOTAClientMsg_GlyphAlert struct {
	Negative         *bool  `protobuf:"varint,1,opt,name=negative" json:"negative,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAClientMsg_GlyphAlert) Reset()                    { *m = CDOTAClientMsg_GlyphAlert{} }
func (m *CDOTAClientMsg_GlyphAlert) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_GlyphAlert) ProtoMessage()               {}
func (*CDOTAClientMsg_GlyphAlert) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{6} }

func (m *CDOTAClientMsg_GlyphAlert) GetNegative() bool {
	if m != nil && m.Negative != nil {
		return *m.Negative
	}
	return false
}

type CDOTAClientMsg_MapLine struct {
	Mapline          *CDOTAMsg_MapLine `protobuf:"bytes,1,opt,name=mapline" json:"mapline,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *CDOTAClientMsg_MapLine) Reset()                    { *m = CDOTAClientMsg_MapLine{} }
func (m *CDOTAClientMsg_MapLine) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_MapLine) ProtoMessage()               {}
func (*CDOTAClientMsg_MapLine) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{7} }

func (m *CDOTAClientMsg_MapLine) GetMapline() *CDOTAMsg_MapLine {
	if m != nil {
		return m.Mapline
	}
	return nil
}

type CDOTAClientMsg_AspectRatio struct {
	Ratio            *float32 `protobuf:"fixed32,1,opt,name=ratio" json:"ratio,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAClientMsg_AspectRatio) Reset()                    { *m = CDOTAClientMsg_AspectRatio{} }
func (m *CDOTAClientMsg_AspectRatio) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_AspectRatio) ProtoMessage()               {}
func (*CDOTAClientMsg_AspectRatio) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{8} }

func (m *CDOTAClientMsg_AspectRatio) GetRatio() float32 {
	if m != nil && m.Ratio != nil {
		return *m.Ratio
	}
	return 0
}

type CDOTAClientMsg_UnitsAutoAttackMode struct {
	Mode             *CDOTAClientMsg_UnitsAutoAttackMode_EMode     `protobuf:"varint,1,opt,name=mode,enum=dota.CDOTAClientMsg_UnitsAutoAttackMode_EMode,def=-1" json:"mode,omitempty"`
	UnitType         *CDOTAClientMsg_UnitsAutoAttackMode_EUnitType `protobuf:"varint,2,opt,name=unit_type,json=unitType,enum=dota.CDOTAClientMsg_UnitsAutoAttackMode_EUnitType,def=0" json:"unit_type,omitempty"`
	XXX_unrecognized []byte                                        `json:"-"`
}

func (m *CDOTAClientMsg_UnitsAutoAttackMode) Reset()         { *m = CDOTAClientMsg_UnitsAutoAttackMode{} }
func (m *CDOTAClientMsg_UnitsAutoAttackMode) String() string { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_UnitsAutoAttackMode) ProtoMessage()    {}
func (*CDOTAClientMsg_UnitsAutoAttackMode) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{9}
}

const Default_CDOTAClientMsg_UnitsAutoAttackMode_Mode CDOTAClientMsg_UnitsAutoAttackMode_EMode = CDOTAClientMsg_UnitsAutoAttackMode_INVALID
const Default_CDOTAClientMsg_UnitsAutoAttackMode_UnitType CDOTAClientMsg_UnitsAutoAttackMode_EUnitType = CDOTAClientMsg_UnitsAutoAttackMode_NORMAL

func (m *CDOTAClientMsg_UnitsAutoAttackMode) GetMode() CDOTAClientMsg_UnitsAutoAttackMode_EMode {
	if m != nil && m.Mode != nil {
		return *m.Mode
	}
	return Default_CDOTAClientMsg_UnitsAutoAttackMode_Mode
}

func (m *CDOTAClientMsg_UnitsAutoAttackMode) GetUnitType() CDOTAClientMsg_UnitsAutoAttackMode_EUnitType {
	if m != nil && m.UnitType != nil {
		return *m.UnitType
	}
	return Default_CDOTAClientMsg_UnitsAutoAttackMode_UnitType
}

type CDOTAClientMsg_UnitsAutoAttackAfterSpell struct {
	Enabled          *bool  `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAClientMsg_UnitsAutoAttackAfterSpell) Reset() {
	*m = CDOTAClientMsg_UnitsAutoAttackAfterSpell{}
}
func (m *CDOTAClientMsg_UnitsAutoAttackAfterSpell) String() string { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_UnitsAutoAttackAfterSpell) ProtoMessage()    {}
func (*CDOTAClientMsg_UnitsAutoAttackAfterSpell) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{10}
}

func (m *CDOTAClientMsg_UnitsAutoAttackAfterSpell) GetEnabled() bool {
	if m != nil && m.Enabled != nil {
		return *m.Enabled
	}
	return false
}

type CDOTAClientMsg_TeleportRequiresHalt struct {
	Enabled          *bool  `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAClientMsg_TeleportRequiresHalt) Reset()         { *m = CDOTAClientMsg_TeleportRequiresHalt{} }
func (m *CDOTAClientMsg_TeleportRequiresHalt) String() string { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_TeleportRequiresHalt) ProtoMessage()    {}
func (*CDOTAClientMsg_TeleportRequiresHalt) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{11}
}

func (m *CDOTAClientMsg_TeleportRequiresHalt) GetEnabled() bool {
	if m != nil && m.Enabled != nil {
		return *m.Enabled
	}
	return false
}

type CDOTAClientMsg_SearchString struct {
	Search           *string `protobuf:"bytes,1,opt,name=search" json:"search,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAClientMsg_SearchString) Reset()                    { *m = CDOTAClientMsg_SearchString{} }
func (m *CDOTAClientMsg_SearchString) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_SearchString) ProtoMessage()               {}
func (*CDOTAClientMsg_SearchString) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{12} }

func (m *CDOTAClientMsg_SearchString) GetSearch() string {
	if m != nil && m.Search != nil {
		return *m.Search
	}
	return ""
}

type CDOTAClientMsg_Pause struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAClientMsg_Pause) Reset()                    { *m = CDOTAClientMsg_Pause{} }
func (m *CDOTAClientMsg_Pause) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_Pause) ProtoMessage()               {}
func (*CDOTAClientMsg_Pause) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{13} }

type CDOTAClientMsg_ShopViewMode struct {
	Mode             *uint32 `protobuf:"varint,1,opt,name=mode" json:"mode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAClientMsg_ShopViewMode) Reset()                    { *m = CDOTAClientMsg_ShopViewMode{} }
func (m *CDOTAClientMsg_ShopViewMode) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_ShopViewMode) ProtoMessage()               {}
func (*CDOTAClientMsg_ShopViewMode) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{14} }

func (m *CDOTAClientMsg_ShopViewMode) GetMode() uint32 {
	if m != nil && m.Mode != nil {
		return *m.Mode
	}
	return 0
}

type CDOTAClientMsg_SetUnitShareFlag struct {
	PlayerID         *uint32 `protobuf:"varint,1,opt,name=playerID" json:"playerID,omitempty"`
	Flag             *uint32 `protobuf:"varint,2,opt,name=flag" json:"flag,omitempty"`
	State            *bool   `protobuf:"varint,3,opt,name=state" json:"state,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAClientMsg_SetUnitShareFlag) Reset()         { *m = CDOTAClientMsg_SetUnitShareFlag{} }
func (m *CDOTAClientMsg_SetUnitShareFlag) String() string { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_SetUnitShareFlag) ProtoMessage()    {}
func (*CDOTAClientMsg_SetUnitShareFlag) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{15}
}

func (m *CDOTAClientMsg_SetUnitShareFlag) GetPlayerID() uint32 {
	if m != nil && m.PlayerID != nil {
		return *m.PlayerID
	}
	return 0
}

func (m *CDOTAClientMsg_SetUnitShareFlag) GetFlag() uint32 {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return 0
}

func (m *CDOTAClientMsg_SetUnitShareFlag) GetState() bool {
	if m != nil && m.State != nil {
		return *m.State
	}
	return false
}

type CDOTAClientMsg_SwapRequest struct {
	PlayerId         *uint32 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAClientMsg_SwapRequest) Reset()                    { *m = CDOTAClientMsg_SwapRequest{} }
func (m *CDOTAClientMsg_SwapRequest) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_SwapRequest) ProtoMessage()               {}
func (*CDOTAClientMsg_SwapRequest) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{16} }

func (m *CDOTAClientMsg_SwapRequest) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

type CDOTAClientMsg_SwapAccept struct {
	PlayerId         *uint32 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAClientMsg_SwapAccept) Reset()                    { *m = CDOTAClientMsg_SwapAccept{} }
func (m *CDOTAClientMsg_SwapAccept) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_SwapAccept) ProtoMessage()               {}
func (*CDOTAClientMsg_SwapAccept) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{17} }

func (m *CDOTAClientMsg_SwapAccept) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

type CDOTAClientMsg_WorldLine struct {
	Worldline        *CDOTAMsg_WorldLine `protobuf:"bytes,1,opt,name=worldline" json:"worldline,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CDOTAClientMsg_WorldLine) Reset()                    { *m = CDOTAClientMsg_WorldLine{} }
func (m *CDOTAClientMsg_WorldLine) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_WorldLine) ProtoMessage()               {}
func (*CDOTAClientMsg_WorldLine) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{18} }

func (m *CDOTAClientMsg_WorldLine) GetWorldline() *CDOTAMsg_WorldLine {
	if m != nil {
		return m.Worldline
	}
	return nil
}

type CDOTAClientMsg_RequestGraphUpdate struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAClientMsg_RequestGraphUpdate) Reset()         { *m = CDOTAClientMsg_RequestGraphUpdate{} }
func (m *CDOTAClientMsg_RequestGraphUpdate) String() string { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_RequestGraphUpdate) ProtoMessage()    {}
func (*CDOTAClientMsg_RequestGraphUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{19}
}

type CDOTAClientMsg_ChatWheel struct {
	ChatMessageId    *uint32 `protobuf:"varint,1,opt,name=chat_message_id,json=chatMessageId" json:"chat_message_id,omitempty"`
	ParamHeroId      *uint32 `protobuf:"varint,2,opt,name=param_hero_id,json=paramHeroId" json:"param_hero_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAClientMsg_ChatWheel) Reset()                    { *m = CDOTAClientMsg_ChatWheel{} }
func (m *CDOTAClientMsg_ChatWheel) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_ChatWheel) ProtoMessage()               {}
func (*CDOTAClientMsg_ChatWheel) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{20} }

func (m *CDOTAClientMsg_ChatWheel) GetChatMessageId() uint32 {
	if m != nil && m.ChatMessageId != nil {
		return *m.ChatMessageId
	}
	return 0
}

func (m *CDOTAClientMsg_ChatWheel) GetParamHeroId() uint32 {
	if m != nil && m.ParamHeroId != nil {
		return *m.ParamHeroId
	}
	return 0
}

type CDOTAClientMsg_SendStatPopup struct {
	Statpopup        *CDOTAMsg_SendStatPopup `protobuf:"bytes,1,opt,name=statpopup" json:"statpopup,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *CDOTAClientMsg_SendStatPopup) Reset()                    { *m = CDOTAClientMsg_SendStatPopup{} }
func (m *CDOTAClientMsg_SendStatPopup) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_SendStatPopup) ProtoMessage()               {}
func (*CDOTAClientMsg_SendStatPopup) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{21} }

func (m *CDOTAClientMsg_SendStatPopup) GetStatpopup() *CDOTAMsg_SendStatPopup {
	if m != nil {
		return m.Statpopup
	}
	return nil
}

type CDOTAClientMsg_BeginLastHitChallenge struct {
	ChosenLane       *uint32 `protobuf:"varint,1,opt,name=chosen_lane,json=chosenLane" json:"chosen_lane,omitempty"`
	HelperEnabled    *bool   `protobuf:"varint,2,opt,name=helper_enabled,json=helperEnabled" json:"helper_enabled,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAClientMsg_BeginLastHitChallenge) Reset()         { *m = CDOTAClientMsg_BeginLastHitChallenge{} }
func (m *CDOTAClientMsg_BeginLastHitChallenge) String() string { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_BeginLastHitChallenge) ProtoMessage()    {}
func (*CDOTAClientMsg_BeginLastHitChallenge) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{22}
}

func (m *CDOTAClientMsg_BeginLastHitChallenge) GetChosenLane() uint32 {
	if m != nil && m.ChosenLane != nil {
		return *m.ChosenLane
	}
	return 0
}

func (m *CDOTAClientMsg_BeginLastHitChallenge) GetHelperEnabled() bool {
	if m != nil && m.HelperEnabled != nil {
		return *m.HelperEnabled
	}
	return false
}

type CDOTAClientMsg_UpdateQuickBuyItem struct {
	ItemType         *int32 `protobuf:"varint,1,opt,name=item_type,json=itemType" json:"item_type,omitempty"`
	Purchasable      *bool  `protobuf:"varint,2,opt,name=purchasable" json:"purchasable,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAClientMsg_UpdateQuickBuyItem) Reset()         { *m = CDOTAClientMsg_UpdateQuickBuyItem{} }
func (m *CDOTAClientMsg_UpdateQuickBuyItem) String() string { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_UpdateQuickBuyItem) ProtoMessage()    {}
func (*CDOTAClientMsg_UpdateQuickBuyItem) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{23}
}

func (m *CDOTAClientMsg_UpdateQuickBuyItem) GetItemType() int32 {
	if m != nil && m.ItemType != nil {
		return *m.ItemType
	}
	return 0
}

func (m *CDOTAClientMsg_UpdateQuickBuyItem) GetPurchasable() bool {
	if m != nil && m.Purchasable != nil {
		return *m.Purchasable
	}
	return false
}

type CDOTAClientMsg_UpdateQuickBuy struct {
	Items            []*CDOTAClientMsg_UpdateQuickBuyItem `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte                               `json:"-"`
}

func (m *CDOTAClientMsg_UpdateQuickBuy) Reset()                    { *m = CDOTAClientMsg_UpdateQuickBuy{} }
func (m *CDOTAClientMsg_UpdateQuickBuy) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_UpdateQuickBuy) ProtoMessage()               {}
func (*CDOTAClientMsg_UpdateQuickBuy) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{24} }

func (m *CDOTAClientMsg_UpdateQuickBuy) GetItems() []*CDOTAClientMsg_UpdateQuickBuyItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type CDOTAClientMsg_RecordVote struct {
	ChoiceIndex      *int32 `protobuf:"varint,1,opt,name=choice_index,json=choiceIndex" json:"choice_index,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAClientMsg_RecordVote) Reset()                    { *m = CDOTAClientMsg_RecordVote{} }
func (m *CDOTAClientMsg_RecordVote) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_RecordVote) ProtoMessage()               {}
func (*CDOTAClientMsg_RecordVote) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{25} }

func (m *CDOTAClientMsg_RecordVote) GetChoiceIndex() int32 {
	if m != nil && m.ChoiceIndex != nil {
		return *m.ChoiceIndex
	}
	return 0
}

type CDOTAClientMsg_WillPurchaseAlert struct {
	Itemid             *int32  `protobuf:"varint,1,opt,name=itemid" json:"itemid,omitempty"`
	GoldRemaining      *uint32 `protobuf:"varint,2,opt,name=gold_remaining,json=goldRemaining" json:"gold_remaining,omitempty"`
	SuggestionPlayerId *int32  `protobuf:"varint,3,opt,name=suggestion_player_id,json=suggestionPlayerId" json:"suggestion_player_id,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *CDOTAClientMsg_WillPurchaseAlert) Reset()         { *m = CDOTAClientMsg_WillPurchaseAlert{} }
func (m *CDOTAClientMsg_WillPurchaseAlert) String() string { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_WillPurchaseAlert) ProtoMessage()    {}
func (*CDOTAClientMsg_WillPurchaseAlert) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{26}
}

func (m *CDOTAClientMsg_WillPurchaseAlert) GetItemid() int32 {
	if m != nil && m.Itemid != nil {
		return *m.Itemid
	}
	return 0
}

func (m *CDOTAClientMsg_WillPurchaseAlert) GetGoldRemaining() uint32 {
	if m != nil && m.GoldRemaining != nil {
		return *m.GoldRemaining
	}
	return 0
}

func (m *CDOTAClientMsg_WillPurchaseAlert) GetSuggestionPlayerId() int32 {
	if m != nil && m.SuggestionPlayerId != nil {
		return *m.SuggestionPlayerId
	}
	return 0
}

type CDOTAClientMsg_BuyBackStateAlert struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAClientMsg_BuyBackStateAlert) Reset()         { *m = CDOTAClientMsg_BuyBackStateAlert{} }
func (m *CDOTAClientMsg_BuyBackStateAlert) String() string { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_BuyBackStateAlert) ProtoMessage()    {}
func (*CDOTAClientMsg_BuyBackStateAlert) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{27}
}

type CDOTAClientMsg_QuickBuyAlert struct {
	Itemid           *int32 `protobuf:"varint,1,opt,name=itemid" json:"itemid,omitempty"`
	GoldRequired     *int32 `protobuf:"varint,2,opt,name=gold_required,json=goldRequired" json:"gold_required,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAClientMsg_QuickBuyAlert) Reset()                    { *m = CDOTAClientMsg_QuickBuyAlert{} }
func (m *CDOTAClientMsg_QuickBuyAlert) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_QuickBuyAlert) ProtoMessage()               {}
func (*CDOTAClientMsg_QuickBuyAlert) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{28} }

func (m *CDOTAClientMsg_QuickBuyAlert) GetItemid() int32 {
	if m != nil && m.Itemid != nil {
		return *m.Itemid
	}
	return 0
}

func (m *CDOTAClientMsg_QuickBuyAlert) GetGoldRequired() int32 {
	if m != nil && m.GoldRequired != nil {
		return *m.GoldRequired
	}
	return 0
}

type CDOTAClientMsg_PlayerShowCase struct {
	Showcase         *bool  `protobuf:"varint,1,opt,name=showcase" json:"showcase,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAClientMsg_PlayerShowCase) Reset()                    { *m = CDOTAClientMsg_PlayerShowCase{} }
func (m *CDOTAClientMsg_PlayerShowCase) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_PlayerShowCase) ProtoMessage()               {}
func (*CDOTAClientMsg_PlayerShowCase) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{29} }

func (m *CDOTAClientMsg_PlayerShowCase) GetShowcase() bool {
	if m != nil && m.Showcase != nil {
		return *m.Showcase
	}
	return false
}

type CDOTAClientMsg_CameraZoomAmount struct {
	ZoomAmount       *float32 `protobuf:"fixed32,1,opt,name=zoom_amount,json=zoomAmount" json:"zoom_amount,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAClientMsg_CameraZoomAmount) Reset()         { *m = CDOTAClientMsg_CameraZoomAmount{} }
func (m *CDOTAClientMsg_CameraZoomAmount) String() string { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_CameraZoomAmount) ProtoMessage()    {}
func (*CDOTAClientMsg_CameraZoomAmount) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{30}
}

func (m *CDOTAClientMsg_CameraZoomAmount) GetZoomAmount() float32 {
	if m != nil && m.ZoomAmount != nil {
		return *m.ZoomAmount
	}
	return 0
}

type CDOTAClientMsg_BroadcasterUsingCameraman struct {
	Cameraman        *bool  `protobuf:"varint,1,opt,name=cameraman" json:"cameraman,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAClientMsg_BroadcasterUsingCameraman) Reset() {
	*m = CDOTAClientMsg_BroadcasterUsingCameraman{}
}
func (m *CDOTAClientMsg_BroadcasterUsingCameraman) String() string { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_BroadcasterUsingCameraman) ProtoMessage()    {}
func (*CDOTAClientMsg_BroadcasterUsingCameraman) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{31}
}

func (m *CDOTAClientMsg_BroadcasterUsingCameraman) GetCameraman() bool {
	if m != nil && m.Cameraman != nil {
		return *m.Cameraman
	}
	return false
}

type CDOTAClientMsg_BroadcasterUsingAssistedCameraOperator struct {
	Enabled          *bool  `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAClientMsg_BroadcasterUsingAssistedCameraOperator) Reset() {
	*m = CDOTAClientMsg_BroadcasterUsingAssistedCameraOperator{}
}
func (m *CDOTAClientMsg_BroadcasterUsingAssistedCameraOperator) String() string {
	return proto.CompactTextString(m)
}
func (*CDOTAClientMsg_BroadcasterUsingAssistedCameraOperator) ProtoMessage() {}
func (*CDOTAClientMsg_BroadcasterUsingAssistedCameraOperator) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{32}
}

func (m *CDOTAClientMsg_BroadcasterUsingAssistedCameraOperator) GetEnabled() bool {
	if m != nil && m.Enabled != nil {
		return *m.Enabled
	}
	return false
}

type CAdditionalEquipSlotClientMsg struct {
	ClassId          *uint32 `protobuf:"varint,1,opt,name=class_id,json=classId" json:"class_id,omitempty"`
	SlotId           *uint32 `protobuf:"varint,2,opt,name=slot_id,json=slotId" json:"slot_id,omitempty"`
	DefIndex         *uint32 `protobuf:"varint,3,opt,name=def_index,json=defIndex" json:"def_index,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CAdditionalEquipSlotClientMsg) Reset()                    { *m = CAdditionalEquipSlotClientMsg{} }
func (m *CAdditionalEquipSlotClientMsg) String() string            { return proto.CompactTextString(m) }
func (*CAdditionalEquipSlotClientMsg) ProtoMessage()               {}
func (*CAdditionalEquipSlotClientMsg) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{33} }

func (m *CAdditionalEquipSlotClientMsg) GetClassId() uint32 {
	if m != nil && m.ClassId != nil {
		return *m.ClassId
	}
	return 0
}

func (m *CAdditionalEquipSlotClientMsg) GetSlotId() uint32 {
	if m != nil && m.SlotId != nil {
		return *m.SlotId
	}
	return 0
}

func (m *CAdditionalEquipSlotClientMsg) GetDefIndex() uint32 {
	if m != nil && m.DefIndex != nil {
		return *m.DefIndex
	}
	return 0
}

type CDOTAClientMsg_FreeInventory struct {
	Equips           []*CAdditionalEquipSlotClientMsg `protobuf:"bytes,1,rep,name=equips" json:"equips,omitempty"`
	XXX_unrecognized []byte                           `json:"-"`
}

func (m *CDOTAClientMsg_FreeInventory) Reset()                    { *m = CDOTAClientMsg_FreeInventory{} }
func (m *CDOTAClientMsg_FreeInventory) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_FreeInventory) ProtoMessage()               {}
func (*CDOTAClientMsg_FreeInventory) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{34} }

func (m *CDOTAClientMsg_FreeInventory) GetEquips() []*CAdditionalEquipSlotClientMsg {
	if m != nil {
		return m.Equips
	}
	return nil
}

type CDOTAClientMsg_FillEmptySlotsWithBots struct {
	Fillwithbots     *bool  `protobuf:"varint,1,opt,name=fillwithbots" json:"fillwithbots,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAClientMsg_FillEmptySlotsWithBots) Reset()         { *m = CDOTAClientMsg_FillEmptySlotsWithBots{} }
func (m *CDOTAClientMsg_FillEmptySlotsWithBots) String() string { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_FillEmptySlotsWithBots) ProtoMessage()    {}
func (*CDOTAClientMsg_FillEmptySlotsWithBots) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{35}
}

func (m *CDOTAClientMsg_FillEmptySlotsWithBots) GetFillwithbots() bool {
	if m != nil && m.Fillwithbots != nil {
		return *m.Fillwithbots
	}
	return false
}

type CDOTAClientMsg_HeroStatueLike struct {
	OwnerPlayerId    *uint32 `protobuf:"varint,1,opt,name=owner_player_id,json=ownerPlayerId" json:"owner_player_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAClientMsg_HeroStatueLike) Reset()                    { *m = CDOTAClientMsg_HeroStatueLike{} }
func (m *CDOTAClientMsg_HeroStatueLike) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_HeroStatueLike) ProtoMessage()               {}
func (*CDOTAClientMsg_HeroStatueLike) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{36} }

func (m *CDOTAClientMsg_HeroStatueLike) GetOwnerPlayerId() uint32 {
	if m != nil && m.OwnerPlayerId != nil {
		return *m.OwnerPlayerId
	}
	return 0
}

type CDOTAClientMsg_EventCNY2015Cmd struct {
	Data             []byte `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAClientMsg_EventCNY2015Cmd) Reset()                    { *m = CDOTAClientMsg_EventCNY2015Cmd{} }
func (m *CDOTAClientMsg_EventCNY2015Cmd) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_EventCNY2015Cmd) ProtoMessage()               {}
func (*CDOTAClientMsg_EventCNY2015Cmd) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{37} }

func (m *CDOTAClientMsg_EventCNY2015Cmd) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CDOTAClientMsg_DemoHero struct {
	HeroId               *int32   `protobuf:"varint,1,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	HeroIdToSpawn        *int32   `protobuf:"varint,2,opt,name=hero_id_to_spawn,json=heroIdToSpawn" json:"hero_id_to_spawn,omitempty"`
	ItemDefs             []uint32 `protobuf:"varint,3,rep,name=item_defs,json=itemDefs" json:"item_defs,omitempty"`
	ItemIds              []uint64 `protobuf:"varint,4,rep,name=item_ids,json=itemIds" json:"item_ids,omitempty"`
	StyleIndex           *uint32  `protobuf:"varint,5,opt,name=style_index,json=styleIndex" json:"style_index,omitempty"`
	KeepExistingDemohero *bool    `protobuf:"varint,6,opt,name=keep_existing_demohero,json=keepExistingDemohero" json:"keep_existing_demohero,omitempty"`
	XXX_unrecognized     []byte   `json:"-"`
}

func (m *CDOTAClientMsg_DemoHero) Reset()                    { *m = CDOTAClientMsg_DemoHero{} }
func (m *CDOTAClientMsg_DemoHero) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_DemoHero) ProtoMessage()               {}
func (*CDOTAClientMsg_DemoHero) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{38} }

func (m *CDOTAClientMsg_DemoHero) GetHeroId() int32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CDOTAClientMsg_DemoHero) GetHeroIdToSpawn() int32 {
	if m != nil && m.HeroIdToSpawn != nil {
		return *m.HeroIdToSpawn
	}
	return 0
}

func (m *CDOTAClientMsg_DemoHero) GetItemDefs() []uint32 {
	if m != nil {
		return m.ItemDefs
	}
	return nil
}

func (m *CDOTAClientMsg_DemoHero) GetItemIds() []uint64 {
	if m != nil {
		return m.ItemIds
	}
	return nil
}

func (m *CDOTAClientMsg_DemoHero) GetStyleIndex() uint32 {
	if m != nil && m.StyleIndex != nil {
		return *m.StyleIndex
	}
	return 0
}

func (m *CDOTAClientMsg_DemoHero) GetKeepExistingDemohero() bool {
	if m != nil && m.KeepExistingDemohero != nil {
		return *m.KeepExistingDemohero
	}
	return false
}

type CDOTAClientMsg_ChallengeSelect struct {
	EventId          *uint32 `protobuf:"varint,1,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	SlotId           *uint32 `protobuf:"varint,2,opt,name=slot_id,json=slotId" json:"slot_id,omitempty"`
	SequenceId       *uint32 `protobuf:"varint,3,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAClientMsg_ChallengeSelect) Reset()                    { *m = CDOTAClientMsg_ChallengeSelect{} }
func (m *CDOTAClientMsg_ChallengeSelect) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_ChallengeSelect) ProtoMessage()               {}
func (*CDOTAClientMsg_ChallengeSelect) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{39} }

func (m *CDOTAClientMsg_ChallengeSelect) GetEventId() uint32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

func (m *CDOTAClientMsg_ChallengeSelect) GetSlotId() uint32 {
	if m != nil && m.SlotId != nil {
		return *m.SlotId
	}
	return 0
}

func (m *CDOTAClientMsg_ChallengeSelect) GetSequenceId() uint32 {
	if m != nil && m.SequenceId != nil {
		return *m.SequenceId
	}
	return 0
}

type CDOTAClientMsg_ChallengeReroll struct {
	EventId          *uint32 `protobuf:"varint,1,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	SlotId           *uint32 `protobuf:"varint,2,opt,name=slot_id,json=slotId" json:"slot_id,omitempty"`
	SequenceId       *uint32 `protobuf:"varint,3,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAClientMsg_ChallengeReroll) Reset()                    { *m = CDOTAClientMsg_ChallengeReroll{} }
func (m *CDOTAClientMsg_ChallengeReroll) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_ChallengeReroll) ProtoMessage()               {}
func (*CDOTAClientMsg_ChallengeReroll) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{40} }

func (m *CDOTAClientMsg_ChallengeReroll) GetEventId() uint32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

func (m *CDOTAClientMsg_ChallengeReroll) GetSlotId() uint32 {
	if m != nil && m.SlotId != nil {
		return *m.SlotId
	}
	return 0
}

func (m *CDOTAClientMsg_ChallengeReroll) GetSequenceId() uint32 {
	if m != nil && m.SequenceId != nil {
		return *m.SequenceId
	}
	return 0
}

type CDOTAClientMsg_CoinWager struct {
	WagerAmount      *uint32 `protobuf:"varint,1,opt,name=wager_amount,json=wagerAmount" json:"wager_amount,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAClientMsg_CoinWager) Reset()                    { *m = CDOTAClientMsg_CoinWager{} }
func (m *CDOTAClientMsg_CoinWager) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_CoinWager) ProtoMessage()               {}
func (*CDOTAClientMsg_CoinWager) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{41} }

func (m *CDOTAClientMsg_CoinWager) GetWagerAmount() uint32 {
	if m != nil && m.WagerAmount != nil {
		return *m.WagerAmount
	}
	return 0
}

type CDOTAClientMsg_EventPointsTip struct {
	RecipientPlayerId *uint32 `protobuf:"varint,1,opt,name=recipient_player_id,json=recipientPlayerId" json:"recipient_player_id,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CDOTAClientMsg_EventPointsTip) Reset()                    { *m = CDOTAClientMsg_EventPointsTip{} }
func (m *CDOTAClientMsg_EventPointsTip) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_EventPointsTip) ProtoMessage()               {}
func (*CDOTAClientMsg_EventPointsTip) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{42} }

func (m *CDOTAClientMsg_EventPointsTip) GetRecipientPlayerId() uint32 {
	if m != nil && m.RecipientPlayerId != nil {
		return *m.RecipientPlayerId
	}
	return 0
}

type CDOTAClientMsg_ExecuteOrders struct {
	Orders           []*CDOTAMsg_UnitOrder `protobuf:"bytes,1,rep,name=orders" json:"orders,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *CDOTAClientMsg_ExecuteOrders) Reset()                    { *m = CDOTAClientMsg_ExecuteOrders{} }
func (m *CDOTAClientMsg_ExecuteOrders) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_ExecuteOrders) ProtoMessage()               {}
func (*CDOTAClientMsg_ExecuteOrders) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{43} }

func (m *CDOTAClientMsg_ExecuteOrders) GetOrders() []*CDOTAMsg_UnitOrder {
	if m != nil {
		return m.Orders
	}
	return nil
}

type CDOTAClientMsg_XPAlert struct {
	TargetEntindex   *uint32 `protobuf:"varint,1,opt,name=target_entindex,json=targetEntindex" json:"target_entindex,omitempty"`
	DamageTaken      *uint32 `protobuf:"varint,2,opt,name=damage_taken,json=damageTaken" json:"damage_taken,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAClientMsg_XPAlert) Reset()                    { *m = CDOTAClientMsg_XPAlert{} }
func (m *CDOTAClientMsg_XPAlert) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_XPAlert) ProtoMessage()               {}
func (*CDOTAClientMsg_XPAlert) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{44} }

func (m *CDOTAClientMsg_XPAlert) GetTargetEntindex() uint32 {
	if m != nil && m.TargetEntindex != nil {
		return *m.TargetEntindex
	}
	return 0
}

func (m *CDOTAClientMsg_XPAlert) GetDamageTaken() uint32 {
	if m != nil && m.DamageTaken != nil {
		return *m.DamageTaken
	}
	return 0
}

type CDOTAClientMsg_KillcamDamageTaken struct {
	TargetEntindex   *uint32 `protobuf:"varint,1,opt,name=target_entindex,json=targetEntindex" json:"target_entindex,omitempty"`
	DamageTaken      *uint32 `protobuf:"varint,2,opt,name=damage_taken,json=damageTaken" json:"damage_taken,omitempty"`
	ItemType         *uint32 `protobuf:"varint,3,opt,name=item_type,json=itemType" json:"item_type,omitempty"`
	ItemId           *uint32 `protobuf:"varint,4,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	HeroName         *string `protobuf:"bytes,5,opt,name=hero_name,json=heroName" json:"hero_name,omitempty"`
	DamageColor      *string `protobuf:"bytes,6,opt,name=damage_color,json=damageColor" json:"damage_color,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAClientMsg_KillcamDamageTaken) Reset()         { *m = CDOTAClientMsg_KillcamDamageTaken{} }
func (m *CDOTAClientMsg_KillcamDamageTaken) String() string { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_KillcamDamageTaken) ProtoMessage()    {}
func (*CDOTAClientMsg_KillcamDamageTaken) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{45}
}

func (m *CDOTAClientMsg_KillcamDamageTaken) GetTargetEntindex() uint32 {
	if m != nil && m.TargetEntindex != nil {
		return *m.TargetEntindex
	}
	return 0
}

func (m *CDOTAClientMsg_KillcamDamageTaken) GetDamageTaken() uint32 {
	if m != nil && m.DamageTaken != nil {
		return *m.DamageTaken
	}
	return 0
}

func (m *CDOTAClientMsg_KillcamDamageTaken) GetItemType() uint32 {
	if m != nil && m.ItemType != nil {
		return *m.ItemType
	}
	return 0
}

func (m *CDOTAClientMsg_KillcamDamageTaken) GetItemId() uint32 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *CDOTAClientMsg_KillcamDamageTaken) GetHeroName() string {
	if m != nil && m.HeroName != nil {
		return *m.HeroName
	}
	return ""
}

func (m *CDOTAClientMsg_KillcamDamageTaken) GetDamageColor() string {
	if m != nil && m.DamageColor != nil {
		return *m.DamageColor
	}
	return ""
}

type CDOTAClientMsg_MatchMetadata struct {
	MatchId          *uint64 `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	Metadata         []byte  `protobuf:"bytes,2,opt,name=metadata" json:"metadata,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAClientMsg_MatchMetadata) Reset()                    { *m = CDOTAClientMsg_MatchMetadata{} }
func (m *CDOTAClientMsg_MatchMetadata) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_MatchMetadata) ProtoMessage()               {}
func (*CDOTAClientMsg_MatchMetadata) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{46} }

func (m *CDOTAClientMsg_MatchMetadata) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CDOTAClientMsg_MatchMetadata) GetMetadata() []byte {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type CDOTAClientMsg_KillMyHero struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAClientMsg_KillMyHero) Reset()                    { *m = CDOTAClientMsg_KillMyHero{} }
func (m *CDOTAClientMsg_KillMyHero) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_KillMyHero) ProtoMessage()               {}
func (*CDOTAClientMsg_KillMyHero) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{47} }

type CDOTAClientMsg_QuestStatus struct {
	QuestId          *uint32  `protobuf:"varint,1,opt,name=quest_id,json=questId" json:"quest_id,omitempty"`
	ChallengeId      *uint32  `protobuf:"varint,2,opt,name=challenge_id,json=challengeId" json:"challenge_id,omitempty"`
	Progress         *uint32  `protobuf:"varint,3,opt,name=progress" json:"progress,omitempty"`
	Goal             *uint32  `protobuf:"varint,4,opt,name=goal" json:"goal,omitempty"`
	Query            *uint32  `protobuf:"varint,5,opt,name=query" json:"query,omitempty"`
	FailGametime     *float32 `protobuf:"fixed32,6,opt,name=fail_gametime,json=failGametime" json:"fail_gametime,omitempty"`
	ItemId           *uint32  `protobuf:"varint,7,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAClientMsg_QuestStatus) Reset()                    { *m = CDOTAClientMsg_QuestStatus{} }
func (m *CDOTAClientMsg_QuestStatus) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_QuestStatus) ProtoMessage()               {}
func (*CDOTAClientMsg_QuestStatus) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{48} }

func (m *CDOTAClientMsg_QuestStatus) GetQuestId() uint32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

func (m *CDOTAClientMsg_QuestStatus) GetChallengeId() uint32 {
	if m != nil && m.ChallengeId != nil {
		return *m.ChallengeId
	}
	return 0
}

func (m *CDOTAClientMsg_QuestStatus) GetProgress() uint32 {
	if m != nil && m.Progress != nil {
		return *m.Progress
	}
	return 0
}

func (m *CDOTAClientMsg_QuestStatus) GetGoal() uint32 {
	if m != nil && m.Goal != nil {
		return *m.Goal
	}
	return 0
}

func (m *CDOTAClientMsg_QuestStatus) GetQuery() uint32 {
	if m != nil && m.Query != nil {
		return *m.Query
	}
	return 0
}

func (m *CDOTAClientMsg_QuestStatus) GetFailGametime() float32 {
	if m != nil && m.FailGametime != nil {
		return *m.FailGametime
	}
	return 0
}

func (m *CDOTAClientMsg_QuestStatus) GetItemId() uint32 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

type CDOTAClientMsg_ToggleAutoattack struct {
	Mode             *int32 `protobuf:"varint,1,opt,name=mode" json:"mode,omitempty"`
	ShowMessage      *bool  `protobuf:"varint,2,opt,name=show_message,json=showMessage" json:"show_message,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAClientMsg_ToggleAutoattack) Reset()         { *m = CDOTAClientMsg_ToggleAutoattack{} }
func (m *CDOTAClientMsg_ToggleAutoattack) String() string { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_ToggleAutoattack) ProtoMessage()    {}
func (*CDOTAClientMsg_ToggleAutoattack) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{49}
}

func (m *CDOTAClientMsg_ToggleAutoattack) GetMode() int32 {
	if m != nil && m.Mode != nil {
		return *m.Mode
	}
	return 0
}

func (m *CDOTAClientMsg_ToggleAutoattack) GetShowMessage() bool {
	if m != nil && m.ShowMessage != nil {
		return *m.ShowMessage
	}
	return false
}

type CDOTAClientMsg_SpecialAbility struct {
	AbilityIndex     *uint32 `protobuf:"varint,1,opt,name=ability_index,json=abilityIndex" json:"ability_index,omitempty"`
	TargetEntindex   *uint32 `protobuf:"varint,2,opt,name=target_entindex,json=targetEntindex" json:"target_entindex,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAClientMsg_SpecialAbility) Reset()                    { *m = CDOTAClientMsg_SpecialAbility{} }
func (m *CDOTAClientMsg_SpecialAbility) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_SpecialAbility) ProtoMessage()               {}
func (*CDOTAClientMsg_SpecialAbility) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{50} }

func (m *CDOTAClientMsg_SpecialAbility) GetAbilityIndex() uint32 {
	if m != nil && m.AbilityIndex != nil {
		return *m.AbilityIndex
	}
	return 0
}

func (m *CDOTAClientMsg_SpecialAbility) GetTargetEntindex() uint32 {
	if m != nil && m.TargetEntindex != nil {
		return *m.TargetEntindex
	}
	return 0
}

type CDOTAClientMsg_SetEnemyStartingPosition struct {
	EnemyPlayerId         *uint32 `protobuf:"varint,1,opt,name=enemy_player_id,json=enemyPlayerId" json:"enemy_player_id,omitempty"`
	EnemyStartingPosition *uint32 `protobuf:"varint,2,opt,name=enemy_starting_position,json=enemyStartingPosition" json:"enemy_starting_position,omitempty"`
	XXX_unrecognized      []byte  `json:"-"`
}

func (m *CDOTAClientMsg_SetEnemyStartingPosition) Reset() {
	*m = CDOTAClientMsg_SetEnemyStartingPosition{}
}
func (m *CDOTAClientMsg_SetEnemyStartingPosition) String() string { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_SetEnemyStartingPosition) ProtoMessage()    {}
func (*CDOTAClientMsg_SetEnemyStartingPosition) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{51}
}

func (m *CDOTAClientMsg_SetEnemyStartingPosition) GetEnemyPlayerId() uint32 {
	if m != nil && m.EnemyPlayerId != nil {
		return *m.EnemyPlayerId
	}
	return 0
}

func (m *CDOTAClientMsg_SetEnemyStartingPosition) GetEnemyStartingPosition() uint32 {
	if m != nil && m.EnemyStartingPosition != nil {
		return *m.EnemyStartingPosition
	}
	return 0
}

type CDOTAClientMsg_SetDesiredWardPlacement struct {
	WardIndex        *uint32  `protobuf:"varint,1,opt,name=ward_index,json=wardIndex" json:"ward_index,omitempty"`
	WardX            *float32 `protobuf:"fixed32,2,opt,name=ward_x,json=wardX" json:"ward_x,omitempty"`
	WardY            *float32 `protobuf:"fixed32,3,opt,name=ward_y,json=wardY" json:"ward_y,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAClientMsg_SetDesiredWardPlacement) Reset() {
	*m = CDOTAClientMsg_SetDesiredWardPlacement{}
}
func (m *CDOTAClientMsg_SetDesiredWardPlacement) String() string { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_SetDesiredWardPlacement) ProtoMessage()    {}
func (*CDOTAClientMsg_SetDesiredWardPlacement) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{52}
}

func (m *CDOTAClientMsg_SetDesiredWardPlacement) GetWardIndex() uint32 {
	if m != nil && m.WardIndex != nil {
		return *m.WardIndex
	}
	return 0
}

func (m *CDOTAClientMsg_SetDesiredWardPlacement) GetWardX() float32 {
	if m != nil && m.WardX != nil {
		return *m.WardX
	}
	return 0
}

func (m *CDOTAClientMsg_SetDesiredWardPlacement) GetWardY() float32 {
	if m != nil && m.WardY != nil {
		return *m.WardY
	}
	return 0
}

type CDOTAClientMsg_RollDice struct {
	ChannelType      *uint32 `protobuf:"varint,1,opt,name=channel_type,json=channelType" json:"channel_type,omitempty"`
	RollMin          *uint32 `protobuf:"varint,2,opt,name=roll_min,json=rollMin" json:"roll_min,omitempty"`
	RollMax          *uint32 `protobuf:"varint,3,opt,name=roll_max,json=rollMax" json:"roll_max,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAClientMsg_RollDice) Reset()                    { *m = CDOTAClientMsg_RollDice{} }
func (m *CDOTAClientMsg_RollDice) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_RollDice) ProtoMessage()               {}
func (*CDOTAClientMsg_RollDice) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{53} }

func (m *CDOTAClientMsg_RollDice) GetChannelType() uint32 {
	if m != nil && m.ChannelType != nil {
		return *m.ChannelType
	}
	return 0
}

func (m *CDOTAClientMsg_RollDice) GetRollMin() uint32 {
	if m != nil && m.RollMin != nil {
		return *m.RollMin
	}
	return 0
}

func (m *CDOTAClientMsg_RollDice) GetRollMax() uint32 {
	if m != nil && m.RollMax != nil {
		return *m.RollMax
	}
	return 0
}

type CDOTAClientMsg_FlipCoin struct {
	ChannelType      *uint32 `protobuf:"varint,1,opt,name=channel_type,json=channelType" json:"channel_type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAClientMsg_FlipCoin) Reset()                    { *m = CDOTAClientMsg_FlipCoin{} }
func (m *CDOTAClientMsg_FlipCoin) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_FlipCoin) ProtoMessage()               {}
func (*CDOTAClientMsg_FlipCoin) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{54} }

func (m *CDOTAClientMsg_FlipCoin) GetChannelType() uint32 {
	if m != nil && m.ChannelType != nil {
		return *m.ChannelType
	}
	return 0
}

type CDOTAClientMsg_RequestItemSuggestions struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAClientMsg_RequestItemSuggestions) Reset()         { *m = CDOTAClientMsg_RequestItemSuggestions{} }
func (m *CDOTAClientMsg_RequestItemSuggestions) String() string { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_RequestItemSuggestions) ProtoMessage()    {}
func (*CDOTAClientMsg_RequestItemSuggestions) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{55}
}

type CDOTAClientMsg_MakeTeamCaptain struct {
	PlayerId         *uint32 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAClientMsg_MakeTeamCaptain) Reset()                    { *m = CDOTAClientMsg_MakeTeamCaptain{} }
func (m *CDOTAClientMsg_MakeTeamCaptain) String() string            { return proto.CompactTextString(m) }
func (*CDOTAClientMsg_MakeTeamCaptain) ProtoMessage()               {}
func (*CDOTAClientMsg_MakeTeamCaptain) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{56} }

func (m *CDOTAClientMsg_MakeTeamCaptain) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func init() {
	proto.RegisterType((*CDOTAClientMsg_MapPing)(nil), "dota.CDOTAClientMsg_MapPing")
	proto.RegisterType((*CDOTAClientMsg_ItemAlert)(nil), "dota.CDOTAClientMsg_ItemAlert")
	proto.RegisterType((*CDOTAClientMsg_EnemyItemAlert)(nil), "dota.CDOTAClientMsg_EnemyItemAlert")
	proto.RegisterType((*CDOTAClientMsg_ModifierAlert)(nil), "dota.CDOTAClientMsg_ModifierAlert")
	proto.RegisterType((*CDOTAClientMsg_ClickedBuff)(nil), "dota.CDOTAClientMsg_ClickedBuff")
	proto.RegisterType((*CDOTAClientMsg_HPManaAlert)(nil), "dota.CDOTAClientMsg_HPManaAlert")
	proto.RegisterType((*CDOTAClientMsg_GlyphAlert)(nil), "dota.CDOTAClientMsg_GlyphAlert")
	proto.RegisterType((*CDOTAClientMsg_MapLine)(nil), "dota.CDOTAClientMsg_MapLine")
	proto.RegisterType((*CDOTAClientMsg_AspectRatio)(nil), "dota.CDOTAClientMsg_AspectRatio")
	proto.RegisterType((*CDOTAClientMsg_UnitsAutoAttackMode)(nil), "dota.CDOTAClientMsg_UnitsAutoAttackMode")
	proto.RegisterType((*CDOTAClientMsg_UnitsAutoAttackAfterSpell)(nil), "dota.CDOTAClientMsg_UnitsAutoAttackAfterSpell")
	proto.RegisterType((*CDOTAClientMsg_TeleportRequiresHalt)(nil), "dota.CDOTAClientMsg_TeleportRequiresHalt")
	proto.RegisterType((*CDOTAClientMsg_SearchString)(nil), "dota.CDOTAClientMsg_SearchString")
	proto.RegisterType((*CDOTAClientMsg_Pause)(nil), "dota.CDOTAClientMsg_Pause")
	proto.RegisterType((*CDOTAClientMsg_ShopViewMode)(nil), "dota.CDOTAClientMsg_ShopViewMode")
	proto.RegisterType((*CDOTAClientMsg_SetUnitShareFlag)(nil), "dota.CDOTAClientMsg_SetUnitShareFlag")
	proto.RegisterType((*CDOTAClientMsg_SwapRequest)(nil), "dota.CDOTAClientMsg_SwapRequest")
	proto.RegisterType((*CDOTAClientMsg_SwapAccept)(nil), "dota.CDOTAClientMsg_SwapAccept")
	proto.RegisterType((*CDOTAClientMsg_WorldLine)(nil), "dota.CDOTAClientMsg_WorldLine")
	proto.RegisterType((*CDOTAClientMsg_RequestGraphUpdate)(nil), "dota.CDOTAClientMsg_RequestGraphUpdate")
	proto.RegisterType((*CDOTAClientMsg_ChatWheel)(nil), "dota.CDOTAClientMsg_ChatWheel")
	proto.RegisterType((*CDOTAClientMsg_SendStatPopup)(nil), "dota.CDOTAClientMsg_SendStatPopup")
	proto.RegisterType((*CDOTAClientMsg_BeginLastHitChallenge)(nil), "dota.CDOTAClientMsg_BeginLastHitChallenge")
	proto.RegisterType((*CDOTAClientMsg_UpdateQuickBuyItem)(nil), "dota.CDOTAClientMsg_UpdateQuickBuyItem")
	proto.RegisterType((*CDOTAClientMsg_UpdateQuickBuy)(nil), "dota.CDOTAClientMsg_UpdateQuickBuy")
	proto.RegisterType((*CDOTAClientMsg_RecordVote)(nil), "dota.CDOTAClientMsg_RecordVote")
	proto.RegisterType((*CDOTAClientMsg_WillPurchaseAlert)(nil), "dota.CDOTAClientMsg_WillPurchaseAlert")
	proto.RegisterType((*CDOTAClientMsg_BuyBackStateAlert)(nil), "dota.CDOTAClientMsg_BuyBackStateAlert")
	proto.RegisterType((*CDOTAClientMsg_QuickBuyAlert)(nil), "dota.CDOTAClientMsg_QuickBuyAlert")
	proto.RegisterType((*CDOTAClientMsg_PlayerShowCase)(nil), "dota.CDOTAClientMsg_PlayerShowCase")
	proto.RegisterType((*CDOTAClientMsg_CameraZoomAmount)(nil), "dota.CDOTAClientMsg_CameraZoomAmount")
	proto.RegisterType((*CDOTAClientMsg_BroadcasterUsingCameraman)(nil), "dota.CDOTAClientMsg_BroadcasterUsingCameraman")
	proto.RegisterType((*CDOTAClientMsg_BroadcasterUsingAssistedCameraOperator)(nil), "dota.CDOTAClientMsg_BroadcasterUsingAssistedCameraOperator")
	proto.RegisterType((*CAdditionalEquipSlotClientMsg)(nil), "dota.CAdditionalEquipSlotClientMsg")
	proto.RegisterType((*CDOTAClientMsg_FreeInventory)(nil), "dota.CDOTAClientMsg_FreeInventory")
	proto.RegisterType((*CDOTAClientMsg_FillEmptySlotsWithBots)(nil), "dota.CDOTAClientMsg_FillEmptySlotsWithBots")
	proto.RegisterType((*CDOTAClientMsg_HeroStatueLike)(nil), "dota.CDOTAClientMsg_HeroStatueLike")
	proto.RegisterType((*CDOTAClientMsg_EventCNY2015Cmd)(nil), "dota.CDOTAClientMsg_EventCNY2015Cmd")
	proto.RegisterType((*CDOTAClientMsg_DemoHero)(nil), "dota.CDOTAClientMsg_DemoHero")
	proto.RegisterType((*CDOTAClientMsg_ChallengeSelect)(nil), "dota.CDOTAClientMsg_ChallengeSelect")
	proto.RegisterType((*CDOTAClientMsg_ChallengeReroll)(nil), "dota.CDOTAClientMsg_ChallengeReroll")
	proto.RegisterType((*CDOTAClientMsg_CoinWager)(nil), "dota.CDOTAClientMsg_CoinWager")
	proto.RegisterType((*CDOTAClientMsg_EventPointsTip)(nil), "dota.CDOTAClientMsg_EventPointsTip")
	proto.RegisterType((*CDOTAClientMsg_ExecuteOrders)(nil), "dota.CDOTAClientMsg_ExecuteOrders")
	proto.RegisterType((*CDOTAClientMsg_XPAlert)(nil), "dota.CDOTAClientMsg_XPAlert")
	proto.RegisterType((*CDOTAClientMsg_KillcamDamageTaken)(nil), "dota.CDOTAClientMsg_KillcamDamageTaken")
	proto.RegisterType((*CDOTAClientMsg_MatchMetadata)(nil), "dota.CDOTAClientMsg_MatchMetadata")
	proto.RegisterType((*CDOTAClientMsg_KillMyHero)(nil), "dota.CDOTAClientMsg_KillMyHero")
	proto.RegisterType((*CDOTAClientMsg_QuestStatus)(nil), "dota.CDOTAClientMsg_QuestStatus")
	proto.RegisterType((*CDOTAClientMsg_ToggleAutoattack)(nil), "dota.CDOTAClientMsg_ToggleAutoattack")
	proto.RegisterType((*CDOTAClientMsg_SpecialAbility)(nil), "dota.CDOTAClientMsg_SpecialAbility")
	proto.RegisterType((*CDOTAClientMsg_SetEnemyStartingPosition)(nil), "dota.CDOTAClientMsg_SetEnemyStartingPosition")
	proto.RegisterType((*CDOTAClientMsg_SetDesiredWardPlacement)(nil), "dota.CDOTAClientMsg_SetDesiredWardPlacement")
	proto.RegisterType((*CDOTAClientMsg_RollDice)(nil), "dota.CDOTAClientMsg_RollDice")
	proto.RegisterType((*CDOTAClientMsg_FlipCoin)(nil), "dota.CDOTAClientMsg_FlipCoin")
	proto.RegisterType((*CDOTAClientMsg_RequestItemSuggestions)(nil), "dota.CDOTAClientMsg_RequestItemSuggestions")
	proto.RegisterType((*CDOTAClientMsg_MakeTeamCaptain)(nil), "dota.CDOTAClientMsg_MakeTeamCaptain")
	proto.RegisterEnum("dota.EDotaClientMessages", EDotaClientMessages_name, EDotaClientMessages_value)
	proto.RegisterEnum("dota.CDOTAClientMsg_UnitsAutoAttackMode_EMode", CDOTAClientMsg_UnitsAutoAttackMode_EMode_name, CDOTAClientMsg_UnitsAutoAttackMode_EMode_value)
	proto.RegisterEnum("dota.CDOTAClientMsg_UnitsAutoAttackMode_EUnitType", CDOTAClientMsg_UnitsAutoAttackMode_EUnitType_name, CDOTAClientMsg_UnitsAutoAttackMode_EUnitType_value)
}

func init() { proto.RegisterFile("dota_clientmessages.proto", fileDescriptor7) }

var fileDescriptor7 = []byte{
	// 2704 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x19, 0x69, 0x73, 0xdb, 0xc6,
	0x35, 0x84, 0xac, 0x6b, 0x25, 0xd9, 0x9b, 0xb5, 0x2c, 0xcb, 0x57, 0x2c, 0xc3, 0x71, 0xec, 0xe9,
	0x07, 0x8d, 0xa3, 0xe6, 0x68, 0x93, 0xa6, 0x2d, 0x45, 0xd2, 0x16, 0x1b, 0xc9, 0x66, 0x40, 0xc9,
	0x4a, 0xd2, 0x99, 0x72, 0xd6, 0xc0, 0x92, 0xdc, 0x11, 0x80, 0x85, 0x81, 0x65, 0x64, 0xe5, 0x53,
	0xbf, 0xf6, 0x73, 0x7f, 0x47, 0x8f, 0x99, 0xde, 0x6d, 0xd2, 0xfb, 0xbe, 0xef, 0xbb, 0xe9, 0xf4,
	0x48, 0x8f, 0xb4, 0xfd, 0x0d, 0xed, 0xbc, 0xc5, 0x02, 0xe4, 0x02, 0xb4, 0x92, 0xcc, 0x34, 0xfa,
	0xa0, 0xc1, 0x7b, 0x6f, 0xf7, 0xbd, 0xb7, 0x6f, 0xdf, 0xb9, 0x44, 0xa7, 0x3c, 0x21, 0x69, 0xc7,
	0xf5, 0x39, 0x0b, 0x65, 0xc0, 0x92, 0x84, 0xf6, 0x58, 0xb2, 0x1a, 0xc5, 0x42, 0x0a, 0x72, 0x04,
	0x48, 0xa7, 0xf5, 0x02, 0x11, 0x04, 0x22, 0x34, 0x17, 0xd8, 0xcf, 0xa3, 0xa5, 0x5a, 0xfd, 0xe6,
	0x76, 0xb5, 0xa6, 0x76, 0x6f, 0x25, 0xbd, 0xce, 0x16, 0x8d, 0x5a, 0x3c, 0xec, 0x91, 0xf7, 0xa2,
	0x05, 0x5f, 0xb8, 0x54, 0x72, 0x11, 0x76, 0x22, 0x1e, 0xf6, 0x96, 0x2b, 0x2b, 0x95, 0x2b, 0x73,
	0x6b, 0x67, 0x56, 0x81, 0xd9, 0xaa, 0xda, 0x04, 0xcb, 0x37, 0xf5, 0x1a, 0xd8, 0xe3, 0xcc, 0xfb,
	0x23, 0x90, 0xdd, 0x46, 0xcb, 0x05, 0xde, 0x4d, 0xc9, 0x82, 0xaa, 0xcf, 0x62, 0x49, 0x1e, 0x47,
	0x88, 0x4b, 0x16, 0x74, 0x28, 0x40, 0x9a, 0xf5, 0x72, 0x81, 0x75, 0xbe, 0xda, 0x99, 0xe5, 0xd9,
	0xa7, 0x5d, 0x47, 0xe7, 0x0a, 0x4c, 0x1b, 0x21, 0x0b, 0x0e, 0x86, 0x9c, 0x2f, 0xa2, 0x05, 0xc5,
	0x99, 0x85, 0x92, 0x87, 0x1e, 0xbb, 0xab, 0x98, 0x2f, 0x38, 0xf3, 0x80, 0x6c, 0x68, 0x9c, 0xbd,
	0x8f, 0xce, 0x16, 0x8f, 0x2d, 0x3c, 0xde, 0xe5, 0x2c, 0x4e, 0x99, 0xac, 0xa2, 0xe3, 0xb7, 0x07,
	0xdd, 0x6e, 0x87, 0x87, 0x92, 0xc5, 0x21, 0xf5, 0x3b, 0x43, 0x56, 0x93, 0xce, 0xfd, 0x40, 0x6a,
	0x6a, 0x4a, 0x13, 0x08, 0xe4, 0x32, 0x3a, 0x26, 0x69, 0xdc, 0x63, 0x72, 0x28, 0xd6, 0x52, 0x62,
	0x8f, 0xa6, 0xe8, 0x5c, 0xf0, 0x00, 0x9d, 0x2e, 0x08, 0xae, 0xf9, 0xdc, 0xdd, 0x63, 0xde, 0xfa,
	0xa0, 0xdb, 0x7d, 0xeb, 0xc4, 0x36, 0x4a, 0x62, 0x37, 0x5a, 0x5b, 0x34, 0xa4, 0xe9, 0x69, 0xc7,
	0xb0, 0xa9, 0x8c, 0x65, 0xf3, 0x38, 0x3a, 0x55, 0x60, 0x73, 0xdd, 0x3f, 0x88, 0xfa, 0x29, 0x97,
	0xd3, 0x68, 0x26, 0x64, 0x3d, 0x2a, 0xf9, 0x0b, 0x4c, 0x6d, 0x9f, 0x71, 0x72, 0xd8, 0x7e, 0xdf,
	0x38, 0x37, 0xdb, 0xe4, 0x21, 0x23, 0x57, 0xd1, 0x74, 0x40, 0x23, 0x9f, 0x87, 0x4c, 0x7b, 0xc1,
	0x52, 0xc1, 0x0b, 0xf4, 0x42, 0x27, 0x5b, 0x66, 0xaf, 0x95, 0xce, 0x52, 0x4d, 0x22, 0xe6, 0x4a,
	0x07, 0x3c, 0x8f, 0x2c, 0xa2, 0xc9, 0x18, 0x3e, 0x14, 0x37, 0xcb, 0x49, 0x01, 0xfb, 0x25, 0x0b,
	0xd9, 0x85, 0x4d, 0x3b, 0x21, 0x97, 0x49, 0x75, 0x20, 0x45, 0x55, 0x4a, 0xea, 0xee, 0x6d, 0x09,
	0x8f, 0x91, 0xa7, 0xd1, 0x91, 0x40, 0x78, 0xa9, 0x26, 0x47, 0xd7, 0x56, 0x47, 0x34, 0x39, 0x74,
	0xdf, 0x6a, 0x03, 0xfe, 0x3f, 0x31, 0xdd, 0xbc, 0x71, 0xab, 0xba, 0xd9, 0xac, 0x3b, 0x8a, 0x09,
	0xd9, 0x45, 0xb3, 0x83, 0x90, 0xcb, 0x8e, 0x3c, 0x88, 0x98, 0xba, 0x96, 0xa3, 0x6b, 0x6b, 0x6f,
	0x9c, 0x23, 0x20, 0xb7, 0x0f, 0x22, 0xf6, 0xc4, 0xd4, 0x8d, 0x9b, 0xce, 0x56, 0x75, 0xd3, 0x99,
	0x19, 0x68, 0x8c, 0xdd, 0x44, 0x93, 0x4a, 0x20, 0x59, 0x44, 0x99, 0x48, 0xfc, 0xdf, 0xec, 0xaf,
	0x42, 0x66, 0xd1, 0xe4, 0x8d, 0xc6, 0xad, 0x86, 0x83, 0xef, 0x23, 0xc7, 0xd1, 0xb1, 0xea, 0xb5,
	0xed, 0x86, 0xd3, 0x69, 0xb7, 0x1a, 0x9b, 0x9b, 0xb5, 0x6a, 0x7b, 0x1b, 0x57, 0x08, 0x42, 0x53,
	0xd5, 0xcd, 0xdd, 0xea, 0x73, 0x6d, 0x6c, 0xd9, 0x97, 0xd0, 0x6c, 0x2e, 0x09, 0x08, 0xa9, 0x2c,
	0x7c, 0x1f, 0x99, 0x47, 0x33, 0xed, 0x9d, 0xad, 0xad, 0x9b, 0x37, 0x1a, 0x75, 0x5c, 0xb1, 0xeb,
	0xe8, 0xca, 0xe1, 0x3a, 0x57, 0xbb, 0x92, 0xc5, 0xed, 0x88, 0xf9, 0x3e, 0x59, 0x46, 0xd3, 0x2c,
	0xa4, 0xb7, 0x7d, 0xe6, 0x69, 0x2f, 0xc8, 0x40, 0xfb, 0x3d, 0xe8, 0x62, 0x81, 0xcb, 0x36, 0xf3,
	0x59, 0x24, 0x62, 0xe9, 0xb0, 0x3b, 0x03, 0x1e, 0xb3, 0x64, 0x83, 0xfa, 0xf2, 0x10, 0x06, 0x8f,
	0xa2, 0x33, 0x05, 0x06, 0x6d, 0x46, 0x63, 0xb7, 0xdf, 0x96, 0x31, 0x64, 0xac, 0x25, 0x34, 0x95,
	0x28, 0x58, 0xed, 0x9b, 0x75, 0x34, 0x64, 0x2f, 0xa1, 0xc5, 0xc2, 0xb6, 0x16, 0x1d, 0x24, 0xcc,
	0x7e, 0xb8, 0xcc, 0xae, 0x2f, 0xa2, 0x5b, 0x9c, 0xed, 0x2b, 0xeb, 0x92, 0x11, 0x67, 0x58, 0x48,
	0xef, 0xd4, 0xee, 0xa1, 0xf3, 0x25, 0x0d, 0x24, 0xd8, 0xa2, 0xdd, 0xa7, 0x31, 0xbb, 0xe6, 0xd3,
	0x1e, 0x84, 0x41, 0xe4, 0xd3, 0x03, 0x16, 0x37, 0xeb, 0x7a, 0x6b, 0x0e, 0x03, 0xcb, 0xae, 0x4f,
	0x7b, 0x3a, 0x48, 0xd5, 0x37, 0x38, 0x6c, 0x22, 0xa9, 0x64, 0xcb, 0x13, 0xea, 0xb0, 0x29, 0x60,
	0xbf, 0xb3, 0xe4, 0xe4, 0xed, 0x7d, 0x1a, 0x81, 0x9d, 0x58, 0x22, 0xc9, 0x19, 0x34, 0x9b, 0xf2,
	0xec, 0x70, 0xaf, 0x20, 0xc4, 0xb3, 0xdf, 0x51, 0x0a, 0x52, 0xd8, 0x5a, 0x75, 0x5d, 0x16, 0xbd,
	0xce, 0x4e, 0xa7, 0x94, 0xb0, 0x77, 0x45, 0xec, 0x7b, 0x2a, 0x4e, 0x1f, 0x43, 0xb3, 0xfb, 0x00,
	0x8c, 0x44, 0x6a, 0x31, 0x5f, 0xe7, 0x8b, 0x9d, 0xe1, 0x52, 0xfb, 0x22, 0xba, 0x50, 0xe0, 0xa9,
	0x0f, 0x71, 0x3d, 0xa6, 0x51, 0x7f, 0x27, 0xf2, 0xe0, 0xb4, 0xdd, 0x92, 0xe0, 0x5a, 0x9f, 0xca,
	0xdd, 0x3e, 0x63, 0x3e, 0x79, 0x08, 0x1d, 0x73, 0xfb, 0x54, 0x76, 0x74, 0xe1, 0x1a, 0xea, 0xbd,
	0x00, 0xe8, 0xad, 0x14, 0xdb, 0xf4, 0x88, 0x8d, 0x16, 0x22, 0x1a, 0xd3, 0xa0, 0xd3, 0x67, 0xb1,
	0x80, 0x55, 0xa9, 0x91, 0xe7, 0x14, 0x72, 0x83, 0xc5, 0xa2, 0xe9, 0xd9, 0xcf, 0x97, 0xd2, 0x7e,
	0x9b, 0x85, 0x5e, 0x5b, 0x52, 0xd9, 0x12, 0xd1, 0x20, 0x22, 0x4f, 0xa0, 0x59, 0x30, 0x7f, 0x04,
	0x80, 0x3e, 0xe4, 0xd9, 0xc2, 0x21, 0x8d, 0x0d, 0xce, 0x70, 0xb9, 0x1d, 0xa2, 0x07, 0x0b, 0xbc,
	0xd7, 0x59, 0x8f, 0x87, 0x9b, 0x34, 0x91, 0x1b, 0x5c, 0xd6, 0xfa, 0xd4, 0xf7, 0x59, 0xd8, 0x63,
	0xe4, 0x3c, 0x9a, 0x73, 0xfb, 0x22, 0x61, 0x61, 0xc7, 0xa7, 0x61, 0xe6, 0x5d, 0x28, 0x45, 0x6d,
	0xd2, 0x90, 0x91, 0x4b, 0xe8, 0x68, 0x9f, 0xf9, 0x11, 0x8b, 0x3b, 0x59, 0x18, 0x58, 0xca, 0x33,
	0x16, 0x52, 0x6c, 0x43, 0x07, 0xc3, 0xed, 0x92, 0x61, 0x53, 0x63, 0x3e, 0x33, 0xe0, 0xee, 0xde,
	0xfa, 0x40, 0x55, 0x44, 0xb8, 0x6e, 0x55, 0x0c, 0x55, 0x0e, 0x4a, 0xcb, 0xc8, 0x0c, 0x20, 0x54,
	0xbc, 0xaf, 0xa0, 0xb9, 0x68, 0x10, 0xbb, 0x7d, 0x9a, 0x00, 0x47, 0x2d, 0x65, 0x14, 0x65, 0x7f,
	0xa0, 0x54, 0x6c, 0x4d, 0x19, 0xe4, 0x29, 0x34, 0x09, 0xec, 0x92, 0xe5, 0xca, 0xca, 0xc4, 0x95,
	0xb9, 0xb5, 0xcb, 0xe3, 0xf3, 0x5b, 0x49, 0x2f, 0x27, 0xdd, 0x65, 0xbf, 0xbb, 0xe4, 0xaa, 0x0e,
	0x73, 0x45, 0xec, 0xdd, 0x12, 0x92, 0x91, 0x0b, 0x68, 0xde, 0xed, 0x0b, 0xee, 0x32, 0xa3, 0x0a,
	0xce, 0xa5, 0x38, 0x55, 0xff, 0xec, 0x0f, 0x57, 0xd0, 0x4a, 0xd1, 0x63, 0xb9, 0xef, 0xb7, 0xd2,
	0x23, 0xb0, 0xb4, 0x2e, 0x2d, 0xa1, 0x29, 0x90, 0xa6, 0xfd, 0x66, 0xd2, 0xd1, 0x10, 0xd8, 0xb9,
	0x27, 0x7c, 0xaf, 0x13, 0xb3, 0x80, 0xf2, 0x10, 0x3a, 0x9c, 0xd4, 0x63, 0x16, 0x00, 0xeb, 0x64,
	0x48, 0x72, 0x15, 0x2d, 0x26, 0x83, 0x5e, 0x8f, 0x25, 0x69, 0x27, 0x94, 0x07, 0xcf, 0x84, 0x62,
	0x46, 0x86, 0xb4, 0x56, 0x16, 0x46, 0x76, 0x49, 0xa9, 0xf5, 0xc1, 0xc1, 0x3a, 0x75, 0xf7, 0xc0,
	0x6f, 0x52, 0xa5, 0xec, 0xf7, 0x97, 0x3c, 0x31, 0xb3, 0xcf, 0xe1, 0x4a, 0x5f, 0x44, 0x0b, 0x5a,
	0x69, 0x95, 0x31, 0x53, 0xdf, 0x98, 0x74, 0xe6, 0x53, 0x9d, 0x53, 0x9c, 0xfd, 0x64, 0xe9, 0xda,
	0x52, 0xdd, 0xda, 0x7d, 0xb1, 0x5f, 0xa3, 0x09, 0x83, 0x1c, 0x95, 0xf4, 0xc5, 0xbe, 0x4b, 0x93,
	0xbc, 0x54, 0x67, 0xb0, 0xbd, 0x5e, 0x4a, 0x71, 0x35, 0x1a, 0xb0, 0x98, 0x3e, 0x2f, 0x44, 0x50,
	0x0d, 0xc4, 0x20, 0x94, 0xe0, 0xc2, 0x2f, 0x0a, 0x11, 0x74, 0xa8, 0x02, 0x75, 0xa5, 0x45, 0x2f,
	0xe6, 0x0b, 0xec, 0x8d, 0x52, 0xbd, 0x58, 0x8f, 0x05, 0xf5, 0x5c, 0x9a, 0x48, 0x16, 0xef, 0x24,
	0x3c, 0xec, 0xa5, 0x3c, 0x03, 0x1a, 0x92, 0xb3, 0x68, 0xd6, 0xcd, 0x00, 0xad, 0xcc, 0x10, 0x61,
	0x3f, 0x83, 0x1e, 0x7d, 0x1d, 0x4e, 0xd5, 0x24, 0xe1, 0x89, 0x64, 0x5e, 0xca, 0xf1, 0x66, 0xc4,
	0x62, 0x2a, 0x45, 0x7c, 0x48, 0x15, 0x89, 0xd0, 0xb9, 0x5a, 0xd5, 0xf3, 0x38, 0xdc, 0x19, 0xf5,
	0x1b, 0x77, 0x06, 0x3c, 0x6a, 0xfb, 0x42, 0xe6, 0x12, 0xc8, 0x29, 0x34, 0xe3, 0xfa, 0x34, 0x49,
	0x86, 0xa9, 0x66, 0x5a, 0xc1, 0x4d, 0x8f, 0x9c, 0x44, 0xd3, 0x89, 0x2f, 0xe4, 0x30, 0xbd, 0x4c,
	0x01, 0xd8, 0xf4, 0x20, 0xd0, 0x3c, 0xd6, 0xd5, 0x9e, 0x3a, 0x91, 0xe6, 0x55, 0x8f, 0x75, 0x53,
	0x37, 0x2d, 0x5f, 0xf6, 0xb5, 0x98, 0xb1, 0x66, 0xf8, 0x02, 0x0b, 0xa5, 0x88, 0x0f, 0xc8, 0x93,
	0x68, 0x0a, 0xae, 0x2e, 0xca, 0xc2, 0xe8, 0xa2, 0x0e, 0xa3, 0xc3, 0xb4, 0x74, 0xf4, 0x16, 0xfb,
	0x69, 0x74, 0xa9, 0xc8, 0x9c, 0xfb, 0x7e, 0x23, 0x88, 0xe4, 0x01, 0x6c, 0x48, 0x76, 0xb9, 0xec,
	0xaf, 0x0b, 0x99, 0x10, 0x1b, 0xcd, 0x77, 0xb9, 0xef, 0xef, 0x73, 0xd9, 0xbf, 0x2d, 0x64, 0xa2,
	0xcd, 0x62, 0xe0, 0xec, 0xeb, 0x25, 0xcf, 0x81, 0xcc, 0x09, 0x7e, 0x3b, 0x60, 0x9b, 0x7c, 0x8f,
	0x41, 0x36, 0x16, 0xfb, 0x21, 0x8b, 0x3b, 0xc5, 0x2a, 0xb2, 0xa0, 0xd0, 0x79, 0x0c, 0x3c, 0x82,
	0x1e, 0x28, 0xb6, 0xe9, 0x70, 0xda, 0xda, 0x8d, 0xe7, 0xd6, 0xae, 0x3e, 0xfc, 0x68, 0x2d, 0xf0,
	0xa0, 0x16, 0x7a, 0x54, 0x52, 0xb5, 0x7d, 0xde, 0x51, 0xdf, 0xf6, 0x6b, 0x15, 0x74, 0xb2, 0xb0,
	0xad, 0xce, 0x02, 0x01, 0x3a, 0x80, 0xe9, 0xb3, 0xcc, 0xae, 0x43, 0xa2, 0xaf, 0x92, 0x3a, 0xb9,
	0x8c, 0xb0, 0x26, 0x74, 0xa4, 0xe8, 0x24, 0x11, 0xdd, 0x0f, 0x75, 0x54, 0x2c, 0xa4, 0x2b, 0xb6,
	0x45, 0x1b, 0x90, 0x79, 0x32, 0xf4, 0x58, 0x37, 0x59, 0x9e, 0x58, 0x99, 0x80, 0x3b, 0x02, 0x44,
	0x9d, 0x75, 0x13, 0xb8, 0x74, 0x45, 0xe4, 0x5e, 0xb2, 0x7c, 0x64, 0x65, 0xe2, 0xca, 0x11, 0x67,
	0x1a, 0xe0, 0xa6, 0x97, 0x80, 0xbb, 0x27, 0xf2, 0xc0, 0xcf, 0xf2, 0xd0, 0x64, 0x9a, 0xb1, 0x15,
	0x2a, 0x6d, 0xc3, 0x1f, 0x41, 0x4b, 0x7b, 0x8c, 0x45, 0x1d, 0x76, 0x97, 0x27, 0x92, 0x87, 0xbd,
	0x8e, 0xc7, 0x02, 0x01, 0xb2, 0x97, 0xa7, 0x94, 0x8d, 0x17, 0x81, 0xda, 0xd0, 0xc4, 0xba, 0xa6,
	0xd9, 0x83, 0x92, 0x89, 0xf2, 0x22, 0xd1, 0x66, 0x3e, 0x73, 0x25, 0xe8, 0xc4, 0xc0, 0x6a, 0x23,
	0x8e, 0xa8, 0xe0, 0xc3, 0x1c, 0x11, 0x94, 0x85, 0x02, 0x1b, 0xba, 0x2c, 0xcb, 0x52, 0xa0, 0xac,
	0x46, 0x35, 0xbd, 0xc3, 0xc4, 0x3a, 0x2c, 0x16, 0xbe, 0xff, 0xd6, 0x88, 0x7d, 0xaa, 0x5c, 0xe2,
	0x05, 0x0f, 0x77, 0x69, 0x8f, 0xc5, 0x90, 0xe9, 0xf7, 0xe1, 0x63, 0x34, 0xa1, 0x2c, 0x38, 0x73,
	0x0a, 0xa7, 0x33, 0xca, 0xcd, 0xf2, 0xd8, 0x07, 0x2a, 0xb5, 0x04, 0x0f, 0x65, 0xb2, 0xcd, 0x23,
	0x18, 0x9d, 0x62, 0xe6, 0xf2, 0x08, 0xc8, 0x25, 0xe7, 0xbc, 0x3f, 0x27, 0xe5, 0x0e, 0xda, 0x2a,
	0xc5, 0x64, 0xe3, 0x2e, 0x73, 0x07, 0x92, 0xdd, 0x8c, 0x3d, 0x16, 0x27, 0xe4, 0x2a, 0x9a, 0x12,
	0xea, 0x4b, 0xc7, 0x64, 0xb1, 0xd9, 0x81, 0xa6, 0x4f, 0x2d, 0x75, 0xf4, 0x3a, 0xdb, 0x2b, 0xcd,
	0x38, 0xcf, 0xb6, 0xde, 0xdc, 0x7c, 0x05, 0x86, 0xf0, 0x68, 0x00, 0x5d, 0x8e, 0xa4, 0x7b, 0x2c,
	0xcc, 0x5a, 0x98, 0x14, 0xb7, 0x0d, 0x28, 0xfb, 0xd5, 0x4a, 0xa9, 0xee, 0x3f, 0xcd, 0x7d, 0xdf,
	0xa5, 0x41, 0x7d, 0xb8, 0xea, 0xff, 0x29, 0xd1, 0xec, 0x21, 0x74, 0x6a, 0xcb, 0x7b, 0x88, 0x93,
	0x68, 0x5a, 0x87, 0xcd, 0xf2, 0x91, 0xd4, 0x21, 0xd2, 0xa8, 0x81, 0x5d, 0x2a, 0x2a, 0x43, 0x1a,
	0x30, 0x15, 0x32, 0xb3, 0xce, 0x0c, 0x20, 0x6e, 0xd0, 0x80, 0x8d, 0x48, 0x75, 0x85, 0x2f, 0x62,
	0x15, 0x26, 0xb3, 0x99, 0xd4, 0x1a, 0xa0, 0xec, 0x9d, 0xf2, 0x84, 0x4e, 0xa5, 0xdb, 0xdf, 0x62,
	0x92, 0x42, 0xaa, 0x00, 0x27, 0x0d, 0x00, 0x91, 0x5d, 0xf2, 0x11, 0x18, 0x10, 0xa5, 0xdb, 0x6f,
	0x7a, 0x50, 0xdd, 0x02, 0xbd, 0x4c, 0x9d, 0x67, 0xde, 0xc9, 0x61, 0xfb, 0x4c, 0xa9, 0xe3, 0x00,
	0xeb, 0x6d, 0x1d, 0x40, 0x8a, 0xb1, 0x5f, 0xa9, 0x94, 0xba, 0xee, 0x67, 0xa0, 0x55, 0x55, 0xf9,
	0x4f, 0xa5, 0x08, 0xd5, 0xb9, 0x8e, 0xc4, 0x85, 0x82, 0x9b, 0x5e, 0xda, 0xab, 0xe8, 0x28, 0x1a,
	0xe9, 0x3d, 0x73, 0x5c, 0xaa, 0x55, 0x14, 0x8b, 0x5e, 0xcc, 0x92, 0x24, 0xb3, 0x62, 0x06, 0x43,
	0x2e, 0xec, 0x09, 0xea, 0x6b, 0x13, 0xaa, 0x6f, 0x98, 0x0b, 0xee, 0x0c, 0x58, 0x7c, 0xa0, 0xf3,
	0x4d, 0x0a, 0x40, 0xfd, 0xef, 0x52, 0xee, 0x77, 0x7a, 0x34, 0x60, 0x92, 0x07, 0x4c, 0x99, 0xce,
	0x72, 0xe6, 0x01, 0x79, 0x5d, 0xe3, 0x46, 0x2f, 0x65, 0x7a, 0xf4, 0x52, 0xec, 0x67, 0x4b, 0xb5,
	0x7d, 0x5b, 0xf4, 0x7a, 0x3e, 0x83, 0x41, 0x8e, 0xaa, 0x41, 0xce, 0x98, 0x7a, 0x26, 0xf5, 0x24,
	0x7b, 0x01, 0xcd, 0x43, 0x7b, 0x90, 0xb5, 0xe0, 0x59, 0xa7, 0x08, 0x38, 0xdd, 0x7f, 0xdb, 0x41,
	0x29, 0x3e, 0xdb, 0x11, 0x73, 0x39, 0xf5, 0xab, 0xb7, 0xb9, 0xcf, 0xa5, 0x52, 0x9c, 0xa6, 0x9f,
	0x1d, 0xe3, 0x59, 0x46, 0x23, 0xdf, 0xe4, 0x7b, 0xc6, 0x87, 0x2a, 0xe8, 0x72, 0x79, 0x10, 0x53,
	0x2f, 0x41, 0x6d, 0x49, 0x63, 0xc8, 0xb3, 0x2d, 0x91, 0xa8, 0xe2, 0x09, 0x25, 0x8b, 0x01, 0xa1,
	0x5c, 0xb2, 0x14, 0x3a, 0xcb, 0x08, 0xe4, 0x31, 0x74, 0x32, 0x5d, 0x97, 0x68, 0x0e, 0x9d, 0x48,
	0xb3, 0xd0, 0x4a, 0x9c, 0x60, 0xe3, 0xf8, 0xdb, 0x03, 0xf4, 0x50, 0x59, 0x95, 0x3a, 0x4b, 0xa0,
	0x15, 0xdb, 0xa5, 0xb1, 0xd7, 0xf2, 0xa9, 0xcb, 0x02, 0x16, 0x4a, 0x72, 0x0e, 0xa1, 0x7d, 0x1a,
	0x7b, 0x86, 0x01, 0x66, 0x01, 0x93, 0x9e, 0xfe, 0x04, 0x9a, 0x52, 0xe4, 0xf4, 0xd0, 0x96, 0x33,
	0x09, 0xd0, 0xb3, 0x39, 0xfa, 0x40, 0xb9, 0x8d, 0x46, 0x3f, 0x67, 0xc7, 0xa5, 0x52, 0xe9, 0x08,
	0xdf, 0xaf, 0x73, 0x57, 0x77, 0xce, 0x34, 0x0c, 0x99, 0x3f, 0x6c, 0xfc, 0x53, 0x6f, 0x04, 0x9c,
	0x8a, 0xdb, 0x53, 0x68, 0x06, 0x72, 0x7d, 0x27, 0xe0, 0xd9, 0xe9, 0xa6, 0x01, 0xde, 0xe2, 0xe1,
	0x90, 0x44, 0xb3, 0x4e, 0x26, 0x25, 0xd1, 0xbb, 0xf6, 0xbb, 0x4a, 0x32, 0xaf, 0xf9, 0x3c, 0x82,
	0x44, 0xfe, 0x06, 0x64, 0xda, 0x97, 0x4b, 0x9d, 0x8a, 0x1e, 0x05, 0x61, 0x24, 0x68, 0xe7, 0x7d,
	0x74, 0x62, 0x3f, 0x55, 0x2a, 0x51, 0x5b, 0x74, 0x8f, 0x6d, 0x33, 0x1a, 0xd4, 0x68, 0x24, 0x29,
	0x0f, 0x0f, 0x1d, 0x63, 0xdf, 0xf6, 0xf2, 0x51, 0x74, 0xbc, 0x51, 0x17, 0x92, 0xea, 0xfd, 0xfa,
	0xc5, 0x93, 0x2c, 0xa2, 0x63, 0xc0, 0xb5, 0x53, 0xdb, 0xca, 0x1e, 0x95, 0xf0, 0x47, 0x2c, 0xb2,
	0x8c, 0x8e, 0x67, 0xd8, 0x91, 0x77, 0x24, 0xfc, 0x51, 0xab, 0xb0, 0xbe, 0xc5, 0xc3, 0x1e, 0xfe,
	0x98, 0x45, 0xce, 0xa2, 0x93, 0x19, 0xb6, 0xf0, 0x08, 0x82, 0x3f, 0x6e, 0x91, 0x53, 0x68, 0x31,
	0xa3, 0x8e, 0xbe, 0x4d, 0xe0, 0x4f, 0x58, 0x84, 0xa0, 0x85, 0x8c, 0xa4, 0xde, 0x1f, 0xf0, 0x27,
	0xcd, 0xe5, 0x23, 0x6f, 0x0f, 0xf8, 0x53, 0x16, 0x39, 0x87, 0x96, 0x87, 0x9c, 0xcc, 0x37, 0x06,
	0xfc, 0x69, 0x43, 0xed, 0x91, 0x97, 0x01, 0xfc, 0x19, 0x8b, 0x9c, 0x44, 0x64, 0x94, 0x92, 0x0e,
	0xfe, 0xf8, 0xb3, 0x16, 0x59, 0x42, 0xf7, 0x67, 0x84, 0x7c, 0x54, 0xc7, 0x9f, 0xb3, 0xc8, 0x79,
	0x74, 0x3a, 0xc3, 0x97, 0x67, 0x73, 0xfc, 0x79, 0x63, 0x63, 0xfe, 0xce, 0x8a, 0xbf, 0x60, 0xe0,
	0xf3, 0x79, 0x1d, 0xbf, 0x64, 0x91, 0xd3, 0xe8, 0xc4, 0x50, 0xf5, 0x91, 0x71, 0x19, 0xbf, 0x6c,
	0x11, 0x1b, 0x9d, 0xcb, 0x68, 0x63, 0xe7, 0x63, 0xfc, 0x45, 0x8b, 0x9c, 0x41, 0x4b, 0xb9, 0x89,
	0x8d, 0xd9, 0x11, 0x7f, 0xc9, 0x22, 0x0f, 0xa0, 0x53, 0x26, 0xb1, 0x26, 0xa8, 0xdb, 0xdf, 0x84,
	0x19, 0x20, 0xc4, 0x5f, 0x36, 0x4c, 0xaa, 0x28, 0x1b, 0x3b, 0x75, 0x75, 0x75, 0x5f, 0x31, 0x2c,
	0x33, 0x9c, 0x33, 0xf1, 0x57, 0x2d, 0xf2, 0x10, 0xba, 0x70, 0x8f, 0x3b, 0x1d, 0x3e, 0x6c, 0xe1,
	0xaf, 0x19, 0xb2, 0x4b, 0x73, 0x26, 0xfe, 0xba, 0xa1, 0xb8, 0x39, 0x71, 0xe1, 0x6f, 0x58, 0xe4,
	0x02, 0x3a, 0x9b, 0x11, 0xc7, 0xbd, 0x7b, 0xe1, 0x6f, 0x1a, 0x77, 0x5e, 0x1c, 0xba, 0xf0, 0xb7,
	0x2c, 0x72, 0x09, 0xad, 0xe4, 0xb6, 0x1b, 0x37, 0x4f, 0x05, 0x34, 0xc4, 0xdf, 0xb6, 0xc8, 0xdb,
	0xd1, 0xea, 0xbd, 0x96, 0x8d, 0x1f, 0x96, 0xf0, 0x77, 0x0c, 0xd5, 0xcd, 0x07, 0x75, 0xfc, 0x5d,
	0xe3, 0x42, 0x8d, 0xc9, 0x05, 0x7f, 0xcf, 0xb0, 0x49, 0x69, 0xcc, 0xc5, 0xdf, 0x37, 0xf6, 0x1a,
	0x23, 0x2e, 0xfe, 0x81, 0x21, 0xd4, 0x9c, 0x33, 0xf0, 0x0f, 0x8d, 0x8d, 0xc6, 0xe3, 0x3c, 0xfe,
	0x91, 0xe1, 0xb2, 0x90, 0x16, 0xda, 0x7a, 0x78, 0x6d, 0x78, 0x1c, 0x8e, 0xf3, 0x63, 0x23, 0x3c,
	0x46, 0x5e, 0xba, 0xf1, 0x4f, 0x0c, 0x27, 0x18, 0x3e, 0x5e, 0xe3, 0x9f, 0x5a, 0xe4, 0x22, 0x7a,
	0x60, 0x1c, 0xcf, 0x34, 0x89, 0xd4, 0xa9, 0xa4, 0xf8, 0x67, 0xc6, 0x0d, 0xc1, 0x0d, 0x8f, 0x2e,
	0xc4, 0x3f, 0x37, 0x92, 0x43, 0x61, 0xde, 0xc1, 0xbf, 0x30, 0x24, 0x8c, 0x9f, 0xd1, 0xf0, 0x2f,
	0x2d, 0x72, 0x02, 0xe1, 0x6c, 0x51, 0x36, 0xfb, 0xe0, 0x5f, 0x59, 0xe4, 0x41, 0x74, 0x3e, 0x4f,
	0x53, 0x69, 0xc9, 0xdc, 0x64, 0x34, 0x0e, 0x21, 0x5b, 0xa4, 0x35, 0xdc, 0xc3, 0xbf, 0x36, 0xe4,
	0xeb, 0x55, 0xaa, 0x5c, 0xed, 0x24, 0x0c, 0xff, 0xc6, 0xa0, 0x16, 0x46, 0x0d, 0xfc, 0xdb, 0xf1,
	0xd4, 0x74, 0x22, 0xc0, 0xbf, 0x33, 0x0c, 0x3a, 0xf2, 0x8b, 0x05, 0xfe, 0xbd, 0x99, 0x05, 0xb2,
	0x96, 0x1e, 0xff, 0xc1, 0xb8, 0x3f, 0xa3, 0xb5, 0xc6, 0xaf, 0x18, 0xa9, 0x55, 0x37, 0xc9, 0xf8,
	0x8f, 0xa6, 0x0f, 0x1a, 0xdd, 0x3d, 0xfe, 0x93, 0xe9, 0x0e, 0xa3, 0x9d, 0x20, 0xfe, 0xb3, 0x71,
	0xa7, 0xc3, 0x76, 0x0e, 0xff, 0xc5, 0xd0, 0x7a, 0xa4, 0x93, 0xc3, 0x7f, 0x35, 0x2e, 0xb2, 0xd8,
	0x03, 0xe1, 0x57, 0x0d, 0x55, 0xcc, 0x46, 0x06, 0xff, 0xcd, 0xf0, 0xbe, 0x72, 0xef, 0x8d, 0xff,
	0x6e, 0x04, 0xea, 0xbd, 0xda, 0x12, 0xfc, 0x0f, 0xe3, 0x4e, 0xef, 0xd1, 0x32, 0xe0, 0x7f, 0x1a,
	0x0e, 0x91, 0x55, 0x78, 0xfc, 0x9a, 0x81, 0xce, 0x8a, 0x30, 0xfe, 0x97, 0xe1, 0x63, 0xe3, 0xab,
	0x2b, 0xfe, 0xb7, 0x71, 0xd5, 0x85, 0xca, 0x8a, 0xff, 0x63, 0xad, 0x4f, 0x6e, 0x54, 0x3e, 0x58,
	0xb9, 0xef, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd9, 0xc2, 0x69, 0x47, 0x57, 0x1c, 0x00, 0x00,
}
