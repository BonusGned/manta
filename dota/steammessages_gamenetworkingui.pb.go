// Code generated by protoc-gen-go. DO NOT EDIT.
// source: steammessages_gamenetworkingui.proto

package dota

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CGameNetworkingUI_GlobalState struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CGameNetworkingUI_GlobalState) Reset()         { *m = CGameNetworkingUI_GlobalState{} }
func (m *CGameNetworkingUI_GlobalState) String() string { return proto.CompactTextString(m) }
func (*CGameNetworkingUI_GlobalState) ProtoMessage()    {}
func (*CGameNetworkingUI_GlobalState) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc65419cbb67e06, []int{0}
}

func (m *CGameNetworkingUI_GlobalState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CGameNetworkingUI_GlobalState.Unmarshal(m, b)
}
func (m *CGameNetworkingUI_GlobalState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CGameNetworkingUI_GlobalState.Marshal(b, m, deterministic)
}
func (m *CGameNetworkingUI_GlobalState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CGameNetworkingUI_GlobalState.Merge(m, src)
}
func (m *CGameNetworkingUI_GlobalState) XXX_Size() int {
	return xxx_messageInfo_CGameNetworkingUI_GlobalState.Size(m)
}
func (m *CGameNetworkingUI_GlobalState) XXX_DiscardUnknown() {
	xxx_messageInfo_CGameNetworkingUI_GlobalState.DiscardUnknown(m)
}

var xxx_messageInfo_CGameNetworkingUI_GlobalState proto.InternalMessageInfo

type CGameNetworkingUI_ConnectionState struct {
	ConnectionKey                       *string                             `protobuf:"bytes,1,opt,name=connection_key,json=connectionKey" json:"connection_key,omitempty"`
	Appid                               *uint32                             `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	ConnectionIdLocal                   *uint32                             `protobuf:"fixed32,3,opt,name=connection_id_local,json=connectionIdLocal" json:"connection_id_local,omitempty"`
	IdentityLocal                       *string                             `protobuf:"bytes,4,opt,name=identity_local,json=identityLocal" json:"identity_local,omitempty"`
	IdentityRemote                      *string                             `protobuf:"bytes,5,opt,name=identity_remote,json=identityRemote" json:"identity_remote,omitempty"`
	ConnectionState                     *uint32                             `protobuf:"varint,10,opt,name=connection_state,json=connectionState" json:"connection_state,omitempty"`
	StartTime                           *uint32                             `protobuf:"varint,12,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	CloseTime                           *uint32                             `protobuf:"varint,13,opt,name=close_time,json=closeTime" json:"close_time,omitempty"`
	CloseReason                         *uint32                             `protobuf:"varint,14,opt,name=close_reason,json=closeReason" json:"close_reason,omitempty"`
	CloseMessage                        *string                             `protobuf:"bytes,15,opt,name=close_message,json=closeMessage" json:"close_message,omitempty"`
	StatusLocToken                      *string                             `protobuf:"bytes,16,opt,name=status_loc_token,json=statusLocToken" json:"status_loc_token,omitempty"`
	TransportKind                       *uint32                             `protobuf:"varint,20,opt,name=transport_kind,json=transportKind" json:"transport_kind,omitempty"`
	SdrpopidLocal                       *string                             `protobuf:"bytes,21,opt,name=sdrpopid_local,json=sdrpopidLocal" json:"sdrpopid_local,omitempty"`
	SdrpopidRemote                      *string                             `protobuf:"bytes,22,opt,name=sdrpopid_remote,json=sdrpopidRemote" json:"sdrpopid_remote,omitempty"`
	AddressRemote                       *string                             `protobuf:"bytes,23,opt,name=address_remote,json=addressRemote" json:"address_remote,omitempty"`
	P2PRouting                          *CMsgSteamDatagramP2PRoutingSummary `protobuf:"bytes,24,opt,name=p2p_routing,json=p2pRouting" json:"p2p_routing,omitempty"`
	PingInterior                        *uint32                             `protobuf:"varint,25,opt,name=ping_interior,json=pingInterior" json:"ping_interior,omitempty"`
	PingRemoteFront                     *uint32                             `protobuf:"varint,26,opt,name=ping_remote_front,json=pingRemoteFront" json:"ping_remote_front,omitempty"`
	PingDefaultInternetRoute            *uint32                             `protobuf:"varint,27,opt,name=ping_default_internet_route,json=pingDefaultInternetRoute" json:"ping_default_internet_route,omitempty"`
	E2EQualityLocal                     *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,30,opt,name=e2e_quality_local,json=e2eQualityLocal" json:"e2e_quality_local,omitempty"`
	E2EQualityRemote                    *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,31,opt,name=e2e_quality_remote,json=e2eQualityRemote" json:"e2e_quality_remote,omitempty"`
	E2EQualityRemoteInstantaneousTime   *uint64                             `protobuf:"varint,32,opt,name=e2e_quality_remote_instantaneous_time,json=e2eQualityRemoteInstantaneousTime" json:"e2e_quality_remote_instantaneous_time,omitempty"`
	E2EQualityRemoteLifetimeTime        *uint64                             `protobuf:"varint,33,opt,name=e2e_quality_remote_lifetime_time,json=e2eQualityRemoteLifetimeTime" json:"e2e_quality_remote_lifetime_time,omitempty"`
	FrontQualityLocal                   *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,40,opt,name=front_quality_local,json=frontQualityLocal" json:"front_quality_local,omitempty"`
	FrontQualityRemote                  *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,41,opt,name=front_quality_remote,json=frontQualityRemote" json:"front_quality_remote,omitempty"`
	FrontQualityRemoteInstantaneousTime *uint64                             `protobuf:"varint,42,opt,name=front_quality_remote_instantaneous_time,json=frontQualityRemoteInstantaneousTime" json:"front_quality_remote_instantaneous_time,omitempty"`
	FrontQualityRemoteLifetimeTime      *uint64                             `protobuf:"varint,43,opt,name=front_quality_remote_lifetime_time,json=frontQualityRemoteLifetimeTime" json:"front_quality_remote_lifetime_time,omitempty"`
	XXX_NoUnkeyedLiteral                struct{}                            `json:"-"`
	XXX_unrecognized                    []byte                              `json:"-"`
	XXX_sizecache                       int32                               `json:"-"`
}

func (m *CGameNetworkingUI_ConnectionState) Reset()         { *m = CGameNetworkingUI_ConnectionState{} }
func (m *CGameNetworkingUI_ConnectionState) String() string { return proto.CompactTextString(m) }
func (*CGameNetworkingUI_ConnectionState) ProtoMessage()    {}
func (*CGameNetworkingUI_ConnectionState) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc65419cbb67e06, []int{1}
}

func (m *CGameNetworkingUI_ConnectionState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CGameNetworkingUI_ConnectionState.Unmarshal(m, b)
}
func (m *CGameNetworkingUI_ConnectionState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CGameNetworkingUI_ConnectionState.Marshal(b, m, deterministic)
}
func (m *CGameNetworkingUI_ConnectionState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CGameNetworkingUI_ConnectionState.Merge(m, src)
}
func (m *CGameNetworkingUI_ConnectionState) XXX_Size() int {
	return xxx_messageInfo_CGameNetworkingUI_ConnectionState.Size(m)
}
func (m *CGameNetworkingUI_ConnectionState) XXX_DiscardUnknown() {
	xxx_messageInfo_CGameNetworkingUI_ConnectionState.DiscardUnknown(m)
}

var xxx_messageInfo_CGameNetworkingUI_ConnectionState proto.InternalMessageInfo

func (m *CGameNetworkingUI_ConnectionState) GetConnectionKey() string {
	if m != nil && m.ConnectionKey != nil {
		return *m.ConnectionKey
	}
	return ""
}

func (m *CGameNetworkingUI_ConnectionState) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CGameNetworkingUI_ConnectionState) GetConnectionIdLocal() uint32 {
	if m != nil && m.ConnectionIdLocal != nil {
		return *m.ConnectionIdLocal
	}
	return 0
}

func (m *CGameNetworkingUI_ConnectionState) GetIdentityLocal() string {
	if m != nil && m.IdentityLocal != nil {
		return *m.IdentityLocal
	}
	return ""
}

func (m *CGameNetworkingUI_ConnectionState) GetIdentityRemote() string {
	if m != nil && m.IdentityRemote != nil {
		return *m.IdentityRemote
	}
	return ""
}

func (m *CGameNetworkingUI_ConnectionState) GetConnectionState() uint32 {
	if m != nil && m.ConnectionState != nil {
		return *m.ConnectionState
	}
	return 0
}

func (m *CGameNetworkingUI_ConnectionState) GetStartTime() uint32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *CGameNetworkingUI_ConnectionState) GetCloseTime() uint32 {
	if m != nil && m.CloseTime != nil {
		return *m.CloseTime
	}
	return 0
}

func (m *CGameNetworkingUI_ConnectionState) GetCloseReason() uint32 {
	if m != nil && m.CloseReason != nil {
		return *m.CloseReason
	}
	return 0
}

func (m *CGameNetworkingUI_ConnectionState) GetCloseMessage() string {
	if m != nil && m.CloseMessage != nil {
		return *m.CloseMessage
	}
	return ""
}

func (m *CGameNetworkingUI_ConnectionState) GetStatusLocToken() string {
	if m != nil && m.StatusLocToken != nil {
		return *m.StatusLocToken
	}
	return ""
}

func (m *CGameNetworkingUI_ConnectionState) GetTransportKind() uint32 {
	if m != nil && m.TransportKind != nil {
		return *m.TransportKind
	}
	return 0
}

func (m *CGameNetworkingUI_ConnectionState) GetSdrpopidLocal() string {
	if m != nil && m.SdrpopidLocal != nil {
		return *m.SdrpopidLocal
	}
	return ""
}

func (m *CGameNetworkingUI_ConnectionState) GetSdrpopidRemote() string {
	if m != nil && m.SdrpopidRemote != nil {
		return *m.SdrpopidRemote
	}
	return ""
}

func (m *CGameNetworkingUI_ConnectionState) GetAddressRemote() string {
	if m != nil && m.AddressRemote != nil {
		return *m.AddressRemote
	}
	return ""
}

func (m *CGameNetworkingUI_ConnectionState) GetP2PRouting() *CMsgSteamDatagramP2PRoutingSummary {
	if m != nil {
		return m.P2PRouting
	}
	return nil
}

func (m *CGameNetworkingUI_ConnectionState) GetPingInterior() uint32 {
	if m != nil && m.PingInterior != nil {
		return *m.PingInterior
	}
	return 0
}

func (m *CGameNetworkingUI_ConnectionState) GetPingRemoteFront() uint32 {
	if m != nil && m.PingRemoteFront != nil {
		return *m.PingRemoteFront
	}
	return 0
}

func (m *CGameNetworkingUI_ConnectionState) GetPingDefaultInternetRoute() uint32 {
	if m != nil && m.PingDefaultInternetRoute != nil {
		return *m.PingDefaultInternetRoute
	}
	return 0
}

func (m *CGameNetworkingUI_ConnectionState) GetE2EQualityLocal() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.E2EQualityLocal
	}
	return nil
}

func (m *CGameNetworkingUI_ConnectionState) GetE2EQualityRemote() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.E2EQualityRemote
	}
	return nil
}

func (m *CGameNetworkingUI_ConnectionState) GetE2EQualityRemoteInstantaneousTime() uint64 {
	if m != nil && m.E2EQualityRemoteInstantaneousTime != nil {
		return *m.E2EQualityRemoteInstantaneousTime
	}
	return 0
}

func (m *CGameNetworkingUI_ConnectionState) GetE2EQualityRemoteLifetimeTime() uint64 {
	if m != nil && m.E2EQualityRemoteLifetimeTime != nil {
		return *m.E2EQualityRemoteLifetimeTime
	}
	return 0
}

func (m *CGameNetworkingUI_ConnectionState) GetFrontQualityLocal() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.FrontQualityLocal
	}
	return nil
}

func (m *CGameNetworkingUI_ConnectionState) GetFrontQualityRemote() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.FrontQualityRemote
	}
	return nil
}

func (m *CGameNetworkingUI_ConnectionState) GetFrontQualityRemoteInstantaneousTime() uint64 {
	if m != nil && m.FrontQualityRemoteInstantaneousTime != nil {
		return *m.FrontQualityRemoteInstantaneousTime
	}
	return 0
}

func (m *CGameNetworkingUI_ConnectionState) GetFrontQualityRemoteLifetimeTime() uint64 {
	if m != nil && m.FrontQualityRemoteLifetimeTime != nil {
		return *m.FrontQualityRemoteLifetimeTime
	}
	return 0
}

type CGameNetworkingUI_Message struct {
	ConnectionState      []*CGameNetworkingUI_ConnectionState `protobuf:"bytes,1,rep,name=connection_state,json=connectionState" json:"connection_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *CGameNetworkingUI_Message) Reset()         { *m = CGameNetworkingUI_Message{} }
func (m *CGameNetworkingUI_Message) String() string { return proto.CompactTextString(m) }
func (*CGameNetworkingUI_Message) ProtoMessage()    {}
func (*CGameNetworkingUI_Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc65419cbb67e06, []int{2}
}

func (m *CGameNetworkingUI_Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CGameNetworkingUI_Message.Unmarshal(m, b)
}
func (m *CGameNetworkingUI_Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CGameNetworkingUI_Message.Marshal(b, m, deterministic)
}
func (m *CGameNetworkingUI_Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CGameNetworkingUI_Message.Merge(m, src)
}
func (m *CGameNetworkingUI_Message) XXX_Size() int {
	return xxx_messageInfo_CGameNetworkingUI_Message.Size(m)
}
func (m *CGameNetworkingUI_Message) XXX_DiscardUnknown() {
	xxx_messageInfo_CGameNetworkingUI_Message.DiscardUnknown(m)
}

var xxx_messageInfo_CGameNetworkingUI_Message proto.InternalMessageInfo

func (m *CGameNetworkingUI_Message) GetConnectionState() []*CGameNetworkingUI_ConnectionState {
	if m != nil {
		return m.ConnectionState
	}
	return nil
}

func init() {
	proto.RegisterType((*CGameNetworkingUI_GlobalState)(nil), "dota.CGameNetworkingUI_GlobalState")
	proto.RegisterType((*CGameNetworkingUI_ConnectionState)(nil), "dota.CGameNetworkingUI_ConnectionState")
	proto.RegisterType((*CGameNetworkingUI_Message)(nil), "dota.CGameNetworkingUI_Message")
}

func init() {
	proto.RegisterFile("steammessages_gamenetworkingui.proto", fileDescriptor_2bc65419cbb67e06)
}

var fileDescriptor_2bc65419cbb67e06 = []byte{
	// 721 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x95, 0x4f, 0x4f, 0x1b, 0x3b,
	0x14, 0xc5, 0x35, 0x0f, 0xd0, 0x13, 0x0e, 0x21, 0xc9, 0xc0, 0x7b, 0x35, 0x50, 0x60, 0x12, 0x1a,
	0x31, 0x50, 0x29, 0x8b, 0xec, 0xbb, 0x29, 0x08, 0x9a, 0x02, 0x15, 0x1d, 0xd2, 0xaa, 0xea, 0xc6,
	0x72, 0x33, 0x97, 0xc8, 0xca, 0x8c, 0x3d, 0xb5, 0x1d, 0x55, 0xd9, 0xf5, 0x43, 0xf6, 0x03, 0x55,
	0xfe, 0x93, 0x49, 0x48, 0xa2, 0x56, 0xec, 0x92, 0x73, 0x7f, 0x3e, 0xbe, 0xf7, 0xd8, 0x71, 0xd0,
	0x2b, 0xa5, 0x81, 0xe6, 0x39, 0x28, 0x45, 0x87, 0xa0, 0xc8, 0x90, 0xe6, 0xc0, 0x41, 0xff, 0x10,
	0x72, 0xc4, 0xf8, 0x70, 0xcc, 0x3a, 0x85, 0x14, 0x5a, 0x84, 0xeb, 0xa9, 0xd0, 0x74, 0xbf, 0x6d,
	0xd9, 0x59, 0x59, 0x89, 0xc1, 0x08, 0xb4, 0x22, 0xd3, 0xd5, 0x0e, 0xde, 0x8f, 0x2c, 0x96, 0x52,
	0x4d, 0x87, 0x92, 0xe6, 0x65, 0x95, 0xa8, 0x54, 0x3a, 0xa2, 0x75, 0x8c, 0x0e, 0x2f, 0xae, 0x69,
	0x0e, 0x1f, 0x4a, 0xab, 0x4f, 0x3d, 0x72, 0x9d, 0x89, 0x6f, 0x34, 0x7b, 0xd0, 0x54, 0x43, 0xeb,
	0x57, 0x05, 0x35, 0x97, 0x89, 0x0b, 0xc1, 0x39, 0x0c, 0x34, 0x13, 0xdc, 0x52, 0x61, 0x1b, 0x6d,
	0x0f, 0x4a, 0x89, 0x8c, 0x60, 0x82, 0x83, 0x28, 0x88, 0x37, 0x93, 0xea, 0x4c, 0xbd, 0x81, 0x49,
	0xb8, 0x8b, 0x36, 0x68, 0x51, 0xb0, 0x14, 0xff, 0x13, 0x05, 0x71, 0x35, 0x71, 0x5f, 0xc2, 0x0e,
	0xda, 0x99, 0x5b, 0xcc, 0x52, 0x92, 0x89, 0x01, 0xcd, 0xf0, 0x5a, 0x14, 0xc4, 0xff, 0x26, 0x8d,
	0x59, 0xa9, 0x97, 0xde, 0x9a, 0x82, 0xd9, 0x8c, 0xa5, 0xc0, 0x35, 0xd3, 0x13, 0x8f, 0xae, 0xbb,
	0xcd, 0xa6, 0xaa, 0xc3, 0x4e, 0x51, 0xad, 0xc4, 0x24, 0xe4, 0x42, 0x03, 0xde, 0xb0, 0x5c, 0xb9,
	0x3a, 0xb1, 0x6a, 0x78, 0x86, 0xea, 0x73, 0xfb, 0x2b, 0x33, 0x10, 0x46, 0xb6, 0xc1, 0xda, 0x60,
	0x61, 0xce, 0x43, 0x84, 0x94, 0xa6, 0x52, 0x13, 0xcd, 0x72, 0xc0, 0x5b, 0x16, 0xda, 0xb4, 0x4a,
	0x9f, 0xe5, 0xb6, 0x3c, 0xc8, 0x84, 0x02, 0x57, 0xae, 0xba, 0xb2, 0x55, 0x6c, 0xb9, 0x89, 0xb6,
	0x5c, 0x59, 0x02, 0x55, 0x82, 0xe3, 0x6d, 0x0b, 0x54, 0xac, 0x96, 0x58, 0x29, 0x3c, 0x41, 0x55,
	0x87, 0xf8, 0xb3, 0xc2, 0x35, 0xdb, 0xb2, 0x5b, 0x77, 0xe7, 0xb4, 0x30, 0x46, 0x75, 0xd3, 0xe5,
	0x58, 0x99, 0xf1, 0x89, 0x16, 0x23, 0xe0, 0xb8, 0xee, 0x46, 0x73, 0xfa, 0xad, 0x18, 0xf4, 0x8d,
	0x6a, 0xa2, 0xd2, 0x92, 0x72, 0x55, 0x08, 0xa9, 0xc9, 0x88, 0xf1, 0x14, 0xef, 0xda, 0x3d, 0xab,
	0xa5, 0x7a, 0xc3, 0x78, 0x6a, 0x30, 0x95, 0xca, 0x42, 0x14, 0x65, 0xf8, 0xff, 0xb9, 0x44, 0xa7,
	0x6a, 0x99, 0x68, 0x89, 0xf9, 0x44, 0xff, 0xf7, 0xdb, 0x7a, 0xd9, 0x27, 0xda, 0x46, 0xdb, 0x34,
	0x4d, 0x25, 0x28, 0x35, 0xe5, 0x5e, 0x38, 0x3f, 0xaf, 0x7a, 0xac, 0x87, 0x2a, 0x45, 0xb7, 0x20,
	0x52, 0x8c, 0x35, 0xe3, 0x43, 0x8c, 0xa3, 0x20, 0xae, 0x74, 0xe3, 0x8e, 0xb9, 0xe1, 0x9d, 0x8b,
	0x3b, 0x35, 0x7c, 0x30, 0xb7, 0xf7, 0xd2, 0xdf, 0xde, 0xfb, 0xee, 0x7d, 0xe2, 0xc0, 0x87, 0x71,
	0x9e, 0x53, 0x39, 0x49, 0x50, 0xd1, 0x2d, 0xbc, 0x64, 0x72, 0x2b, 0x18, 0x1f, 0x12, 0xc6, 0x35,
	0x48, 0x26, 0x24, 0xde, 0xb3, 0x73, 0x6e, 0x19, 0xb1, 0xe7, 0xb5, 0xf0, 0x1c, 0x35, 0x2c, 0xe4,
	0x7a, 0x22, 0x8f, 0x52, 0x70, 0x8d, 0xf7, 0xdd, 0x49, 0x9b, 0x82, 0x6b, 0xeb, 0xca, 0xc8, 0xe1,
	0x1b, 0x74, 0x60, 0xd9, 0x14, 0x1e, 0xe9, 0x38, 0xd3, 0xce, 0x98, 0x83, 0xb6, 0xdd, 0x02, 0x3e,
	0xb0, 0xab, 0xb0, 0x41, 0x2e, 0x1d, 0xd1, 0xf3, 0x80, 0xe9, 0x08, 0xc2, 0x3e, 0x6a, 0x40, 0x17,
	0xc8, 0xf7, 0x31, 0xcd, 0x66, 0xd7, 0xf4, 0xe8, 0x8f, 0x03, 0xce, 0x7e, 0x53, 0x1f, 0xdd, 0xaa,
	0xa4, 0x06, 0x5d, 0xf0, 0x9f, 0xdd, 0x01, 0x7c, 0x46, 0xe1, 0xbc, 0xab, 0xcf, 0xf6, 0xf8, 0x99,
	0xb6, 0xf5, 0x99, 0xad, 0x3f, 0x88, 0x7b, 0xd4, 0x5e, 0xf6, 0x25, 0x8c, 0x2b, 0x4d, 0xb9, 0xa6,
	0x1c, 0xc4, 0x58, 0xb9, 0x2b, 0x1d, 0x45, 0x41, 0xbc, 0x9e, 0x34, 0x17, 0x0d, 0x7a, 0xf3, 0xa4,
	0xbd, 0xea, 0x57, 0x28, 0x5a, 0xe1, 0x98, 0xb1, 0x47, 0x30, 0x3e, 0xce, 0xac, 0x69, 0xcd, 0x5e,
	0x2e, 0x9a, 0xdd, 0x7a, 0xc8, 0xfa, 0x7c, 0x41, 0x3b, 0xf6, 0x98, 0x16, 0x92, 0x8c, 0x9f, 0x39,
	0x72, 0xc3, 0x9a, 0x3c, 0xc9, 0xf2, 0x2b, 0xda, 0x7d, 0xea, 0xec, 0xd3, 0x3c, 0x7b, 0xa6, 0x75,
	0x38, 0x6f, 0xed, 0xf3, 0xec, 0xa3, 0xd3, 0x55, 0xde, 0xab, 0x12, 0x3d, 0xb7, 0x21, 0x9c, 0x2c,
	0x9b, 0x2c, 0x67, 0xfa, 0x1e, 0xb5, 0x56, 0xba, 0x3e, 0x4d, 0xf5, 0xb5, 0x35, 0x3c, 0x5a, 0x36,
	0x9c, 0xcf, 0xb5, 0x25, 0xd0, 0xde, 0xf2, 0xab, 0x3e, 0x7d, 0x5f, 0x92, 0x15, 0x0f, 0x62, 0x10,
	0xad, 0xc5, 0x95, 0xee, 0xa9, 0x8f, 0xe5, 0x6f, 0x7f, 0x08, 0x4b, 0x2f, 0xe7, 0xdb, 0x8d, 0x77,
	0xc1, 0xcf, 0x20, 0xf8, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x9f, 0xea, 0x6f, 0x99, 0xe5, 0x06, 0x00,
	0x00,
}
