// Code generated by protoc-gen-go. DO NOT EDIT.
// source: steamdatagram_messages_sdr.proto

package dota

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ESteamDatagramMsgID int32

const (
	ESteamDatagramMsgID_k_ESteamDatagramMsg_Invalid                       ESteamDatagramMsgID = 0
	ESteamDatagramMsgID_k_ESteamDatagramMsg_RouterPingRequest             ESteamDatagramMsgID = 1
	ESteamDatagramMsgID_k_ESteamDatagramMsg_RouterPingReply               ESteamDatagramMsgID = 2
	ESteamDatagramMsgID_k_ESteamDatagramMsg_GameserverPingRequest         ESteamDatagramMsgID = 3
	ESteamDatagramMsgID_k_ESteamDatagramMsg_LegacyGameserverPingReply     ESteamDatagramMsgID = 4
	ESteamDatagramMsgID_k_ESteamDatagramMsg_GameserverSessionRequest      ESteamDatagramMsgID = 5
	ESteamDatagramMsgID_k_ESteamDatagramMsg_GameserverSessionEstablished  ESteamDatagramMsgID = 6
	ESteamDatagramMsgID_k_ESteamDatagramMsg_NoSession                     ESteamDatagramMsgID = 7
	ESteamDatagramMsgID_k_ESteamDatagramMsg_Diagnostic                    ESteamDatagramMsgID = 8
	ESteamDatagramMsgID_k_ESteamDatagramMsg_DataClientToRouter            ESteamDatagramMsgID = 9
	ESteamDatagramMsgID_k_ESteamDatagramMsg_DataRouterToServer            ESteamDatagramMsgID = 10
	ESteamDatagramMsgID_k_ESteamDatagramMsg_DataServerToRouter            ESteamDatagramMsgID = 11
	ESteamDatagramMsgID_k_ESteamDatagramMsg_DataRouterToClient            ESteamDatagramMsgID = 12
	ESteamDatagramMsgID_k_ESteamDatagramMsg_Stats                         ESteamDatagramMsgID = 13
	ESteamDatagramMsgID_k_ESteamDatagramMsg_ClientPingSampleRequest       ESteamDatagramMsgID = 14
	ESteamDatagramMsgID_k_ESteamDatagramMsg_ClientPingSampleReply         ESteamDatagramMsgID = 15
	ESteamDatagramMsgID_k_ESteamDatagramMsg_ClientToRouterSwitchedPrimary ESteamDatagramMsgID = 16
	ESteamDatagramMsgID_k_ESteamDatagramMsg_RelayHealth                   ESteamDatagramMsgID = 17
	ESteamDatagramMsgID_k_ESteamDatagramMsg_ConnectRequest                ESteamDatagramMsgID = 18
	ESteamDatagramMsgID_k_ESteamDatagramMsg_ConnectOK                     ESteamDatagramMsgID = 19
	ESteamDatagramMsgID_k_ESteamDatagramMsg_ConnectionClosed              ESteamDatagramMsgID = 20
	ESteamDatagramMsgID_k_ESteamDatagramMsg_NoConnection                  ESteamDatagramMsgID = 21
	ESteamDatagramMsgID_k_ESteamDatagramMsg_RelayToRelayPingRequest       ESteamDatagramMsgID = 22
	ESteamDatagramMsgID_k_ESteamDatagramMsg_RelayToRelayPingReply         ESteamDatagramMsgID = 23
	ESteamDatagramMsgID_k_ESteamDatagramMsg_P2PSessionRequest             ESteamDatagramMsgID = 24
	ESteamDatagramMsgID_k_ESteamDatagramMsg_P2PSessionEstablished         ESteamDatagramMsgID = 25
	ESteamDatagramMsgID_k_ESteamDatagramMsg_P2PStatsClient                ESteamDatagramMsgID = 26
	ESteamDatagramMsgID_k_ESteamDatagramMsg_P2PStatsRelay                 ESteamDatagramMsgID = 27
	ESteamDatagramMsgID_k_ESteamDatagramMsg_P2PBadRoute                   ESteamDatagramMsgID = 28
	ESteamDatagramMsgID_k_ESteamDatagramMsg_GameserverPingReply           ESteamDatagramMsgID = 29
	ESteamDatagramMsgID_k_ESteamDatagramMsg_GameserverRegistration        ESteamDatagramMsgID = 30
	ESteamDatagramMsgID_k_ESteamDatagramMsg_SetSecondaryAddressRequest    ESteamDatagramMsgID = 31
	ESteamDatagramMsgID_k_ESteamDatagramMsg_SetSecondaryAddressResult     ESteamDatagramMsgID = 32
)

var ESteamDatagramMsgID_name = map[int32]string{
	0:  "k_ESteamDatagramMsg_Invalid",
	1:  "k_ESteamDatagramMsg_RouterPingRequest",
	2:  "k_ESteamDatagramMsg_RouterPingReply",
	3:  "k_ESteamDatagramMsg_GameserverPingRequest",
	4:  "k_ESteamDatagramMsg_LegacyGameserverPingReply",
	5:  "k_ESteamDatagramMsg_GameserverSessionRequest",
	6:  "k_ESteamDatagramMsg_GameserverSessionEstablished",
	7:  "k_ESteamDatagramMsg_NoSession",
	8:  "k_ESteamDatagramMsg_Diagnostic",
	9:  "k_ESteamDatagramMsg_DataClientToRouter",
	10: "k_ESteamDatagramMsg_DataRouterToServer",
	11: "k_ESteamDatagramMsg_DataServerToRouter",
	12: "k_ESteamDatagramMsg_DataRouterToClient",
	13: "k_ESteamDatagramMsg_Stats",
	14: "k_ESteamDatagramMsg_ClientPingSampleRequest",
	15: "k_ESteamDatagramMsg_ClientPingSampleReply",
	16: "k_ESteamDatagramMsg_ClientToRouterSwitchedPrimary",
	17: "k_ESteamDatagramMsg_RelayHealth",
	18: "k_ESteamDatagramMsg_ConnectRequest",
	19: "k_ESteamDatagramMsg_ConnectOK",
	20: "k_ESteamDatagramMsg_ConnectionClosed",
	21: "k_ESteamDatagramMsg_NoConnection",
	22: "k_ESteamDatagramMsg_RelayToRelayPingRequest",
	23: "k_ESteamDatagramMsg_RelayToRelayPingReply",
	24: "k_ESteamDatagramMsg_P2PSessionRequest",
	25: "k_ESteamDatagramMsg_P2PSessionEstablished",
	26: "k_ESteamDatagramMsg_P2PStatsClient",
	27: "k_ESteamDatagramMsg_P2PStatsRelay",
	28: "k_ESteamDatagramMsg_P2PBadRoute",
	29: "k_ESteamDatagramMsg_GameserverPingReply",
	30: "k_ESteamDatagramMsg_GameserverRegistration",
	31: "k_ESteamDatagramMsg_SetSecondaryAddressRequest",
	32: "k_ESteamDatagramMsg_SetSecondaryAddressResult",
}

var ESteamDatagramMsgID_value = map[string]int32{
	"k_ESteamDatagramMsg_Invalid":                       0,
	"k_ESteamDatagramMsg_RouterPingRequest":             1,
	"k_ESteamDatagramMsg_RouterPingReply":               2,
	"k_ESteamDatagramMsg_GameserverPingRequest":         3,
	"k_ESteamDatagramMsg_LegacyGameserverPingReply":     4,
	"k_ESteamDatagramMsg_GameserverSessionRequest":      5,
	"k_ESteamDatagramMsg_GameserverSessionEstablished":  6,
	"k_ESteamDatagramMsg_NoSession":                     7,
	"k_ESteamDatagramMsg_Diagnostic":                    8,
	"k_ESteamDatagramMsg_DataClientToRouter":            9,
	"k_ESteamDatagramMsg_DataRouterToServer":            10,
	"k_ESteamDatagramMsg_DataServerToRouter":            11,
	"k_ESteamDatagramMsg_DataRouterToClient":            12,
	"k_ESteamDatagramMsg_Stats":                         13,
	"k_ESteamDatagramMsg_ClientPingSampleRequest":       14,
	"k_ESteamDatagramMsg_ClientPingSampleReply":         15,
	"k_ESteamDatagramMsg_ClientToRouterSwitchedPrimary": 16,
	"k_ESteamDatagramMsg_RelayHealth":                   17,
	"k_ESteamDatagramMsg_ConnectRequest":                18,
	"k_ESteamDatagramMsg_ConnectOK":                     19,
	"k_ESteamDatagramMsg_ConnectionClosed":              20,
	"k_ESteamDatagramMsg_NoConnection":                  21,
	"k_ESteamDatagramMsg_RelayToRelayPingRequest":       22,
	"k_ESteamDatagramMsg_RelayToRelayPingReply":         23,
	"k_ESteamDatagramMsg_P2PSessionRequest":             24,
	"k_ESteamDatagramMsg_P2PSessionEstablished":         25,
	"k_ESteamDatagramMsg_P2PStatsClient":                26,
	"k_ESteamDatagramMsg_P2PStatsRelay":                 27,
	"k_ESteamDatagramMsg_P2PBadRoute":                   28,
	"k_ESteamDatagramMsg_GameserverPingReply":           29,
	"k_ESteamDatagramMsg_GameserverRegistration":        30,
	"k_ESteamDatagramMsg_SetSecondaryAddressRequest":    31,
	"k_ESteamDatagramMsg_SetSecondaryAddressResult":     32,
}

func (x ESteamDatagramMsgID) Enum() *ESteamDatagramMsgID {
	p := new(ESteamDatagramMsgID)
	*p = x
	return p
}

func (x ESteamDatagramMsgID) String() string {
	return proto.EnumName(ESteamDatagramMsgID_name, int32(x))
}

func (x *ESteamDatagramMsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ESteamDatagramMsgID_value, data, "ESteamDatagramMsgID")
	if err != nil {
		return err
	}
	*x = ESteamDatagramMsgID(value)
	return nil
}

func (ESteamDatagramMsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{0}
}

type CMsgSteamDatagramRouterPingReply_Flags int32

const (
	CMsgSteamDatagramRouterPingReply_FLAG_MAYBE_MORE_DATA_CENTERS  CMsgSteamDatagramRouterPingReply_Flags = 1
	CMsgSteamDatagramRouterPingReply_FLAG_MAYBE_MORE_ALT_ADDRESSES CMsgSteamDatagramRouterPingReply_Flags = 2
)

var CMsgSteamDatagramRouterPingReply_Flags_name = map[int32]string{
	1: "FLAG_MAYBE_MORE_DATA_CENTERS",
	2: "FLAG_MAYBE_MORE_ALT_ADDRESSES",
}

var CMsgSteamDatagramRouterPingReply_Flags_value = map[string]int32{
	"FLAG_MAYBE_MORE_DATA_CENTERS":  1,
	"FLAG_MAYBE_MORE_ALT_ADDRESSES": 2,
}

func (x CMsgSteamDatagramRouterPingReply_Flags) Enum() *CMsgSteamDatagramRouterPingReply_Flags {
	p := new(CMsgSteamDatagramRouterPingReply_Flags)
	*p = x
	return p
}

func (x CMsgSteamDatagramRouterPingReply_Flags) String() string {
	return proto.EnumName(CMsgSteamDatagramRouterPingReply_Flags_name, int32(x))
}

func (x *CMsgSteamDatagramRouterPingReply_Flags) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgSteamDatagramRouterPingReply_Flags_value, data, "CMsgSteamDatagramRouterPingReply_Flags")
	if err != nil {
		return err
	}
	*x = CMsgSteamDatagramRouterPingReply_Flags(value)
	return nil
}

func (CMsgSteamDatagramRouterPingReply_Flags) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{0, 0}
}

type CMsgSteamDatagramRouterPingReply_AltAddress_Protocol int32

const (
	CMsgSteamDatagramRouterPingReply_AltAddress_DefaultProtocol CMsgSteamDatagramRouterPingReply_AltAddress_Protocol = 0
	CMsgSteamDatagramRouterPingReply_AltAddress_NetworkNext     CMsgSteamDatagramRouterPingReply_AltAddress_Protocol = 1
)

var CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_name = map[int32]string{
	0: "DefaultProtocol",
	1: "NetworkNext",
}

var CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_value = map[string]int32{
	"DefaultProtocol": 0,
	"NetworkNext":     1,
}

func (x CMsgSteamDatagramRouterPingReply_AltAddress_Protocol) Enum() *CMsgSteamDatagramRouterPingReply_AltAddress_Protocol {
	p := new(CMsgSteamDatagramRouterPingReply_AltAddress_Protocol)
	*p = x
	return p
}

func (x CMsgSteamDatagramRouterPingReply_AltAddress_Protocol) String() string {
	return proto.EnumName(CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_name, int32(x))
}

func (x *CMsgSteamDatagramRouterPingReply_AltAddress_Protocol) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_value, data, "CMsgSteamDatagramRouterPingReply_AltAddress_Protocol")
	if err != nil {
		return err
	}
	*x = CMsgSteamDatagramRouterPingReply_AltAddress_Protocol(value)
	return nil
}

func (CMsgSteamDatagramRouterPingReply_AltAddress_Protocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{0, 1, 0}
}

type CMsgSteamDatagramConnectionClosed_ERelayMode int32

const (
	CMsgSteamDatagramConnectionClosed_None         CMsgSteamDatagramConnectionClosed_ERelayMode = 0
	CMsgSteamDatagramConnectionClosed_EndToEnd     CMsgSteamDatagramConnectionClosed_ERelayMode = 1
	CMsgSteamDatagramConnectionClosed_ClosedByPeer CMsgSteamDatagramConnectionClosed_ERelayMode = 2
)

var CMsgSteamDatagramConnectionClosed_ERelayMode_name = map[int32]string{
	0: "None",
	1: "EndToEnd",
	2: "ClosedByPeer",
}

var CMsgSteamDatagramConnectionClosed_ERelayMode_value = map[string]int32{
	"None":         0,
	"EndToEnd":     1,
	"ClosedByPeer": 2,
}

func (x CMsgSteamDatagramConnectionClosed_ERelayMode) Enum() *CMsgSteamDatagramConnectionClosed_ERelayMode {
	p := new(CMsgSteamDatagramConnectionClosed_ERelayMode)
	*p = x
	return p
}

func (x CMsgSteamDatagramConnectionClosed_ERelayMode) String() string {
	return proto.EnumName(CMsgSteamDatagramConnectionClosed_ERelayMode_name, int32(x))
}

func (x *CMsgSteamDatagramConnectionClosed_ERelayMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgSteamDatagramConnectionClosed_ERelayMode_value, data, "CMsgSteamDatagramConnectionClosed_ERelayMode")
	if err != nil {
		return err
	}
	*x = CMsgSteamDatagramConnectionClosed_ERelayMode(value)
	return nil
}

func (CMsgSteamDatagramConnectionClosed_ERelayMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{13, 0}
}

type CMsgSteamDatagramConnectionStatsClientToRouter_Flags int32

const (
	CMsgSteamDatagramConnectionStatsClientToRouter_ACK_REQUEST_RELAY     CMsgSteamDatagramConnectionStatsClientToRouter_Flags = 1
	CMsgSteamDatagramConnectionStatsClientToRouter_ACK_REQUEST_E2E       CMsgSteamDatagramConnectionStatsClientToRouter_Flags = 2
	CMsgSteamDatagramConnectionStatsClientToRouter_ACK_REQUEST_IMMEDIATE CMsgSteamDatagramConnectionStatsClientToRouter_Flags = 4
	CMsgSteamDatagramConnectionStatsClientToRouter_NOT_PRIMARY_SESSION   CMsgSteamDatagramConnectionStatsClientToRouter_Flags = 8
)

var CMsgSteamDatagramConnectionStatsClientToRouter_Flags_name = map[int32]string{
	1: "ACK_REQUEST_RELAY",
	2: "ACK_REQUEST_E2E",
	4: "ACK_REQUEST_IMMEDIATE",
	8: "NOT_PRIMARY_SESSION",
}

var CMsgSteamDatagramConnectionStatsClientToRouter_Flags_value = map[string]int32{
	"ACK_REQUEST_RELAY":     1,
	"ACK_REQUEST_E2E":       2,
	"ACK_REQUEST_IMMEDIATE": 4,
	"NOT_PRIMARY_SESSION":   8,
}

func (x CMsgSteamDatagramConnectionStatsClientToRouter_Flags) Enum() *CMsgSteamDatagramConnectionStatsClientToRouter_Flags {
	p := new(CMsgSteamDatagramConnectionStatsClientToRouter_Flags)
	*p = x
	return p
}

func (x CMsgSteamDatagramConnectionStatsClientToRouter_Flags) String() string {
	return proto.EnumName(CMsgSteamDatagramConnectionStatsClientToRouter_Flags_name, int32(x))
}

func (x *CMsgSteamDatagramConnectionStatsClientToRouter_Flags) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgSteamDatagramConnectionStatsClientToRouter_Flags_value, data, "CMsgSteamDatagramConnectionStatsClientToRouter_Flags")
	if err != nil {
		return err
	}
	*x = CMsgSteamDatagramConnectionStatsClientToRouter_Flags(value)
	return nil
}

func (CMsgSteamDatagramConnectionStatsClientToRouter_Flags) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{17, 0}
}

type CMsgSteamDatagramConnectionStatsRouterToClient_Flags int32

const (
	CMsgSteamDatagramConnectionStatsRouterToClient_ACK_REQUEST_RELAY     CMsgSteamDatagramConnectionStatsRouterToClient_Flags = 1
	CMsgSteamDatagramConnectionStatsRouterToClient_ACK_REQUEST_E2E       CMsgSteamDatagramConnectionStatsRouterToClient_Flags = 2
	CMsgSteamDatagramConnectionStatsRouterToClient_ACK_REQUEST_IMMEDIATE CMsgSteamDatagramConnectionStatsRouterToClient_Flags = 4
)

var CMsgSteamDatagramConnectionStatsRouterToClient_Flags_name = map[int32]string{
	1: "ACK_REQUEST_RELAY",
	2: "ACK_REQUEST_E2E",
	4: "ACK_REQUEST_IMMEDIATE",
}

var CMsgSteamDatagramConnectionStatsRouterToClient_Flags_value = map[string]int32{
	"ACK_REQUEST_RELAY":     1,
	"ACK_REQUEST_E2E":       2,
	"ACK_REQUEST_IMMEDIATE": 4,
}

func (x CMsgSteamDatagramConnectionStatsRouterToClient_Flags) Enum() *CMsgSteamDatagramConnectionStatsRouterToClient_Flags {
	p := new(CMsgSteamDatagramConnectionStatsRouterToClient_Flags)
	*p = x
	return p
}

func (x CMsgSteamDatagramConnectionStatsRouterToClient_Flags) String() string {
	return proto.EnumName(CMsgSteamDatagramConnectionStatsRouterToClient_Flags_name, int32(x))
}

func (x *CMsgSteamDatagramConnectionStatsRouterToClient_Flags) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgSteamDatagramConnectionStatsRouterToClient_Flags_value, data, "CMsgSteamDatagramConnectionStatsRouterToClient_Flags")
	if err != nil {
		return err
	}
	*x = CMsgSteamDatagramConnectionStatsRouterToClient_Flags(value)
	return nil
}

func (CMsgSteamDatagramConnectionStatsRouterToClient_Flags) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{18, 0}
}

type CMsgSteamDatagramConnectionStatsRouterToServer_Flags int32

const (
	CMsgSteamDatagramConnectionStatsRouterToServer_ACK_REQUEST_RELAY     CMsgSteamDatagramConnectionStatsRouterToServer_Flags = 1
	CMsgSteamDatagramConnectionStatsRouterToServer_ACK_REQUEST_E2E       CMsgSteamDatagramConnectionStatsRouterToServer_Flags = 2
	CMsgSteamDatagramConnectionStatsRouterToServer_ACK_REQUEST_IMMEDIATE CMsgSteamDatagramConnectionStatsRouterToServer_Flags = 4
)

var CMsgSteamDatagramConnectionStatsRouterToServer_Flags_name = map[int32]string{
	1: "ACK_REQUEST_RELAY",
	2: "ACK_REQUEST_E2E",
	4: "ACK_REQUEST_IMMEDIATE",
}

var CMsgSteamDatagramConnectionStatsRouterToServer_Flags_value = map[string]int32{
	"ACK_REQUEST_RELAY":     1,
	"ACK_REQUEST_E2E":       2,
	"ACK_REQUEST_IMMEDIATE": 4,
}

func (x CMsgSteamDatagramConnectionStatsRouterToServer_Flags) Enum() *CMsgSteamDatagramConnectionStatsRouterToServer_Flags {
	p := new(CMsgSteamDatagramConnectionStatsRouterToServer_Flags)
	*p = x
	return p
}

func (x CMsgSteamDatagramConnectionStatsRouterToServer_Flags) String() string {
	return proto.EnumName(CMsgSteamDatagramConnectionStatsRouterToServer_Flags_name, int32(x))
}

func (x *CMsgSteamDatagramConnectionStatsRouterToServer_Flags) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgSteamDatagramConnectionStatsRouterToServer_Flags_value, data, "CMsgSteamDatagramConnectionStatsRouterToServer_Flags")
	if err != nil {
		return err
	}
	*x = CMsgSteamDatagramConnectionStatsRouterToServer_Flags(value)
	return nil
}

func (CMsgSteamDatagramConnectionStatsRouterToServer_Flags) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{19, 0}
}

type CMsgSteamDatagramConnectionStatsServerToRouter_Flags int32

const (
	CMsgSteamDatagramConnectionStatsServerToRouter_ACK_REQUEST_RELAY     CMsgSteamDatagramConnectionStatsServerToRouter_Flags = 1
	CMsgSteamDatagramConnectionStatsServerToRouter_ACK_REQUEST_E2E       CMsgSteamDatagramConnectionStatsServerToRouter_Flags = 2
	CMsgSteamDatagramConnectionStatsServerToRouter_ACK_REQUEST_IMMEDIATE CMsgSteamDatagramConnectionStatsServerToRouter_Flags = 4
)

var CMsgSteamDatagramConnectionStatsServerToRouter_Flags_name = map[int32]string{
	1: "ACK_REQUEST_RELAY",
	2: "ACK_REQUEST_E2E",
	4: "ACK_REQUEST_IMMEDIATE",
}

var CMsgSteamDatagramConnectionStatsServerToRouter_Flags_value = map[string]int32{
	"ACK_REQUEST_RELAY":     1,
	"ACK_REQUEST_E2E":       2,
	"ACK_REQUEST_IMMEDIATE": 4,
}

func (x CMsgSteamDatagramConnectionStatsServerToRouter_Flags) Enum() *CMsgSteamDatagramConnectionStatsServerToRouter_Flags {
	p := new(CMsgSteamDatagramConnectionStatsServerToRouter_Flags)
	*p = x
	return p
}

func (x CMsgSteamDatagramConnectionStatsServerToRouter_Flags) String() string {
	return proto.EnumName(CMsgSteamDatagramConnectionStatsServerToRouter_Flags_name, int32(x))
}

func (x *CMsgSteamDatagramConnectionStatsServerToRouter_Flags) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgSteamDatagramConnectionStatsServerToRouter_Flags_value, data, "CMsgSteamDatagramConnectionStatsServerToRouter_Flags")
	if err != nil {
		return err
	}
	*x = CMsgSteamDatagramConnectionStatsServerToRouter_Flags(value)
	return nil
}

func (CMsgSteamDatagramConnectionStatsServerToRouter_Flags) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{20, 0}
}

type CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags int32

const (
	CMsgSteamDatagramConnectionStatsP2PClientToRouter_ACK_REQUEST_RELAY         CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags = 1
	CMsgSteamDatagramConnectionStatsP2PClientToRouter_ACK_REQUEST_E2E           CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags = 2
	CMsgSteamDatagramConnectionStatsP2PClientToRouter_ACK_REQUEST_IMMEDIATE     CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags = 4
	CMsgSteamDatagramConnectionStatsP2PClientToRouter_NOT_PRIMARY_SESSION       CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags = 8
	CMsgSteamDatagramConnectionStatsP2PClientToRouter_NOT_PRIMARY_TRANSPORT_E2E CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags = 16
)

var CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_name = map[int32]string{
	1:  "ACK_REQUEST_RELAY",
	2:  "ACK_REQUEST_E2E",
	4:  "ACK_REQUEST_IMMEDIATE",
	8:  "NOT_PRIMARY_SESSION",
	16: "NOT_PRIMARY_TRANSPORT_E2E",
}

var CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_value = map[string]int32{
	"ACK_REQUEST_RELAY":         1,
	"ACK_REQUEST_E2E":           2,
	"ACK_REQUEST_IMMEDIATE":     4,
	"NOT_PRIMARY_SESSION":       8,
	"NOT_PRIMARY_TRANSPORT_E2E": 16,
}

func (x CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags) Enum() *CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags {
	p := new(CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags)
	*p = x
	return p
}

func (x CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags) String() string {
	return proto.EnumName(CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_name, int32(x))
}

func (x *CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_value, data, "CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags")
	if err != nil {
		return err
	}
	*x = CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags(value)
	return nil
}

func (CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{24, 0}
}

type CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags int32

const (
	CMsgSteamDatagramConnectionStatsP2PRouterToClient_ACK_REQUEST_RELAY         CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags = 1
	CMsgSteamDatagramConnectionStatsP2PRouterToClient_ACK_REQUEST_E2E           CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags = 2
	CMsgSteamDatagramConnectionStatsP2PRouterToClient_ACK_REQUEST_IMMEDIATE     CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags = 4
	CMsgSteamDatagramConnectionStatsP2PRouterToClient_NOT_PRIMARY_TRANSPORT_E2E CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags = 16
)

var CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_name = map[int32]string{
	1:  "ACK_REQUEST_RELAY",
	2:  "ACK_REQUEST_E2E",
	4:  "ACK_REQUEST_IMMEDIATE",
	16: "NOT_PRIMARY_TRANSPORT_E2E",
}

var CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_value = map[string]int32{
	"ACK_REQUEST_RELAY":         1,
	"ACK_REQUEST_E2E":           2,
	"ACK_REQUEST_IMMEDIATE":     4,
	"NOT_PRIMARY_TRANSPORT_E2E": 16,
}

func (x CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags) Enum() *CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags {
	p := new(CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags)
	*p = x
	return p
}

func (x CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags) String() string {
	return proto.EnumName(CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_name, int32(x))
}

func (x *CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_value, data, "CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags")
	if err != nil {
		return err
	}
	*x = CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags(value)
	return nil
}

func (CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{25, 0}
}

type CMsgSteamDatagramRouterPingReply struct {
	ClientTimestamp            *uint32                                            `protobuf:"fixed32,1,opt,name=client_timestamp,json=clientTimestamp" json:"client_timestamp,omitempty"`
	LatencyDatacenterIds       []uint32                                           `protobuf:"fixed32,2,rep,packed,name=latency_datacenter_ids,json=latencyDatacenterIds" json:"latency_datacenter_ids,omitempty"`
	LatencyPingMs              []uint32                                           `protobuf:"varint,3,rep,packed,name=latency_ping_ms,json=latencyPingMs" json:"latency_ping_ms,omitempty"`
	YourPublicIp               *uint32                                            `protobuf:"fixed32,4,opt,name=your_public_ip,json=yourPublicIp" json:"your_public_ip,omitempty"`
	YourPublicPort             *uint32                                            `protobuf:"fixed32,11,opt,name=your_public_port,json=yourPublicPort" json:"your_public_port,omitempty"`
	ServerTime                 *uint32                                            `protobuf:"fixed32,5,opt,name=server_time,json=serverTime" json:"server_time,omitempty"`
	Challenge                  *uint64                                            `protobuf:"fixed64,6,opt,name=challenge" json:"challenge,omitempty"`
	SecondsUntilShutdown       *uint32                                            `protobuf:"varint,7,opt,name=seconds_until_shutdown,json=secondsUntilShutdown" json:"seconds_until_shutdown,omitempty"`
	ClientCookie               *uint32                                            `protobuf:"fixed32,8,opt,name=client_cookie,json=clientCookie" json:"client_cookie,omitempty"`
	ScoringPenaltyRelayCluster *uint32                                            `protobuf:"varint,9,opt,name=scoring_penalty_relay_cluster,json=scoringPenaltyRelayCluster" json:"scoring_penalty_relay_cluster,omitempty"`
	Flags                      *uint32                                            `protobuf:"varint,12,opt,name=flags" json:"flags,omitempty"`
	RouteExceptions            []*CMsgSteamDatagramRouterPingReply_RouteException `protobuf:"bytes,10,rep,name=route_exceptions,json=routeExceptions" json:"route_exceptions,omitempty"`
	AltAddresses               []*CMsgSteamDatagramRouterPingReply_AltAddress     `protobuf:"bytes,13,rep,name=alt_addresses,json=altAddresses" json:"alt_addresses,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                                           `json:"-"`
	XXX_unrecognized           []byte                                             `json:"-"`
	XXX_sizecache              int32                                              `json:"-"`
}

func (m *CMsgSteamDatagramRouterPingReply) Reset()         { *m = CMsgSteamDatagramRouterPingReply{} }
func (m *CMsgSteamDatagramRouterPingReply) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramRouterPingReply) ProtoMessage()    {}
func (*CMsgSteamDatagramRouterPingReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{0}
}

func (m *CMsgSteamDatagramRouterPingReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramRouterPingReply.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramRouterPingReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramRouterPingReply.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramRouterPingReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramRouterPingReply.Merge(m, src)
}
func (m *CMsgSteamDatagramRouterPingReply) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramRouterPingReply.Size(m)
}
func (m *CMsgSteamDatagramRouterPingReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramRouterPingReply.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramRouterPingReply proto.InternalMessageInfo

func (m *CMsgSteamDatagramRouterPingReply) GetClientTimestamp() uint32 {
	if m != nil && m.ClientTimestamp != nil {
		return *m.ClientTimestamp
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply) GetLatencyDatacenterIds() []uint32 {
	if m != nil {
		return m.LatencyDatacenterIds
	}
	return nil
}

func (m *CMsgSteamDatagramRouterPingReply) GetLatencyPingMs() []uint32 {
	if m != nil {
		return m.LatencyPingMs
	}
	return nil
}

func (m *CMsgSteamDatagramRouterPingReply) GetYourPublicIp() uint32 {
	if m != nil && m.YourPublicIp != nil {
		return *m.YourPublicIp
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply) GetYourPublicPort() uint32 {
	if m != nil && m.YourPublicPort != nil {
		return *m.YourPublicPort
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply) GetServerTime() uint32 {
	if m != nil && m.ServerTime != nil {
		return *m.ServerTime
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply) GetChallenge() uint64 {
	if m != nil && m.Challenge != nil {
		return *m.Challenge
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply) GetSecondsUntilShutdown() uint32 {
	if m != nil && m.SecondsUntilShutdown != nil {
		return *m.SecondsUntilShutdown
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply) GetClientCookie() uint32 {
	if m != nil && m.ClientCookie != nil {
		return *m.ClientCookie
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply) GetScoringPenaltyRelayCluster() uint32 {
	if m != nil && m.ScoringPenaltyRelayCluster != nil {
		return *m.ScoringPenaltyRelayCluster
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply) GetRouteExceptions() []*CMsgSteamDatagramRouterPingReply_RouteException {
	if m != nil {
		return m.RouteExceptions
	}
	return nil
}

func (m *CMsgSteamDatagramRouterPingReply) GetAltAddresses() []*CMsgSteamDatagramRouterPingReply_AltAddress {
	if m != nil {
		return m.AltAddresses
	}
	return nil
}

type CMsgSteamDatagramRouterPingReply_RouteException struct {
	DataCenterId         *uint32  `protobuf:"fixed32,1,opt,name=data_center_id,json=dataCenterId" json:"data_center_id,omitempty"`
	Flags                *uint32  `protobuf:"varint,2,opt,name=flags" json:"flags,omitempty"`
	Penalty              *uint32  `protobuf:"varint,3,opt,name=penalty" json:"penalty,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramRouterPingReply_RouteException) Reset() {
	*m = CMsgSteamDatagramRouterPingReply_RouteException{}
}
func (m *CMsgSteamDatagramRouterPingReply_RouteException) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramRouterPingReply_RouteException) ProtoMessage() {}
func (*CMsgSteamDatagramRouterPingReply_RouteException) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{0, 0}
}

func (m *CMsgSteamDatagramRouterPingReply_RouteException) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramRouterPingReply_RouteException.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramRouterPingReply_RouteException) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramRouterPingReply_RouteException.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramRouterPingReply_RouteException) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramRouterPingReply_RouteException.Merge(m, src)
}
func (m *CMsgSteamDatagramRouterPingReply_RouteException) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramRouterPingReply_RouteException.Size(m)
}
func (m *CMsgSteamDatagramRouterPingReply_RouteException) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramRouterPingReply_RouteException.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramRouterPingReply_RouteException proto.InternalMessageInfo

func (m *CMsgSteamDatagramRouterPingReply_RouteException) GetDataCenterId() uint32 {
	if m != nil && m.DataCenterId != nil {
		return *m.DataCenterId
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply_RouteException) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply_RouteException) GetPenalty() uint32 {
	if m != nil && m.Penalty != nil {
		return *m.Penalty
	}
	return 0
}

type CMsgSteamDatagramRouterPingReply_AltAddress struct {
	Ipv4                 *uint32                                               `protobuf:"fixed32,1,opt,name=ipv4" json:"ipv4,omitempty"`
	Port                 *uint32                                               `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	Penalty              *uint32                                               `protobuf:"varint,3,opt,name=penalty" json:"penalty,omitempty"`
	Protocol             *CMsgSteamDatagramRouterPingReply_AltAddress_Protocol `protobuf:"varint,4,opt,name=protocol,enum=dota.CMsgSteamDatagramRouterPingReply_AltAddress_Protocol,def=0" json:"protocol,omitempty"`
	Id                   *string                                               `protobuf:"bytes,5,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                              `json:"-"`
	XXX_unrecognized     []byte                                                `json:"-"`
	XXX_sizecache        int32                                                 `json:"-"`
}

func (m *CMsgSteamDatagramRouterPingReply_AltAddress) Reset() {
	*m = CMsgSteamDatagramRouterPingReply_AltAddress{}
}
func (m *CMsgSteamDatagramRouterPingReply_AltAddress) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramRouterPingReply_AltAddress) ProtoMessage() {}
func (*CMsgSteamDatagramRouterPingReply_AltAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{0, 1}
}

func (m *CMsgSteamDatagramRouterPingReply_AltAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramRouterPingReply_AltAddress.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramRouterPingReply_AltAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramRouterPingReply_AltAddress.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramRouterPingReply_AltAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramRouterPingReply_AltAddress.Merge(m, src)
}
func (m *CMsgSteamDatagramRouterPingReply_AltAddress) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramRouterPingReply_AltAddress.Size(m)
}
func (m *CMsgSteamDatagramRouterPingReply_AltAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramRouterPingReply_AltAddress.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramRouterPingReply_AltAddress proto.InternalMessageInfo

const Default_CMsgSteamDatagramRouterPingReply_AltAddress_Protocol CMsgSteamDatagramRouterPingReply_AltAddress_Protocol = CMsgSteamDatagramRouterPingReply_AltAddress_DefaultProtocol

func (m *CMsgSteamDatagramRouterPingReply_AltAddress) GetIpv4() uint32 {
	if m != nil && m.Ipv4 != nil {
		return *m.Ipv4
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply_AltAddress) GetPort() uint32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply_AltAddress) GetPenalty() uint32 {
	if m != nil && m.Penalty != nil {
		return *m.Penalty
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply_AltAddress) GetProtocol() CMsgSteamDatagramRouterPingReply_AltAddress_Protocol {
	if m != nil && m.Protocol != nil {
		return *m.Protocol
	}
	return Default_CMsgSteamDatagramRouterPingReply_AltAddress_Protocol
}

func (m *CMsgSteamDatagramRouterPingReply_AltAddress) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

type CMsgSteamDatagramGameserverPingRequest struct {
	YourPublicIp         *uint32  `protobuf:"fixed32,1,opt,name=your_public_ip,json=yourPublicIp" json:"your_public_ip,omitempty"`
	YourPublicPort       *uint32  `protobuf:"fixed32,5,opt,name=your_public_port,json=yourPublicPort" json:"your_public_port,omitempty"`
	ServerTime           *uint32  `protobuf:"fixed32,2,opt,name=server_time,json=serverTime" json:"server_time,omitempty"`
	Challenge            *uint64  `protobuf:"fixed64,3,opt,name=challenge" json:"challenge,omitempty"`
	RouterTimestamp      *uint32  `protobuf:"fixed32,4,opt,name=router_timestamp,json=routerTimestamp" json:"router_timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramGameserverPingRequest) Reset() {
	*m = CMsgSteamDatagramGameserverPingRequest{}
}
func (m *CMsgSteamDatagramGameserverPingRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramGameserverPingRequest) ProtoMessage()    {}
func (*CMsgSteamDatagramGameserverPingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{1}
}

func (m *CMsgSteamDatagramGameserverPingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramGameserverPingRequest.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramGameserverPingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramGameserverPingRequest.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramGameserverPingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramGameserverPingRequest.Merge(m, src)
}
func (m *CMsgSteamDatagramGameserverPingRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramGameserverPingRequest.Size(m)
}
func (m *CMsgSteamDatagramGameserverPingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramGameserverPingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramGameserverPingRequest proto.InternalMessageInfo

func (m *CMsgSteamDatagramGameserverPingRequest) GetYourPublicIp() uint32 {
	if m != nil && m.YourPublicIp != nil {
		return *m.YourPublicIp
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverPingRequest) GetYourPublicPort() uint32 {
	if m != nil && m.YourPublicPort != nil {
		return *m.YourPublicPort
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverPingRequest) GetServerTime() uint32 {
	if m != nil && m.ServerTime != nil {
		return *m.ServerTime
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverPingRequest) GetChallenge() uint64 {
	if m != nil && m.Challenge != nil {
		return *m.Challenge
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverPingRequest) GetRouterTimestamp() uint32 {
	if m != nil && m.RouterTimestamp != nil {
		return *m.RouterTimestamp
	}
	return 0
}

type CMsgSteamDatagramLegacyGameserverPingReply struct {
	RouterTimestamp      *uint32  `protobuf:"fixed32,4,opt,name=router_timestamp,json=routerTimestamp" json:"router_timestamp,omitempty"`
	DummyPad             *uint64  `protobuf:"fixed64,99,opt,name=dummy_pad,json=dummyPad" json:"dummy_pad,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramLegacyGameserverPingReply) Reset() {
	*m = CMsgSteamDatagramLegacyGameserverPingReply{}
}
func (m *CMsgSteamDatagramLegacyGameserverPingReply) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramLegacyGameserverPingReply) ProtoMessage() {}
func (*CMsgSteamDatagramLegacyGameserverPingReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{2}
}

func (m *CMsgSteamDatagramLegacyGameserverPingReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramLegacyGameserverPingReply.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramLegacyGameserverPingReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramLegacyGameserverPingReply.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramLegacyGameserverPingReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramLegacyGameserverPingReply.Merge(m, src)
}
func (m *CMsgSteamDatagramLegacyGameserverPingReply) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramLegacyGameserverPingReply.Size(m)
}
func (m *CMsgSteamDatagramLegacyGameserverPingReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramLegacyGameserverPingReply.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramLegacyGameserverPingReply proto.InternalMessageInfo

func (m *CMsgSteamDatagramLegacyGameserverPingReply) GetRouterTimestamp() uint32 {
	if m != nil && m.RouterTimestamp != nil {
		return *m.RouterTimestamp
	}
	return 0
}

func (m *CMsgSteamDatagramLegacyGameserverPingReply) GetDummyPad() uint64 {
	if m != nil && m.DummyPad != nil {
		return *m.DummyPad
	}
	return 0
}

type CMsgSteamDatagramGameserverPingReply struct {
	Cert                 *CMsgSteamDatagramCertificateSigned `protobuf:"bytes,1,opt,name=cert" json:"cert,omitempty"`
	SignedData           []byte                              `protobuf:"bytes,2,opt,name=signed_data,json=signedData" json:"signed_data,omitempty"`
	Signature            []byte                              `protobuf:"bytes,3,opt,name=signature" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *CMsgSteamDatagramGameserverPingReply) Reset()         { *m = CMsgSteamDatagramGameserverPingReply{} }
func (m *CMsgSteamDatagramGameserverPingReply) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramGameserverPingReply) ProtoMessage()    {}
func (*CMsgSteamDatagramGameserverPingReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{3}
}

func (m *CMsgSteamDatagramGameserverPingReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramGameserverPingReply.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramGameserverPingReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramGameserverPingReply.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramGameserverPingReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramGameserverPingReply.Merge(m, src)
}
func (m *CMsgSteamDatagramGameserverPingReply) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramGameserverPingReply.Size(m)
}
func (m *CMsgSteamDatagramGameserverPingReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramGameserverPingReply.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramGameserverPingReply proto.InternalMessageInfo

func (m *CMsgSteamDatagramGameserverPingReply) GetCert() *CMsgSteamDatagramCertificateSigned {
	if m != nil {
		return m.Cert
	}
	return nil
}

func (m *CMsgSteamDatagramGameserverPingReply) GetSignedData() []byte {
	if m != nil {
		return m.SignedData
	}
	return nil
}

func (m *CMsgSteamDatagramGameserverPingReply) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type CMsgSteamDatagramGameserverPingReply_SignedData struct {
	ChallengeTime        *uint32  `protobuf:"fixed32,2,opt,name=challenge_time,json=challengeTime" json:"challenge_time,omitempty"`
	Challenge            *uint64  `protobuf:"fixed64,3,opt,name=challenge" json:"challenge,omitempty"`
	RouterTimestamp      *uint32  `protobuf:"fixed32,4,opt,name=router_timestamp,json=routerTimestamp" json:"router_timestamp,omitempty"`
	DataCenterId         *uint32  `protobuf:"fixed32,5,opt,name=data_center_id,json=dataCenterId" json:"data_center_id,omitempty"`
	Appid                *uint32  `protobuf:"varint,6,opt,name=appid" json:"appid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramGameserverPingReply_SignedData) Reset() {
	*m = CMsgSteamDatagramGameserverPingReply_SignedData{}
}
func (m *CMsgSteamDatagramGameserverPingReply_SignedData) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramGameserverPingReply_SignedData) ProtoMessage() {}
func (*CMsgSteamDatagramGameserverPingReply_SignedData) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{3, 0}
}

func (m *CMsgSteamDatagramGameserverPingReply_SignedData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramGameserverPingReply_SignedData.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramGameserverPingReply_SignedData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramGameserverPingReply_SignedData.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramGameserverPingReply_SignedData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramGameserverPingReply_SignedData.Merge(m, src)
}
func (m *CMsgSteamDatagramGameserverPingReply_SignedData) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramGameserverPingReply_SignedData.Size(m)
}
func (m *CMsgSteamDatagramGameserverPingReply_SignedData) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramGameserverPingReply_SignedData.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramGameserverPingReply_SignedData proto.InternalMessageInfo

func (m *CMsgSteamDatagramGameserverPingReply_SignedData) GetChallengeTime() uint32 {
	if m != nil && m.ChallengeTime != nil {
		return *m.ChallengeTime
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverPingReply_SignedData) GetChallenge() uint64 {
	if m != nil && m.Challenge != nil {
		return *m.Challenge
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverPingReply_SignedData) GetRouterTimestamp() uint32 {
	if m != nil && m.RouterTimestamp != nil {
		return *m.RouterTimestamp
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverPingReply_SignedData) GetDataCenterId() uint32 {
	if m != nil && m.DataCenterId != nil {
		return *m.DataCenterId
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverPingReply_SignedData) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

type CMsgSteamDatagramNoSessionRelayToClient struct {
	ConnectionId         *uint32  `protobuf:"fixed32,7,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	YourPublicIp         *uint32  `protobuf:"fixed32,2,opt,name=your_public_ip,json=yourPublicIp" json:"your_public_ip,omitempty"`
	YourPublicPort       *uint32  `protobuf:"fixed32,6,opt,name=your_public_port,json=yourPublicPort" json:"your_public_port,omitempty"`
	ServerTime           *uint32  `protobuf:"fixed32,3,opt,name=server_time,json=serverTime" json:"server_time,omitempty"`
	Challenge            *uint64  `protobuf:"fixed64,4,opt,name=challenge" json:"challenge,omitempty"`
	SecondsUntilShutdown *uint32  `protobuf:"varint,5,opt,name=seconds_until_shutdown,json=secondsUntilShutdown" json:"seconds_until_shutdown,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramNoSessionRelayToClient) Reset() {
	*m = CMsgSteamDatagramNoSessionRelayToClient{}
}
func (m *CMsgSteamDatagramNoSessionRelayToClient) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramNoSessionRelayToClient) ProtoMessage()    {}
func (*CMsgSteamDatagramNoSessionRelayToClient) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{4}
}

func (m *CMsgSteamDatagramNoSessionRelayToClient) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramNoSessionRelayToClient.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramNoSessionRelayToClient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramNoSessionRelayToClient.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramNoSessionRelayToClient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramNoSessionRelayToClient.Merge(m, src)
}
func (m *CMsgSteamDatagramNoSessionRelayToClient) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramNoSessionRelayToClient.Size(m)
}
func (m *CMsgSteamDatagramNoSessionRelayToClient) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramNoSessionRelayToClient.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramNoSessionRelayToClient proto.InternalMessageInfo

func (m *CMsgSteamDatagramNoSessionRelayToClient) GetConnectionId() uint32 {
	if m != nil && m.ConnectionId != nil {
		return *m.ConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramNoSessionRelayToClient) GetYourPublicIp() uint32 {
	if m != nil && m.YourPublicIp != nil {
		return *m.YourPublicIp
	}
	return 0
}

func (m *CMsgSteamDatagramNoSessionRelayToClient) GetYourPublicPort() uint32 {
	if m != nil && m.YourPublicPort != nil {
		return *m.YourPublicPort
	}
	return 0
}

func (m *CMsgSteamDatagramNoSessionRelayToClient) GetServerTime() uint32 {
	if m != nil && m.ServerTime != nil {
		return *m.ServerTime
	}
	return 0
}

func (m *CMsgSteamDatagramNoSessionRelayToClient) GetChallenge() uint64 {
	if m != nil && m.Challenge != nil {
		return *m.Challenge
	}
	return 0
}

func (m *CMsgSteamDatagramNoSessionRelayToClient) GetSecondsUntilShutdown() uint32 {
	if m != nil && m.SecondsUntilShutdown != nil {
		return *m.SecondsUntilShutdown
	}
	return 0
}

type CMsgSteamDatagramNoSessionRelayToPeer struct {
	LegacyRelaySessionId *uint32  `protobuf:"varint,1,opt,name=legacy_relay_session_id,json=legacyRelaySessionId" json:"legacy_relay_session_id,omitempty"`
	FromRelaySessionId   *uint32  `protobuf:"fixed32,2,opt,name=from_relay_session_id,json=fromRelaySessionId" json:"from_relay_session_id,omitempty"`
	FromConnectionId     *uint32  `protobuf:"fixed32,7,opt,name=from_connection_id,json=fromConnectionId" json:"from_connection_id,omitempty"`
	KludgePad            *uint64  `protobuf:"fixed64,99,opt,name=kludge_pad,json=kludgePad" json:"kludge_pad,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramNoSessionRelayToPeer) Reset()         { *m = CMsgSteamDatagramNoSessionRelayToPeer{} }
func (m *CMsgSteamDatagramNoSessionRelayToPeer) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramNoSessionRelayToPeer) ProtoMessage()    {}
func (*CMsgSteamDatagramNoSessionRelayToPeer) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{5}
}

func (m *CMsgSteamDatagramNoSessionRelayToPeer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramNoSessionRelayToPeer.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramNoSessionRelayToPeer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramNoSessionRelayToPeer.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramNoSessionRelayToPeer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramNoSessionRelayToPeer.Merge(m, src)
}
func (m *CMsgSteamDatagramNoSessionRelayToPeer) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramNoSessionRelayToPeer.Size(m)
}
func (m *CMsgSteamDatagramNoSessionRelayToPeer) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramNoSessionRelayToPeer.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramNoSessionRelayToPeer proto.InternalMessageInfo

func (m *CMsgSteamDatagramNoSessionRelayToPeer) GetLegacyRelaySessionId() uint32 {
	if m != nil && m.LegacyRelaySessionId != nil {
		return *m.LegacyRelaySessionId
	}
	return 0
}

func (m *CMsgSteamDatagramNoSessionRelayToPeer) GetFromRelaySessionId() uint32 {
	if m != nil && m.FromRelaySessionId != nil {
		return *m.FromRelaySessionId
	}
	return 0
}

func (m *CMsgSteamDatagramNoSessionRelayToPeer) GetFromConnectionId() uint32 {
	if m != nil && m.FromConnectionId != nil {
		return *m.FromConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramNoSessionRelayToPeer) GetKludgePad() uint64 {
	if m != nil && m.KludgePad != nil {
		return *m.KludgePad
	}
	return 0
}

type CMsgSteamDatagramClientPingSampleRequest struct {
	ConnectionId         *uint32  `protobuf:"fixed32,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramClientPingSampleRequest) Reset() {
	*m = CMsgSteamDatagramClientPingSampleRequest{}
}
func (m *CMsgSteamDatagramClientPingSampleRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramClientPingSampleRequest) ProtoMessage()    {}
func (*CMsgSteamDatagramClientPingSampleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{6}
}

func (m *CMsgSteamDatagramClientPingSampleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramClientPingSampleRequest.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramClientPingSampleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramClientPingSampleRequest.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramClientPingSampleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramClientPingSampleRequest.Merge(m, src)
}
func (m *CMsgSteamDatagramClientPingSampleRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramClientPingSampleRequest.Size(m)
}
func (m *CMsgSteamDatagramClientPingSampleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramClientPingSampleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramClientPingSampleRequest proto.InternalMessageInfo

func (m *CMsgSteamDatagramClientPingSampleRequest) GetConnectionId() uint32 {
	if m != nil && m.ConnectionId != nil {
		return *m.ConnectionId
	}
	return 0
}

type CMsgSteamDatagramClientPingSampleReply struct {
	ConnectionId         *uint32                                                    `protobuf:"fixed32,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	OverrideActive       *bool                                                      `protobuf:"varint,4,opt,name=override_active,json=overrideActive" json:"override_active,omitempty"`
	Pops                 []*CMsgSteamDatagramClientPingSampleReply_POP              `protobuf:"bytes,2,rep,name=pops" json:"pops,omitempty"`
	LegacyDataCenters    []*CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter `protobuf:"bytes,3,rep,name=legacy_data_centers,json=legacyDataCenters" json:"legacy_data_centers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                   `json:"-"`
	XXX_unrecognized     []byte                                                     `json:"-"`
	XXX_sizecache        int32                                                      `json:"-"`
}

func (m *CMsgSteamDatagramClientPingSampleReply) Reset() {
	*m = CMsgSteamDatagramClientPingSampleReply{}
}
func (m *CMsgSteamDatagramClientPingSampleReply) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramClientPingSampleReply) ProtoMessage()    {}
func (*CMsgSteamDatagramClientPingSampleReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{7}
}

func (m *CMsgSteamDatagramClientPingSampleReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramClientPingSampleReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramClientPingSampleReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply.Merge(m, src)
}
func (m *CMsgSteamDatagramClientPingSampleReply) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply.Size(m)
}
func (m *CMsgSteamDatagramClientPingSampleReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply proto.InternalMessageInfo

func (m *CMsgSteamDatagramClientPingSampleReply) GetConnectionId() uint32 {
	if m != nil && m.ConnectionId != nil {
		return *m.ConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramClientPingSampleReply) GetOverrideActive() bool {
	if m != nil && m.OverrideActive != nil {
		return *m.OverrideActive
	}
	return false
}

func (m *CMsgSteamDatagramClientPingSampleReply) GetPops() []*CMsgSteamDatagramClientPingSampleReply_POP {
	if m != nil {
		return m.Pops
	}
	return nil
}

func (m *CMsgSteamDatagramClientPingSampleReply) GetLegacyDataCenters() []*CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter {
	if m != nil {
		return m.LegacyDataCenters
	}
	return nil
}

type CMsgSteamDatagramClientPingSampleReply_POP struct {
	PopId                  *uint32                                                  `protobuf:"fixed32,1,opt,name=pop_id,json=popId" json:"pop_id,omitempty"`
	DefaultFrontPingMs     *uint32                                                  `protobuf:"varint,2,opt,name=default_front_ping_ms,json=defaultFrontPingMs" json:"default_front_ping_ms,omitempty"`
	ClusterPenalty         *uint32                                                  `protobuf:"varint,4,opt,name=cluster_penalty,json=clusterPenalty" json:"cluster_penalty,omitempty"`
	AltAddresses           []*CMsgSteamDatagramClientPingSampleReply_POP_AltAddress `protobuf:"bytes,7,rep,name=alt_addresses,json=altAddresses" json:"alt_addresses,omitempty"`
	DefaultE2EPingMs       *uint32                                                  `protobuf:"varint,3,opt,name=default_e2e_ping_ms,json=defaultE2ePingMs" json:"default_e2e_ping_ms,omitempty"`
	DefaultE2EScore        *uint32                                                  `protobuf:"varint,5,opt,name=default_e2e_score,json=defaultE2eScore" json:"default_e2e_score,omitempty"`
	P2PViaPeerRelayPopId   *uint32                                                  `protobuf:"fixed32,6,opt,name=p2p_via_peer_relay_pop_id,json=p2pViaPeerRelayPopId" json:"p2p_via_peer_relay_pop_id,omitempty"`
	BestDcPingMs           *uint32                                                  `protobuf:"varint,9,opt,name=best_dc_ping_ms,json=bestDcPingMs" json:"best_dc_ping_ms,omitempty"`
	BestDcScore            *uint32                                                  `protobuf:"varint,10,opt,name=best_dc_score,json=bestDcScore" json:"best_dc_score,omitempty"`
	BestDcViaRelayPopId    *uint32                                                  `protobuf:"fixed32,11,opt,name=best_dc_via_relay_pop_id,json=bestDcViaRelayPopId" json:"best_dc_via_relay_pop_id,omitempty"`
	DefaultDcPingMs        *uint32                                                  `protobuf:"varint,12,opt,name=default_dc_ping_ms,json=defaultDcPingMs" json:"default_dc_ping_ms,omitempty"`
	DefaultDcScore         *uint32                                                  `protobuf:"varint,13,opt,name=default_dc_score,json=defaultDcScore" json:"default_dc_score,omitempty"`
	DefaultDcViaRelayPopId *uint32                                                  `protobuf:"fixed32,14,opt,name=default_dc_via_relay_pop_id,json=defaultDcViaRelayPopId" json:"default_dc_via_relay_pop_id,omitempty"`
	TestDcPingMs           *uint32                                                  `protobuf:"varint,15,opt,name=test_dc_ping_ms,json=testDcPingMs" json:"test_dc_ping_ms,omitempty"`
	TestDcScore            *uint32                                                  `protobuf:"varint,16,opt,name=test_dc_score,json=testDcScore" json:"test_dc_score,omitempty"`
	TestDcViaRelayPopId    *uint32                                                  `protobuf:"fixed32,17,opt,name=test_dc_via_relay_pop_id,json=testDcViaRelayPopId" json:"test_dc_via_relay_pop_id,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                                                 `json:"-"`
	XXX_unrecognized       []byte                                                   `json:"-"`
	XXX_sizecache          int32                                                    `json:"-"`
}

func (m *CMsgSteamDatagramClientPingSampleReply_POP) Reset() {
	*m = CMsgSteamDatagramClientPingSampleReply_POP{}
}
func (m *CMsgSteamDatagramClientPingSampleReply_POP) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramClientPingSampleReply_POP) ProtoMessage() {}
func (*CMsgSteamDatagramClientPingSampleReply_POP) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{7, 0}
}

func (m *CMsgSteamDatagramClientPingSampleReply_POP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply_POP.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramClientPingSampleReply_POP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply_POP.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramClientPingSampleReply_POP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply_POP.Merge(m, src)
}
func (m *CMsgSteamDatagramClientPingSampleReply_POP) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply_POP.Size(m)
}
func (m *CMsgSteamDatagramClientPingSampleReply_POP) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply_POP.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply_POP proto.InternalMessageInfo

func (m *CMsgSteamDatagramClientPingSampleReply_POP) GetPopId() uint32 {
	if m != nil && m.PopId != nil {
		return *m.PopId
	}
	return 0
}

func (m *CMsgSteamDatagramClientPingSampleReply_POP) GetDefaultFrontPingMs() uint32 {
	if m != nil && m.DefaultFrontPingMs != nil {
		return *m.DefaultFrontPingMs
	}
	return 0
}

func (m *CMsgSteamDatagramClientPingSampleReply_POP) GetClusterPenalty() uint32 {
	if m != nil && m.ClusterPenalty != nil {
		return *m.ClusterPenalty
	}
	return 0
}

func (m *CMsgSteamDatagramClientPingSampleReply_POP) GetAltAddresses() []*CMsgSteamDatagramClientPingSampleReply_POP_AltAddress {
	if m != nil {
		return m.AltAddresses
	}
	return nil
}

func (m *CMsgSteamDatagramClientPingSampleReply_POP) GetDefaultE2EPingMs() uint32 {
	if m != nil && m.DefaultE2EPingMs != nil {
		return *m.DefaultE2EPingMs
	}
	return 0
}

func (m *CMsgSteamDatagramClientPingSampleReply_POP) GetDefaultE2EScore() uint32 {
	if m != nil && m.DefaultE2EScore != nil {
		return *m.DefaultE2EScore
	}
	return 0
}

func (m *CMsgSteamDatagramClientPingSampleReply_POP) GetP2PViaPeerRelayPopId() uint32 {
	if m != nil && m.P2PViaPeerRelayPopId != nil {
		return *m.P2PViaPeerRelayPopId
	}
	return 0
}

func (m *CMsgSteamDatagramClientPingSampleReply_POP) GetBestDcPingMs() uint32 {
	if m != nil && m.BestDcPingMs != nil {
		return *m.BestDcPingMs
	}
	return 0
}

func (m *CMsgSteamDatagramClientPingSampleReply_POP) GetBestDcScore() uint32 {
	if m != nil && m.BestDcScore != nil {
		return *m.BestDcScore
	}
	return 0
}

func (m *CMsgSteamDatagramClientPingSampleReply_POP) GetBestDcViaRelayPopId() uint32 {
	if m != nil && m.BestDcViaRelayPopId != nil {
		return *m.BestDcViaRelayPopId
	}
	return 0
}

func (m *CMsgSteamDatagramClientPingSampleReply_POP) GetDefaultDcPingMs() uint32 {
	if m != nil && m.DefaultDcPingMs != nil {
		return *m.DefaultDcPingMs
	}
	return 0
}

func (m *CMsgSteamDatagramClientPingSampleReply_POP) GetDefaultDcScore() uint32 {
	if m != nil && m.DefaultDcScore != nil {
		return *m.DefaultDcScore
	}
	return 0
}

func (m *CMsgSteamDatagramClientPingSampleReply_POP) GetDefaultDcViaRelayPopId() uint32 {
	if m != nil && m.DefaultDcViaRelayPopId != nil {
		return *m.DefaultDcViaRelayPopId
	}
	return 0
}

func (m *CMsgSteamDatagramClientPingSampleReply_POP) GetTestDcPingMs() uint32 {
	if m != nil && m.TestDcPingMs != nil {
		return *m.TestDcPingMs
	}
	return 0
}

func (m *CMsgSteamDatagramClientPingSampleReply_POP) GetTestDcScore() uint32 {
	if m != nil && m.TestDcScore != nil {
		return *m.TestDcScore
	}
	return 0
}

func (m *CMsgSteamDatagramClientPingSampleReply_POP) GetTestDcViaRelayPopId() uint32 {
	if m != nil && m.TestDcViaRelayPopId != nil {
		return *m.TestDcViaRelayPopId
	}
	return 0
}

type CMsgSteamDatagramClientPingSampleReply_POP_AltAddress struct {
	Id                   *string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	FrontPingMs          *uint32  `protobuf:"varint,2,opt,name=front_ping_ms,json=frontPingMs" json:"front_ping_ms,omitempty"`
	Penalty              *uint32  `protobuf:"varint,3,opt,name=penalty" json:"penalty,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramClientPingSampleReply_POP_AltAddress) Reset() {
	*m = CMsgSteamDatagramClientPingSampleReply_POP_AltAddress{}
}
func (m *CMsgSteamDatagramClientPingSampleReply_POP_AltAddress) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramClientPingSampleReply_POP_AltAddress) ProtoMessage() {}
func (*CMsgSteamDatagramClientPingSampleReply_POP_AltAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{7, 0, 0}
}

func (m *CMsgSteamDatagramClientPingSampleReply_POP_AltAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply_POP_AltAddress.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramClientPingSampleReply_POP_AltAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply_POP_AltAddress.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramClientPingSampleReply_POP_AltAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply_POP_AltAddress.Merge(m, src)
}
func (m *CMsgSteamDatagramClientPingSampleReply_POP_AltAddress) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply_POP_AltAddress.Size(m)
}
func (m *CMsgSteamDatagramClientPingSampleReply_POP_AltAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply_POP_AltAddress.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply_POP_AltAddress proto.InternalMessageInfo

func (m *CMsgSteamDatagramClientPingSampleReply_POP_AltAddress) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *CMsgSteamDatagramClientPingSampleReply_POP_AltAddress) GetFrontPingMs() uint32 {
	if m != nil && m.FrontPingMs != nil {
		return *m.FrontPingMs
	}
	return 0
}

func (m *CMsgSteamDatagramClientPingSampleReply_POP_AltAddress) GetPenalty() uint32 {
	if m != nil && m.Penalty != nil {
		return *m.Penalty
	}
	return 0
}

type CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter struct {
	DataCenterId         *uint32  `protobuf:"fixed32,1,opt,name=data_center_id,json=dataCenterId" json:"data_center_id,omitempty"`
	BestDcViaRelayPopId  *uint32  `protobuf:"fixed32,2,opt,name=best_dc_via_relay_pop_id,json=bestDcViaRelayPopId" json:"best_dc_via_relay_pop_id,omitempty"`
	BestDcPingMs         *uint32  `protobuf:"varint,3,opt,name=best_dc_ping_ms,json=bestDcPingMs" json:"best_dc_ping_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter) Reset() {
	*m = CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter{}
}
func (m *CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter) ProtoMessage() {}
func (*CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{7, 1}
}

func (m *CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter.Merge(m, src)
}
func (m *CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter.Size(m)
}
func (m *CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter proto.InternalMessageInfo

func (m *CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter) GetDataCenterId() uint32 {
	if m != nil && m.DataCenterId != nil {
		return *m.DataCenterId
	}
	return 0
}

func (m *CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter) GetBestDcViaRelayPopId() uint32 {
	if m != nil && m.BestDcViaRelayPopId != nil {
		return *m.BestDcViaRelayPopId
	}
	return 0
}

func (m *CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter) GetBestDcPingMs() uint32 {
	if m != nil && m.BestDcPingMs != nil {
		return *m.BestDcPingMs
	}
	return 0
}

type CMsgSteamDatagramClientSwitchedPrimary struct {
	ConnectionId          *uint32                                               `protobuf:"fixed32,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	FromIp                *uint32                                               `protobuf:"fixed32,2,opt,name=from_ip,json=fromIp" json:"from_ip,omitempty"`
	FromPort              *uint32                                               `protobuf:"varint,3,opt,name=from_port,json=fromPort" json:"from_port,omitempty"`
	FromRouterCluster     *uint32                                               `protobuf:"fixed32,4,opt,name=from_router_cluster,json=fromRouterCluster" json:"from_router_cluster,omitempty"`
	FromActiveTime        *uint32                                               `protobuf:"varint,5,opt,name=from_active_time,json=fromActiveTime" json:"from_active_time,omitempty"`
	FromActivePacketsRecv *uint32                                               `protobuf:"varint,6,opt,name=from_active_packets_recv,json=fromActivePacketsRecv" json:"from_active_packets_recv,omitempty"`
	FromDroppedReason     *string                                               `protobuf:"bytes,7,opt,name=from_dropped_reason,json=fromDroppedReason" json:"from_dropped_reason,omitempty"`
	GapMs                 *uint32                                               `protobuf:"varint,8,opt,name=gap_ms,json=gapMs" json:"gap_ms,omitempty"`
	FromQualityNow        *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality `protobuf:"bytes,9,opt,name=from_quality_now,json=fromQualityNow" json:"from_quality_now,omitempty"`
	ToQualityNow          *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality `protobuf:"bytes,10,opt,name=to_quality_now,json=toQualityNow" json:"to_quality_now,omitempty"`
	FromQualityThen       *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality `protobuf:"bytes,11,opt,name=from_quality_then,json=fromQualityThen" json:"from_quality_then,omitempty"`
	ToQualityThen         *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality `protobuf:"bytes,12,opt,name=to_quality_then,json=toQualityThen" json:"to_quality_then,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                                              `json:"-"`
	XXX_unrecognized      []byte                                                `json:"-"`
	XXX_sizecache         int32                                                 `json:"-"`
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) Reset() {
	*m = CMsgSteamDatagramClientSwitchedPrimary{}
}
func (m *CMsgSteamDatagramClientSwitchedPrimary) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramClientSwitchedPrimary) ProtoMessage()    {}
func (*CMsgSteamDatagramClientSwitchedPrimary) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{8}
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramClientSwitchedPrimary.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramClientSwitchedPrimary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramClientSwitchedPrimary.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramClientSwitchedPrimary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramClientSwitchedPrimary.Merge(m, src)
}
func (m *CMsgSteamDatagramClientSwitchedPrimary) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramClientSwitchedPrimary.Size(m)
}
func (m *CMsgSteamDatagramClientSwitchedPrimary) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramClientSwitchedPrimary.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramClientSwitchedPrimary proto.InternalMessageInfo

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetConnectionId() uint32 {
	if m != nil && m.ConnectionId != nil {
		return *m.ConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromIp() uint32 {
	if m != nil && m.FromIp != nil {
		return *m.FromIp
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromPort() uint32 {
	if m != nil && m.FromPort != nil {
		return *m.FromPort
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromRouterCluster() uint32 {
	if m != nil && m.FromRouterCluster != nil {
		return *m.FromRouterCluster
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromActiveTime() uint32 {
	if m != nil && m.FromActiveTime != nil {
		return *m.FromActiveTime
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromActivePacketsRecv() uint32 {
	if m != nil && m.FromActivePacketsRecv != nil {
		return *m.FromActivePacketsRecv
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromDroppedReason() string {
	if m != nil && m.FromDroppedReason != nil {
		return *m.FromDroppedReason
	}
	return ""
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetGapMs() uint32 {
	if m != nil && m.GapMs != nil {
		return *m.GapMs
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromQualityNow() *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality {
	if m != nil {
		return m.FromQualityNow
	}
	return nil
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetToQualityNow() *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality {
	if m != nil {
		return m.ToQualityNow
	}
	return nil
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromQualityThen() *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality {
	if m != nil {
		return m.FromQualityThen
	}
	return nil
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetToQualityThen() *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality {
	if m != nil {
		return m.ToQualityThen
	}
	return nil
}

type CMsgSteamDatagramClientSwitchedPrimary_RouterQuality struct {
	Score                *uint32  `protobuf:"varint,1,opt,name=score" json:"score,omitempty"`
	FrontPing            *uint32  `protobuf:"varint,2,opt,name=front_ping,json=frontPing" json:"front_ping,omitempty"`
	BackPing             *uint32  `protobuf:"varint,3,opt,name=back_ping,json=backPing" json:"back_ping,omitempty"`
	SecondsUntilDown     *uint32  `protobuf:"varint,4,opt,name=seconds_until_down,json=secondsUntilDown" json:"seconds_until_down,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) Reset() {
	*m = CMsgSteamDatagramClientSwitchedPrimary_RouterQuality{}
}
func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) ProtoMessage() {}
func (*CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{8, 0}
}

func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramClientSwitchedPrimary_RouterQuality.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramClientSwitchedPrimary_RouterQuality.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramClientSwitchedPrimary_RouterQuality.Merge(m, src)
}
func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramClientSwitchedPrimary_RouterQuality.Size(m)
}
func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramClientSwitchedPrimary_RouterQuality.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramClientSwitchedPrimary_RouterQuality proto.InternalMessageInfo

func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) GetScore() uint32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) GetFrontPing() uint32 {
	if m != nil && m.FrontPing != nil {
		return *m.FrontPing
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) GetBackPing() uint32 {
	if m != nil && m.BackPing != nil {
		return *m.BackPing
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) GetSecondsUntilDown() uint32 {
	if m != nil && m.SecondsUntilDown != nil {
		return *m.SecondsUntilDown
	}
	return 0
}

type CMsgSteamDatagramConnectRequest struct {
	ConnectionId             *uint32                                  `protobuf:"fixed32,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	MyTimestamp              *uint64                                  `protobuf:"fixed64,4,opt,name=my_timestamp,json=myTimestamp" json:"my_timestamp,omitempty"`
	PingEstMs                *uint32                                  `protobuf:"varint,5,opt,name=ping_est_ms,json=pingEstMs" json:"ping_est_ms,omitempty"`
	VirtualPort              *uint32                                  `protobuf:"varint,9,opt,name=virtual_port,json=virtualPort" json:"virtual_port,omitempty"`
	GameserverRelaySessionId *uint32                                  `protobuf:"varint,2,opt,name=gameserver_relay_session_id,json=gameserverRelaySessionId" json:"gameserver_relay_session_id,omitempty"`
	Crypt                    *CMsgSteamDatagramSessionCryptInfoSigned `protobuf:"bytes,6,opt,name=crypt" json:"crypt,omitempty"`
	Cert                     *CMsgSteamDatagramCertificateSigned      `protobuf:"bytes,7,opt,name=cert" json:"cert,omitempty"`
	RoutingSecret            *uint64                                  `protobuf:"fixed64,10,opt,name=routing_secret,json=routingSecret" json:"routing_secret,omitempty"`
	LegacyClientSteamId      *uint64                                  `protobuf:"fixed64,3,opt,name=legacy_client_steam_id,json=legacyClientSteamId" json:"legacy_client_steam_id,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                                 `json:"-"`
	XXX_unrecognized         []byte                                   `json:"-"`
	XXX_sizecache            int32                                    `json:"-"`
}

func (m *CMsgSteamDatagramConnectRequest) Reset()         { *m = CMsgSteamDatagramConnectRequest{} }
func (m *CMsgSteamDatagramConnectRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramConnectRequest) ProtoMessage()    {}
func (*CMsgSteamDatagramConnectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{9}
}

func (m *CMsgSteamDatagramConnectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramConnectRequest.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramConnectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramConnectRequest.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramConnectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramConnectRequest.Merge(m, src)
}
func (m *CMsgSteamDatagramConnectRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramConnectRequest.Size(m)
}
func (m *CMsgSteamDatagramConnectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramConnectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramConnectRequest proto.InternalMessageInfo

func (m *CMsgSteamDatagramConnectRequest) GetConnectionId() uint32 {
	if m != nil && m.ConnectionId != nil {
		return *m.ConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectRequest) GetMyTimestamp() uint64 {
	if m != nil && m.MyTimestamp != nil {
		return *m.MyTimestamp
	}
	return 0
}

func (m *CMsgSteamDatagramConnectRequest) GetPingEstMs() uint32 {
	if m != nil && m.PingEstMs != nil {
		return *m.PingEstMs
	}
	return 0
}

func (m *CMsgSteamDatagramConnectRequest) GetVirtualPort() uint32 {
	if m != nil && m.VirtualPort != nil {
		return *m.VirtualPort
	}
	return 0
}

func (m *CMsgSteamDatagramConnectRequest) GetGameserverRelaySessionId() uint32 {
	if m != nil && m.GameserverRelaySessionId != nil {
		return *m.GameserverRelaySessionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectRequest) GetCrypt() *CMsgSteamDatagramSessionCryptInfoSigned {
	if m != nil {
		return m.Crypt
	}
	return nil
}

func (m *CMsgSteamDatagramConnectRequest) GetCert() *CMsgSteamDatagramCertificateSigned {
	if m != nil {
		return m.Cert
	}
	return nil
}

func (m *CMsgSteamDatagramConnectRequest) GetRoutingSecret() uint64 {
	if m != nil && m.RoutingSecret != nil {
		return *m.RoutingSecret
	}
	return 0
}

func (m *CMsgSteamDatagramConnectRequest) GetLegacyClientSteamId() uint64 {
	if m != nil && m.LegacyClientSteamId != nil {
		return *m.LegacyClientSteamId
	}
	return 0
}

type CMsgSteamDatagramConnectOK struct {
	ClientConnectionId       *uint32                                  `protobuf:"fixed32,1,opt,name=client_connection_id,json=clientConnectionId" json:"client_connection_id,omitempty"`
	ServerConnectionId       *uint32                                  `protobuf:"fixed32,7,opt,name=server_connection_id,json=serverConnectionId" json:"server_connection_id,omitempty"`
	YourTimestamp            *uint64                                  `protobuf:"fixed64,3,opt,name=your_timestamp,json=yourTimestamp" json:"your_timestamp,omitempty"`
	DelayTimeUsec            *uint32                                  `protobuf:"varint,4,opt,name=delay_time_usec,json=delayTimeUsec" json:"delay_time_usec,omitempty"`
	GameserverRelaySessionId *uint32                                  `protobuf:"varint,2,opt,name=gameserver_relay_session_id,json=gameserverRelaySessionId" json:"gameserver_relay_session_id,omitempty"`
	Crypt                    *CMsgSteamDatagramSessionCryptInfoSigned `protobuf:"bytes,5,opt,name=crypt" json:"crypt,omitempty"`
	Cert                     *CMsgSteamDatagramCertificateSigned      `protobuf:"bytes,6,opt,name=cert" json:"cert,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                                 `json:"-"`
	XXX_unrecognized         []byte                                   `json:"-"`
	XXX_sizecache            int32                                    `json:"-"`
}

func (m *CMsgSteamDatagramConnectOK) Reset()         { *m = CMsgSteamDatagramConnectOK{} }
func (m *CMsgSteamDatagramConnectOK) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramConnectOK) ProtoMessage()    {}
func (*CMsgSteamDatagramConnectOK) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{10}
}

func (m *CMsgSteamDatagramConnectOK) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramConnectOK.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramConnectOK) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramConnectOK.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramConnectOK) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramConnectOK.Merge(m, src)
}
func (m *CMsgSteamDatagramConnectOK) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramConnectOK.Size(m)
}
func (m *CMsgSteamDatagramConnectOK) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramConnectOK.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramConnectOK proto.InternalMessageInfo

func (m *CMsgSteamDatagramConnectOK) GetClientConnectionId() uint32 {
	if m != nil && m.ClientConnectionId != nil {
		return *m.ClientConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectOK) GetServerConnectionId() uint32 {
	if m != nil && m.ServerConnectionId != nil {
		return *m.ServerConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectOK) GetYourTimestamp() uint64 {
	if m != nil && m.YourTimestamp != nil {
		return *m.YourTimestamp
	}
	return 0
}

func (m *CMsgSteamDatagramConnectOK) GetDelayTimeUsec() uint32 {
	if m != nil && m.DelayTimeUsec != nil {
		return *m.DelayTimeUsec
	}
	return 0
}

func (m *CMsgSteamDatagramConnectOK) GetGameserverRelaySessionId() uint32 {
	if m != nil && m.GameserverRelaySessionId != nil {
		return *m.GameserverRelaySessionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectOK) GetCrypt() *CMsgSteamDatagramSessionCryptInfoSigned {
	if m != nil {
		return m.Crypt
	}
	return nil
}

func (m *CMsgSteamDatagramConnectOK) GetCert() *CMsgSteamDatagramCertificateSigned {
	if m != nil {
		return m.Cert
	}
	return nil
}

type CMsgSteamNetworkingP2PSDRRoutingSummary struct {
	InitialPing            *uint32  `protobuf:"varint,1,opt,name=initial_ping,json=initialPing" json:"initial_ping,omitempty"`
	InitialPingFrontLocal  *uint32  `protobuf:"varint,2,opt,name=initial_ping_front_local,json=initialPingFrontLocal" json:"initial_ping_front_local,omitempty"`
	InitialPingFrontRemote *uint32  `protobuf:"varint,3,opt,name=initial_ping_front_remote,json=initialPingFrontRemote" json:"initial_ping_front_remote,omitempty"`
	InitialScore           *uint32  `protobuf:"varint,4,opt,name=initial_score,json=initialScore" json:"initial_score,omitempty"`
	InitialPopLocal        *uint32  `protobuf:"fixed32,5,opt,name=initial_pop_local,json=initialPopLocal" json:"initial_pop_local,omitempty"`
	InitialPopRemote       *uint32  `protobuf:"fixed32,6,opt,name=initial_pop_remote,json=initialPopRemote" json:"initial_pop_remote,omitempty"`
	BestPing               *uint32  `protobuf:"varint,11,opt,name=best_ping,json=bestPing" json:"best_ping,omitempty"`
	BestPingFrontLocal     *uint32  `protobuf:"varint,12,opt,name=best_ping_front_local,json=bestPingFrontLocal" json:"best_ping_front_local,omitempty"`
	BestPingFrontRemote    *uint32  `protobuf:"varint,13,opt,name=best_ping_front_remote,json=bestPingFrontRemote" json:"best_ping_front_remote,omitempty"`
	BestScore              *uint32  `protobuf:"varint,14,opt,name=best_score,json=bestScore" json:"best_score,omitempty"`
	BestPopLocal           *uint32  `protobuf:"fixed32,15,opt,name=best_pop_local,json=bestPopLocal" json:"best_pop_local,omitempty"`
	BestPopRemote          *uint32  `protobuf:"fixed32,16,opt,name=best_pop_remote,json=bestPopRemote" json:"best_pop_remote,omitempty"`
	BestTime               *uint32  `protobuf:"varint,17,opt,name=best_time,json=bestTime" json:"best_time,omitempty"`
	NegotiationMs          *uint32  `protobuf:"varint,7,opt,name=negotiation_ms,json=negotiationMs" json:"negotiation_ms,omitempty"`
	SelectedSeconds        *uint32  `protobuf:"varint,8,opt,name=selected_seconds,json=selectedSeconds" json:"selected_seconds,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *CMsgSteamNetworkingP2PSDRRoutingSummary) Reset() {
	*m = CMsgSteamNetworkingP2PSDRRoutingSummary{}
}
func (m *CMsgSteamNetworkingP2PSDRRoutingSummary) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamNetworkingP2PSDRRoutingSummary) ProtoMessage()    {}
func (*CMsgSteamNetworkingP2PSDRRoutingSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{11}
}

func (m *CMsgSteamNetworkingP2PSDRRoutingSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamNetworkingP2PSDRRoutingSummary.Unmarshal(m, b)
}
func (m *CMsgSteamNetworkingP2PSDRRoutingSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamNetworkingP2PSDRRoutingSummary.Marshal(b, m, deterministic)
}
func (m *CMsgSteamNetworkingP2PSDRRoutingSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamNetworkingP2PSDRRoutingSummary.Merge(m, src)
}
func (m *CMsgSteamNetworkingP2PSDRRoutingSummary) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamNetworkingP2PSDRRoutingSummary.Size(m)
}
func (m *CMsgSteamNetworkingP2PSDRRoutingSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamNetworkingP2PSDRRoutingSummary.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamNetworkingP2PSDRRoutingSummary proto.InternalMessageInfo

func (m *CMsgSteamNetworkingP2PSDRRoutingSummary) GetInitialPing() uint32 {
	if m != nil && m.InitialPing != nil {
		return *m.InitialPing
	}
	return 0
}

func (m *CMsgSteamNetworkingP2PSDRRoutingSummary) GetInitialPingFrontLocal() uint32 {
	if m != nil && m.InitialPingFrontLocal != nil {
		return *m.InitialPingFrontLocal
	}
	return 0
}

func (m *CMsgSteamNetworkingP2PSDRRoutingSummary) GetInitialPingFrontRemote() uint32 {
	if m != nil && m.InitialPingFrontRemote != nil {
		return *m.InitialPingFrontRemote
	}
	return 0
}

func (m *CMsgSteamNetworkingP2PSDRRoutingSummary) GetInitialScore() uint32 {
	if m != nil && m.InitialScore != nil {
		return *m.InitialScore
	}
	return 0
}

func (m *CMsgSteamNetworkingP2PSDRRoutingSummary) GetInitialPopLocal() uint32 {
	if m != nil && m.InitialPopLocal != nil {
		return *m.InitialPopLocal
	}
	return 0
}

func (m *CMsgSteamNetworkingP2PSDRRoutingSummary) GetInitialPopRemote() uint32 {
	if m != nil && m.InitialPopRemote != nil {
		return *m.InitialPopRemote
	}
	return 0
}

func (m *CMsgSteamNetworkingP2PSDRRoutingSummary) GetBestPing() uint32 {
	if m != nil && m.BestPing != nil {
		return *m.BestPing
	}
	return 0
}

func (m *CMsgSteamNetworkingP2PSDRRoutingSummary) GetBestPingFrontLocal() uint32 {
	if m != nil && m.BestPingFrontLocal != nil {
		return *m.BestPingFrontLocal
	}
	return 0
}

func (m *CMsgSteamNetworkingP2PSDRRoutingSummary) GetBestPingFrontRemote() uint32 {
	if m != nil && m.BestPingFrontRemote != nil {
		return *m.BestPingFrontRemote
	}
	return 0
}

func (m *CMsgSteamNetworkingP2PSDRRoutingSummary) GetBestScore() uint32 {
	if m != nil && m.BestScore != nil {
		return *m.BestScore
	}
	return 0
}

func (m *CMsgSteamNetworkingP2PSDRRoutingSummary) GetBestPopLocal() uint32 {
	if m != nil && m.BestPopLocal != nil {
		return *m.BestPopLocal
	}
	return 0
}

func (m *CMsgSteamNetworkingP2PSDRRoutingSummary) GetBestPopRemote() uint32 {
	if m != nil && m.BestPopRemote != nil {
		return *m.BestPopRemote
	}
	return 0
}

func (m *CMsgSteamNetworkingP2PSDRRoutingSummary) GetBestTime() uint32 {
	if m != nil && m.BestTime != nil {
		return *m.BestTime
	}
	return 0
}

func (m *CMsgSteamNetworkingP2PSDRRoutingSummary) GetNegotiationMs() uint32 {
	if m != nil && m.NegotiationMs != nil {
		return *m.NegotiationMs
	}
	return 0
}

func (m *CMsgSteamNetworkingP2PSDRRoutingSummary) GetSelectedSeconds() uint32 {
	if m != nil && m.SelectedSeconds != nil {
		return *m.SelectedSeconds
	}
	return 0
}

type CMsgSteamDatagramP2PRoutingSummary struct {
	Ice                  *CMsgSteamNetworkingICESessionSummary    `protobuf:"bytes,2,opt,name=ice" json:"ice,omitempty"`
	Sdr                  *CMsgSteamNetworkingP2PSDRRoutingSummary `protobuf:"bytes,3,opt,name=sdr" json:"sdr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *CMsgSteamDatagramP2PRoutingSummary) Reset()         { *m = CMsgSteamDatagramP2PRoutingSummary{} }
func (m *CMsgSteamDatagramP2PRoutingSummary) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramP2PRoutingSummary) ProtoMessage()    {}
func (*CMsgSteamDatagramP2PRoutingSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{12}
}

func (m *CMsgSteamDatagramP2PRoutingSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramP2PRoutingSummary.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramP2PRoutingSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramP2PRoutingSummary.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramP2PRoutingSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramP2PRoutingSummary.Merge(m, src)
}
func (m *CMsgSteamDatagramP2PRoutingSummary) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramP2PRoutingSummary.Size(m)
}
func (m *CMsgSteamDatagramP2PRoutingSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramP2PRoutingSummary.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramP2PRoutingSummary proto.InternalMessageInfo

func (m *CMsgSteamDatagramP2PRoutingSummary) GetIce() *CMsgSteamNetworkingICESessionSummary {
	if m != nil {
		return m.Ice
	}
	return nil
}

func (m *CMsgSteamDatagramP2PRoutingSummary) GetSdr() *CMsgSteamNetworkingP2PSDRRoutingSummary {
	if m != nil {
		return m.Sdr
	}
	return nil
}

type CMsgSteamDatagramConnectionClosed struct {
	ToConnectionId                 *uint32                                       `protobuf:"fixed32,7,opt,name=to_connection_id,json=toConnectionId" json:"to_connection_id,omitempty"`
	FromConnectionId               *uint32                                       `protobuf:"fixed32,8,opt,name=from_connection_id,json=fromConnectionId" json:"from_connection_id,omitempty"`
	FromIdentityString             *string                                       `protobuf:"bytes,15,opt,name=from_identity_string,json=fromIdentityString" json:"from_identity_string,omitempty"`
	LegacyFromIdentityBinary       *CMsgSteamNetworkingIdentityLegacyBinary      `protobuf:"bytes,13,opt,name=legacy_from_identity_binary,json=legacyFromIdentityBinary" json:"legacy_from_identity_binary,omitempty"`
	LegacyFromSteamId              *uint64                                       `protobuf:"fixed64,3,opt,name=legacy_from_steam_id,json=legacyFromSteamId" json:"legacy_from_steam_id,omitempty"`
	LegacyGameserverRelaySessionId *uint32                                       `protobuf:"varint,2,opt,name=legacy_gameserver_relay_session_id,json=legacyGameserverRelaySessionId" json:"legacy_gameserver_relay_session_id,omitempty"`
	ToRelaySessionId               *uint32                                       `protobuf:"fixed32,9,opt,name=to_relay_session_id,json=toRelaySessionId" json:"to_relay_session_id,omitempty"`
	FromRelaySessionId             *uint32                                       `protobuf:"fixed32,10,opt,name=from_relay_session_id,json=fromRelaySessionId" json:"from_relay_session_id,omitempty"`
	ForwardTargetRelayRoutingToken []byte                                        `protobuf:"bytes,11,opt,name=forward_target_relay_routing_token,json=forwardTargetRelayRoutingToken" json:"forward_target_relay_routing_token,omitempty"`
	ForwardTargetRevision          *uint32                                       `protobuf:"varint,12,opt,name=forward_target_revision,json=forwardTargetRevision" json:"forward_target_revision,omitempty"`
	RelayMode                      *CMsgSteamDatagramConnectionClosed_ERelayMode `protobuf:"varint,4,opt,name=relay_mode,json=relayMode,enum=dota.CMsgSteamDatagramConnectionClosed_ERelayMode,def=0" json:"relay_mode,omitempty"`
	Debug                          *string                                       `protobuf:"bytes,5,opt,name=debug" json:"debug,omitempty"`
	ReasonCode                     *uint32                                       `protobuf:"varint,6,opt,name=reason_code,json=reasonCode" json:"reason_code,omitempty"`
	RoutingSecret                  *uint64                                       `protobuf:"fixed64,14,opt,name=routing_secret,json=routingSecret" json:"routing_secret,omitempty"`
	NotPrimarySession              *bool                                         `protobuf:"varint,16,opt,name=not_primary_session,json=notPrimarySession" json:"not_primary_session,omitempty"`
	NotPrimaryTransport            *bool                                         `protobuf:"varint,19,opt,name=not_primary_transport,json=notPrimaryTransport" json:"not_primary_transport,omitempty"`
	QualityRelay                   *CMsgSteamDatagramConnectionQuality           `protobuf:"bytes,17,opt,name=quality_relay,json=qualityRelay" json:"quality_relay,omitempty"`
	QualityE2E                     *CMsgSteamDatagramConnectionQuality           `protobuf:"bytes,18,opt,name=quality_e2e,json=qualityE2e" json:"quality_e2e,omitempty"`
	P2PRoutingSummary              *CMsgSteamDatagramP2PRoutingSummary           `protobuf:"bytes,21,opt,name=p2p_routing_summary,json=p2pRoutingSummary" json:"p2p_routing_summary,omitempty"`
	XXX_NoUnkeyedLiteral           struct{}                                      `json:"-"`
	XXX_unrecognized               []byte                                        `json:"-"`
	XXX_sizecache                  int32                                         `json:"-"`
}

func (m *CMsgSteamDatagramConnectionClosed) Reset()         { *m = CMsgSteamDatagramConnectionClosed{} }
func (m *CMsgSteamDatagramConnectionClosed) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramConnectionClosed) ProtoMessage()    {}
func (*CMsgSteamDatagramConnectionClosed) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{13}
}

func (m *CMsgSteamDatagramConnectionClosed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramConnectionClosed.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramConnectionClosed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramConnectionClosed.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramConnectionClosed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramConnectionClosed.Merge(m, src)
}
func (m *CMsgSteamDatagramConnectionClosed) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramConnectionClosed.Size(m)
}
func (m *CMsgSteamDatagramConnectionClosed) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramConnectionClosed.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramConnectionClosed proto.InternalMessageInfo

const Default_CMsgSteamDatagramConnectionClosed_RelayMode CMsgSteamDatagramConnectionClosed_ERelayMode = CMsgSteamDatagramConnectionClosed_None

func (m *CMsgSteamDatagramConnectionClosed) GetToConnectionId() uint32 {
	if m != nil && m.ToConnectionId != nil {
		return *m.ToConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionClosed) GetFromConnectionId() uint32 {
	if m != nil && m.FromConnectionId != nil {
		return *m.FromConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionClosed) GetFromIdentityString() string {
	if m != nil && m.FromIdentityString != nil {
		return *m.FromIdentityString
	}
	return ""
}

func (m *CMsgSteamDatagramConnectionClosed) GetLegacyFromIdentityBinary() *CMsgSteamNetworkingIdentityLegacyBinary {
	if m != nil {
		return m.LegacyFromIdentityBinary
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionClosed) GetLegacyFromSteamId() uint64 {
	if m != nil && m.LegacyFromSteamId != nil {
		return *m.LegacyFromSteamId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionClosed) GetLegacyGameserverRelaySessionId() uint32 {
	if m != nil && m.LegacyGameserverRelaySessionId != nil {
		return *m.LegacyGameserverRelaySessionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionClosed) GetToRelaySessionId() uint32 {
	if m != nil && m.ToRelaySessionId != nil {
		return *m.ToRelaySessionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionClosed) GetFromRelaySessionId() uint32 {
	if m != nil && m.FromRelaySessionId != nil {
		return *m.FromRelaySessionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionClosed) GetForwardTargetRelayRoutingToken() []byte {
	if m != nil {
		return m.ForwardTargetRelayRoutingToken
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionClosed) GetForwardTargetRevision() uint32 {
	if m != nil && m.ForwardTargetRevision != nil {
		return *m.ForwardTargetRevision
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionClosed) GetRelayMode() CMsgSteamDatagramConnectionClosed_ERelayMode {
	if m != nil && m.RelayMode != nil {
		return *m.RelayMode
	}
	return Default_CMsgSteamDatagramConnectionClosed_RelayMode
}

func (m *CMsgSteamDatagramConnectionClosed) GetDebug() string {
	if m != nil && m.Debug != nil {
		return *m.Debug
	}
	return ""
}

func (m *CMsgSteamDatagramConnectionClosed) GetReasonCode() uint32 {
	if m != nil && m.ReasonCode != nil {
		return *m.ReasonCode
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionClosed) GetRoutingSecret() uint64 {
	if m != nil && m.RoutingSecret != nil {
		return *m.RoutingSecret
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionClosed) GetNotPrimarySession() bool {
	if m != nil && m.NotPrimarySession != nil {
		return *m.NotPrimarySession
	}
	return false
}

func (m *CMsgSteamDatagramConnectionClosed) GetNotPrimaryTransport() bool {
	if m != nil && m.NotPrimaryTransport != nil {
		return *m.NotPrimaryTransport
	}
	return false
}

func (m *CMsgSteamDatagramConnectionClosed) GetQualityRelay() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.QualityRelay
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionClosed) GetQualityE2E() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.QualityE2E
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionClosed) GetP2PRoutingSummary() *CMsgSteamDatagramP2PRoutingSummary {
	if m != nil {
		return m.P2PRoutingSummary
	}
	return nil
}

type CMsgSteamDatagramNoConnection struct {
	ToConnectionId                 *uint32                             `protobuf:"fixed32,5,opt,name=to_connection_id,json=toConnectionId" json:"to_connection_id,omitempty"`
	FromConnectionId               *uint32                             `protobuf:"fixed32,6,opt,name=from_connection_id,json=fromConnectionId" json:"from_connection_id,omitempty"`
	LegacyGameserverRelaySessionId *uint32                             `protobuf:"varint,2,opt,name=legacy_gameserver_relay_session_id,json=legacyGameserverRelaySessionId" json:"legacy_gameserver_relay_session_id,omitempty"`
	ToRelaySessionId               *uint32                             `protobuf:"fixed32,9,opt,name=to_relay_session_id,json=toRelaySessionId" json:"to_relay_session_id,omitempty"`
	FromRelaySessionId             *uint32                             `protobuf:"fixed32,10,opt,name=from_relay_session_id,json=fromRelaySessionId" json:"from_relay_session_id,omitempty"`
	FromIdentityString             *string                             `protobuf:"bytes,7,opt,name=from_identity_string,json=fromIdentityString" json:"from_identity_string,omitempty"`
	LegacyFromSteamId              *uint64                             `protobuf:"fixed64,3,opt,name=legacy_from_steam_id,json=legacyFromSteamId" json:"legacy_from_steam_id,omitempty"`
	EndToEnd                       *bool                               `protobuf:"varint,4,opt,name=end_to_end,json=endToEnd" json:"end_to_end,omitempty"`
	NotPrimarySession              *bool                               `protobuf:"varint,12,opt,name=not_primary_session,json=notPrimarySession" json:"not_primary_session,omitempty"`
	NotPrimaryTransport            *bool                               `protobuf:"varint,15,opt,name=not_primary_transport,json=notPrimaryTransport" json:"not_primary_transport,omitempty"`
	QualityRelay                   *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,13,opt,name=quality_relay,json=qualityRelay" json:"quality_relay,omitempty"`
	QualityE2E                     *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,14,opt,name=quality_e2e,json=qualityE2e" json:"quality_e2e,omitempty"`
	P2PRoutingSummary              *CMsgSteamDatagramP2PRoutingSummary `protobuf:"bytes,16,opt,name=p2p_routing_summary,json=p2pRoutingSummary" json:"p2p_routing_summary,omitempty"`
	RoutingSecret                  *uint64                             `protobuf:"fixed64,11,opt,name=routing_secret,json=routingSecret" json:"routing_secret,omitempty"`
	DummyPad                       *uint32                             `protobuf:"fixed32,1023,opt,name=dummy_pad,json=dummyPad" json:"dummy_pad,omitempty"`
	XXX_NoUnkeyedLiteral           struct{}                            `json:"-"`
	XXX_unrecognized               []byte                              `json:"-"`
	XXX_sizecache                  int32                               `json:"-"`
}

func (m *CMsgSteamDatagramNoConnection) Reset()         { *m = CMsgSteamDatagramNoConnection{} }
func (m *CMsgSteamDatagramNoConnection) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramNoConnection) ProtoMessage()    {}
func (*CMsgSteamDatagramNoConnection) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{14}
}

func (m *CMsgSteamDatagramNoConnection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramNoConnection.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramNoConnection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramNoConnection.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramNoConnection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramNoConnection.Merge(m, src)
}
func (m *CMsgSteamDatagramNoConnection) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramNoConnection.Size(m)
}
func (m *CMsgSteamDatagramNoConnection) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramNoConnection.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramNoConnection proto.InternalMessageInfo

func (m *CMsgSteamDatagramNoConnection) GetToConnectionId() uint32 {
	if m != nil && m.ToConnectionId != nil {
		return *m.ToConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramNoConnection) GetFromConnectionId() uint32 {
	if m != nil && m.FromConnectionId != nil {
		return *m.FromConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramNoConnection) GetLegacyGameserverRelaySessionId() uint32 {
	if m != nil && m.LegacyGameserverRelaySessionId != nil {
		return *m.LegacyGameserverRelaySessionId
	}
	return 0
}

func (m *CMsgSteamDatagramNoConnection) GetToRelaySessionId() uint32 {
	if m != nil && m.ToRelaySessionId != nil {
		return *m.ToRelaySessionId
	}
	return 0
}

func (m *CMsgSteamDatagramNoConnection) GetFromRelaySessionId() uint32 {
	if m != nil && m.FromRelaySessionId != nil {
		return *m.FromRelaySessionId
	}
	return 0
}

func (m *CMsgSteamDatagramNoConnection) GetFromIdentityString() string {
	if m != nil && m.FromIdentityString != nil {
		return *m.FromIdentityString
	}
	return ""
}

func (m *CMsgSteamDatagramNoConnection) GetLegacyFromSteamId() uint64 {
	if m != nil && m.LegacyFromSteamId != nil {
		return *m.LegacyFromSteamId
	}
	return 0
}

func (m *CMsgSteamDatagramNoConnection) GetEndToEnd() bool {
	if m != nil && m.EndToEnd != nil {
		return *m.EndToEnd
	}
	return false
}

func (m *CMsgSteamDatagramNoConnection) GetNotPrimarySession() bool {
	if m != nil && m.NotPrimarySession != nil {
		return *m.NotPrimarySession
	}
	return false
}

func (m *CMsgSteamDatagramNoConnection) GetNotPrimaryTransport() bool {
	if m != nil && m.NotPrimaryTransport != nil {
		return *m.NotPrimaryTransport
	}
	return false
}

func (m *CMsgSteamDatagramNoConnection) GetQualityRelay() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.QualityRelay
	}
	return nil
}

func (m *CMsgSteamDatagramNoConnection) GetQualityE2E() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.QualityE2E
	}
	return nil
}

func (m *CMsgSteamDatagramNoConnection) GetP2PRoutingSummary() *CMsgSteamDatagramP2PRoutingSummary {
	if m != nil {
		return m.P2PRoutingSummary
	}
	return nil
}

func (m *CMsgSteamDatagramNoConnection) GetRoutingSecret() uint64 {
	if m != nil && m.RoutingSecret != nil {
		return *m.RoutingSecret
	}
	return 0
}

func (m *CMsgSteamDatagramNoConnection) GetDummyPad() uint32 {
	if m != nil && m.DummyPad != nil {
		return *m.DummyPad
	}
	return 0
}

type CMsgSteamDatagramGameserverSessionRequest struct {
	Ticket               []byte   `protobuf:"bytes,1,opt,name=ticket" json:"ticket,omitempty"`
	ChallengeTime        *uint32  `protobuf:"fixed32,3,opt,name=challenge_time,json=challengeTime" json:"challenge_time,omitempty"`
	Challenge            *uint64  `protobuf:"fixed64,4,opt,name=challenge" json:"challenge,omitempty"`
	ClientConnectionId   *uint32  `protobuf:"fixed32,5,opt,name=client_connection_id,json=clientConnectionId" json:"client_connection_id,omitempty"`
	ServerConnectionId   *uint32  `protobuf:"fixed32,8,opt,name=server_connection_id,json=serverConnectionId" json:"server_connection_id,omitempty"`
	NetworkConfigVersion *uint32  `protobuf:"varint,6,opt,name=network_config_version,json=networkConfigVersion" json:"network_config_version,omitempty"`
	ProtocolVersion      *uint32  `protobuf:"varint,7,opt,name=protocol_version,json=protocolVersion" json:"protocol_version,omitempty"`
	Platform             *string  `protobuf:"bytes,9,opt,name=platform" json:"platform,omitempty"`
	Build                *string  `protobuf:"bytes,10,opt,name=build" json:"build,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramGameserverSessionRequest) Reset() {
	*m = CMsgSteamDatagramGameserverSessionRequest{}
}
func (m *CMsgSteamDatagramGameserverSessionRequest) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramGameserverSessionRequest) ProtoMessage() {}
func (*CMsgSteamDatagramGameserverSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{15}
}

func (m *CMsgSteamDatagramGameserverSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramGameserverSessionRequest.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramGameserverSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramGameserverSessionRequest.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramGameserverSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramGameserverSessionRequest.Merge(m, src)
}
func (m *CMsgSteamDatagramGameserverSessionRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramGameserverSessionRequest.Size(m)
}
func (m *CMsgSteamDatagramGameserverSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramGameserverSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramGameserverSessionRequest proto.InternalMessageInfo

func (m *CMsgSteamDatagramGameserverSessionRequest) GetTicket() []byte {
	if m != nil {
		return m.Ticket
	}
	return nil
}

func (m *CMsgSteamDatagramGameserverSessionRequest) GetChallengeTime() uint32 {
	if m != nil && m.ChallengeTime != nil {
		return *m.ChallengeTime
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverSessionRequest) GetChallenge() uint64 {
	if m != nil && m.Challenge != nil {
		return *m.Challenge
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverSessionRequest) GetClientConnectionId() uint32 {
	if m != nil && m.ClientConnectionId != nil {
		return *m.ClientConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverSessionRequest) GetServerConnectionId() uint32 {
	if m != nil && m.ServerConnectionId != nil {
		return *m.ServerConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverSessionRequest) GetNetworkConfigVersion() uint32 {
	if m != nil && m.NetworkConfigVersion != nil {
		return *m.NetworkConfigVersion
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverSessionRequest) GetProtocolVersion() uint32 {
	if m != nil && m.ProtocolVersion != nil {
		return *m.ProtocolVersion
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverSessionRequest) GetPlatform() string {
	if m != nil && m.Platform != nil {
		return *m.Platform
	}
	return ""
}

func (m *CMsgSteamDatagramGameserverSessionRequest) GetBuild() string {
	if m != nil && m.Build != nil {
		return *m.Build
	}
	return ""
}

type CMsgSteamDatagramGameserverSessionEstablished struct {
	ConnectionId              *uint32  `protobuf:"fixed32,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	GameserverIdentityString  *string  `protobuf:"bytes,2,opt,name=gameserver_identity_string,json=gameserverIdentityString" json:"gameserver_identity_string,omitempty"`
	SecondsUntilShutdown      *uint32  `protobuf:"varint,4,opt,name=seconds_until_shutdown,json=secondsUntilShutdown" json:"seconds_until_shutdown,omitempty"`
	SeqNumR2C                 *uint32  `protobuf:"varint,6,opt,name=seq_num_r2c,json=seqNumR2c" json:"seq_num_r2c,omitempty"`
	DummyLegacyIdentityBinary []byte   `protobuf:"bytes,7,opt,name=dummy_legacy_identity_binary,json=dummyLegacyIdentityBinary" json:"dummy_legacy_identity_binary,omitempty"`
	LegacyGameserverSteamid   *uint64  `protobuf:"fixed64,3,opt,name=legacy_gameserver_steamid,json=legacyGameserverSteamid" json:"legacy_gameserver_steamid,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *CMsgSteamDatagramGameserverSessionEstablished) Reset() {
	*m = CMsgSteamDatagramGameserverSessionEstablished{}
}
func (m *CMsgSteamDatagramGameserverSessionEstablished) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramGameserverSessionEstablished) ProtoMessage() {}
func (*CMsgSteamDatagramGameserverSessionEstablished) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{16}
}

func (m *CMsgSteamDatagramGameserverSessionEstablished) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramGameserverSessionEstablished.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramGameserverSessionEstablished) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramGameserverSessionEstablished.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramGameserverSessionEstablished) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramGameserverSessionEstablished.Merge(m, src)
}
func (m *CMsgSteamDatagramGameserverSessionEstablished) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramGameserverSessionEstablished.Size(m)
}
func (m *CMsgSteamDatagramGameserverSessionEstablished) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramGameserverSessionEstablished.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramGameserverSessionEstablished proto.InternalMessageInfo

func (m *CMsgSteamDatagramGameserverSessionEstablished) GetConnectionId() uint32 {
	if m != nil && m.ConnectionId != nil {
		return *m.ConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverSessionEstablished) GetGameserverIdentityString() string {
	if m != nil && m.GameserverIdentityString != nil {
		return *m.GameserverIdentityString
	}
	return ""
}

func (m *CMsgSteamDatagramGameserverSessionEstablished) GetSecondsUntilShutdown() uint32 {
	if m != nil && m.SecondsUntilShutdown != nil {
		return *m.SecondsUntilShutdown
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverSessionEstablished) GetSeqNumR2C() uint32 {
	if m != nil && m.SeqNumR2C != nil {
		return *m.SeqNumR2C
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverSessionEstablished) GetDummyLegacyIdentityBinary() []byte {
	if m != nil {
		return m.DummyLegacyIdentityBinary
	}
	return nil
}

func (m *CMsgSteamDatagramGameserverSessionEstablished) GetLegacyGameserverSteamid() uint64 {
	if m != nil && m.LegacyGameserverSteamid != nil {
		return *m.LegacyGameserverSteamid
	}
	return 0
}

type CMsgSteamDatagramConnectionStatsClientToRouter struct {
	QualityRelay         *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,1,opt,name=quality_relay,json=qualityRelay" json:"quality_relay,omitempty"`
	QualityE2E           *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,2,opt,name=quality_e2e,json=qualityE2e" json:"quality_e2e,omitempty"`
	AckRelay             []uint32                            `protobuf:"fixed32,4,rep,name=ack_relay,json=ackRelay" json:"ack_relay,omitempty"`
	LegacyAckE2E         []uint32                            `protobuf:"fixed32,5,rep,name=legacy_ack_e2e,json=legacyAckE2e" json:"legacy_ack_e2e,omitempty"`
	Flags                *uint32                             `protobuf:"varint,6,opt,name=flags" json:"flags,omitempty"`
	ClientConnectionId   *uint32                             `protobuf:"fixed32,8,opt,name=client_connection_id,json=clientConnectionId" json:"client_connection_id,omitempty"`
	SeqNumC2R            *uint32                             `protobuf:"varint,9,opt,name=seq_num_c2r,json=seqNumC2r" json:"seq_num_c2r,omitempty"`
	SeqNumE2E            *uint32                             `protobuf:"varint,10,opt,name=seq_num_e2e,json=seqNumE2e" json:"seq_num_e2e,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) Reset() {
	*m = CMsgSteamDatagramConnectionStatsClientToRouter{}
}
func (m *CMsgSteamDatagramConnectionStatsClientToRouter) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramConnectionStatsClientToRouter) ProtoMessage() {}
func (*CMsgSteamDatagramConnectionStatsClientToRouter) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{17}
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsClientToRouter.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramConnectionStatsClientToRouter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsClientToRouter.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramConnectionStatsClientToRouter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramConnectionStatsClientToRouter.Merge(m, src)
}
func (m *CMsgSteamDatagramConnectionStatsClientToRouter) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsClientToRouter.Size(m)
}
func (m *CMsgSteamDatagramConnectionStatsClientToRouter) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramConnectionStatsClientToRouter.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramConnectionStatsClientToRouter proto.InternalMessageInfo

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) GetQualityRelay() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.QualityRelay
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) GetQualityE2E() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.QualityE2E
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) GetAckRelay() []uint32 {
	if m != nil {
		return m.AckRelay
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) GetLegacyAckE2E() []uint32 {
	if m != nil {
		return m.LegacyAckE2E
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) GetClientConnectionId() uint32 {
	if m != nil && m.ClientConnectionId != nil {
		return *m.ClientConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) GetSeqNumC2R() uint32 {
	if m != nil && m.SeqNumC2R != nil {
		return *m.SeqNumC2R
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) GetSeqNumE2E() uint32 {
	if m != nil && m.SeqNumE2E != nil {
		return *m.SeqNumE2E
	}
	return 0
}

type CMsgSteamDatagramConnectionStatsRouterToClient struct {
	QualityRelay               *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,1,opt,name=quality_relay,json=qualityRelay" json:"quality_relay,omitempty"`
	QualityE2E                 *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,2,opt,name=quality_e2e,json=qualityE2e" json:"quality_e2e,omitempty"`
	SecondsUntilShutdown       *uint32                             `protobuf:"varint,6,opt,name=seconds_until_shutdown,json=secondsUntilShutdown" json:"seconds_until_shutdown,omitempty"`
	MigrateRequestIp           *uint32                             `protobuf:"fixed32,10,opt,name=migrate_request_ip,json=migrateRequestIp" json:"migrate_request_ip,omitempty"`
	MigrateRequestPort         *uint32                             `protobuf:"varint,11,opt,name=migrate_request_port,json=migrateRequestPort" json:"migrate_request_port,omitempty"`
	ScoringPenaltyRelayCluster *uint32                             `protobuf:"varint,12,opt,name=scoring_penalty_relay_cluster,json=scoringPenaltyRelayCluster" json:"scoring_penalty_relay_cluster,omitempty"`
	AckRelay                   []uint32                            `protobuf:"fixed32,13,rep,name=ack_relay,json=ackRelay" json:"ack_relay,omitempty"`
	LegacyAckE2E               []uint32                            `protobuf:"fixed32,14,rep,name=legacy_ack_e2e,json=legacyAckE2e" json:"legacy_ack_e2e,omitempty"`
	Flags                      *uint32                             `protobuf:"varint,15,opt,name=flags" json:"flags,omitempty"`
	ClientConnectionId         *uint32                             `protobuf:"fixed32,7,opt,name=client_connection_id,json=clientConnectionId" json:"client_connection_id,omitempty"`
	SeqNumR2C                  *uint32                             `protobuf:"varint,8,opt,name=seq_num_r2c,json=seqNumR2c" json:"seq_num_r2c,omitempty"`
	SeqNumE2E                  *uint32                             `protobuf:"varint,9,opt,name=seq_num_e2e,json=seqNumE2e" json:"seq_num_e2e,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                            `json:"-"`
	XXX_unrecognized           []byte                              `json:"-"`
	XXX_sizecache              int32                               `json:"-"`
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) Reset() {
	*m = CMsgSteamDatagramConnectionStatsRouterToClient{}
}
func (m *CMsgSteamDatagramConnectionStatsRouterToClient) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramConnectionStatsRouterToClient) ProtoMessage() {}
func (*CMsgSteamDatagramConnectionStatsRouterToClient) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{18}
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsRouterToClient.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramConnectionStatsRouterToClient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsRouterToClient.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramConnectionStatsRouterToClient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramConnectionStatsRouterToClient.Merge(m, src)
}
func (m *CMsgSteamDatagramConnectionStatsRouterToClient) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsRouterToClient.Size(m)
}
func (m *CMsgSteamDatagramConnectionStatsRouterToClient) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramConnectionStatsRouterToClient.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramConnectionStatsRouterToClient proto.InternalMessageInfo

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetQualityRelay() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.QualityRelay
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetQualityE2E() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.QualityE2E
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetSecondsUntilShutdown() uint32 {
	if m != nil && m.SecondsUntilShutdown != nil {
		return *m.SecondsUntilShutdown
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetMigrateRequestIp() uint32 {
	if m != nil && m.MigrateRequestIp != nil {
		return *m.MigrateRequestIp
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetMigrateRequestPort() uint32 {
	if m != nil && m.MigrateRequestPort != nil {
		return *m.MigrateRequestPort
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetScoringPenaltyRelayCluster() uint32 {
	if m != nil && m.ScoringPenaltyRelayCluster != nil {
		return *m.ScoringPenaltyRelayCluster
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetAckRelay() []uint32 {
	if m != nil {
		return m.AckRelay
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetLegacyAckE2E() []uint32 {
	if m != nil {
		return m.LegacyAckE2E
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetClientConnectionId() uint32 {
	if m != nil && m.ClientConnectionId != nil {
		return *m.ClientConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetSeqNumR2C() uint32 {
	if m != nil && m.SeqNumR2C != nil {
		return *m.SeqNumR2C
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetSeqNumE2E() uint32 {
	if m != nil && m.SeqNumE2E != nil {
		return *m.SeqNumE2E
	}
	return 0
}

type CMsgSteamDatagramConnectionStatsRouterToServer struct {
	QualityRelay         *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,1,opt,name=quality_relay,json=qualityRelay" json:"quality_relay,omitempty"`
	QualityE2E           *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,2,opt,name=quality_e2e,json=qualityE2e" json:"quality_e2e,omitempty"`
	AckRelay             []uint32                            `protobuf:"fixed32,10,rep,name=ack_relay,json=ackRelay" json:"ack_relay,omitempty"`
	LegacyAckE2E         []uint32                            `protobuf:"fixed32,11,rep,name=legacy_ack_e2e,json=legacyAckE2e" json:"legacy_ack_e2e,omitempty"`
	Flags                *uint32                             `protobuf:"varint,12,opt,name=flags" json:"flags,omitempty"`
	SeqNumR2S            *uint32                             `protobuf:"varint,5,opt,name=seq_num_r2s,json=seqNumR2s" json:"seq_num_r2s,omitempty"`
	SeqNumE2E            *uint32                             `protobuf:"varint,6,opt,name=seq_num_e2e,json=seqNumE2e" json:"seq_num_e2e,omitempty"`
	ClientIdentityString *string                             `protobuf:"bytes,15,opt,name=client_identity_string,json=clientIdentityString" json:"client_identity_string,omitempty"`
	LegacyClientSteamId  *uint64                             `protobuf:"fixed64,7,opt,name=legacy_client_steam_id,json=legacyClientSteamId" json:"legacy_client_steam_id,omitempty"`
	RelaySessionId       *uint32                             `protobuf:"varint,8,opt,name=relay_session_id,json=relaySessionId" json:"relay_session_id,omitempty"`
	ClientConnectionId   *uint32                             `protobuf:"fixed32,9,opt,name=client_connection_id,json=clientConnectionId" json:"client_connection_id,omitempty"`
	ServerConnectionId   *uint32                             `protobuf:"fixed32,13,opt,name=server_connection_id,json=serverConnectionId" json:"server_connection_id,omitempty"`
	RoutingSecret        *uint64                             `protobuf:"fixed64,14,opt,name=routing_secret,json=routingSecret" json:"routing_secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) Reset() {
	*m = CMsgSteamDatagramConnectionStatsRouterToServer{}
}
func (m *CMsgSteamDatagramConnectionStatsRouterToServer) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramConnectionStatsRouterToServer) ProtoMessage() {}
func (*CMsgSteamDatagramConnectionStatsRouterToServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{19}
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsRouterToServer.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramConnectionStatsRouterToServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsRouterToServer.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramConnectionStatsRouterToServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramConnectionStatsRouterToServer.Merge(m, src)
}
func (m *CMsgSteamDatagramConnectionStatsRouterToServer) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsRouterToServer.Size(m)
}
func (m *CMsgSteamDatagramConnectionStatsRouterToServer) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramConnectionStatsRouterToServer.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramConnectionStatsRouterToServer proto.InternalMessageInfo

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetQualityRelay() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.QualityRelay
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetQualityE2E() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.QualityE2E
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetAckRelay() []uint32 {
	if m != nil {
		return m.AckRelay
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetLegacyAckE2E() []uint32 {
	if m != nil {
		return m.LegacyAckE2E
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetSeqNumR2S() uint32 {
	if m != nil && m.SeqNumR2S != nil {
		return *m.SeqNumR2S
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetSeqNumE2E() uint32 {
	if m != nil && m.SeqNumE2E != nil {
		return *m.SeqNumE2E
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetClientIdentityString() string {
	if m != nil && m.ClientIdentityString != nil {
		return *m.ClientIdentityString
	}
	return ""
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetLegacyClientSteamId() uint64 {
	if m != nil && m.LegacyClientSteamId != nil {
		return *m.LegacyClientSteamId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetRelaySessionId() uint32 {
	if m != nil && m.RelaySessionId != nil {
		return *m.RelaySessionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetClientConnectionId() uint32 {
	if m != nil && m.ClientConnectionId != nil {
		return *m.ClientConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetServerConnectionId() uint32 {
	if m != nil && m.ServerConnectionId != nil {
		return *m.ServerConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetRoutingSecret() uint64 {
	if m != nil && m.RoutingSecret != nil {
		return *m.RoutingSecret
	}
	return 0
}

type CMsgSteamDatagramConnectionStatsServerToRouter struct {
	QualityRelay         *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,1,opt,name=quality_relay,json=qualityRelay" json:"quality_relay,omitempty"`
	QualityE2E           *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,2,opt,name=quality_e2e,json=qualityE2e" json:"quality_e2e,omitempty"`
	AckRelay             []uint32                            `protobuf:"fixed32,8,rep,name=ack_relay,json=ackRelay" json:"ack_relay,omitempty"`
	LegacyAckE2E         []uint32                            `protobuf:"fixed32,9,rep,name=legacy_ack_e2e,json=legacyAckE2e" json:"legacy_ack_e2e,omitempty"`
	Flags                *uint32                             `protobuf:"varint,10,opt,name=flags" json:"flags,omitempty"`
	SeqNumS2R            *uint32                             `protobuf:"varint,3,opt,name=seq_num_s2r,json=seqNumS2r" json:"seq_num_s2r,omitempty"`
	SeqNumE2E            *uint32                             `protobuf:"varint,4,opt,name=seq_num_e2e,json=seqNumE2e" json:"seq_num_e2e,omitempty"`
	RelaySessionId       *uint32                             `protobuf:"varint,6,opt,name=relay_session_id,json=relaySessionId" json:"relay_session_id,omitempty"`
	ClientConnectionId   *uint32                             `protobuf:"fixed32,7,opt,name=client_connection_id,json=clientConnectionId" json:"client_connection_id,omitempty"`
	ServerConnectionId   *uint32                             `protobuf:"fixed32,11,opt,name=server_connection_id,json=serverConnectionId" json:"server_connection_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) Reset() {
	*m = CMsgSteamDatagramConnectionStatsServerToRouter{}
}
func (m *CMsgSteamDatagramConnectionStatsServerToRouter) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramConnectionStatsServerToRouter) ProtoMessage() {}
func (*CMsgSteamDatagramConnectionStatsServerToRouter) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{20}
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsServerToRouter.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramConnectionStatsServerToRouter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsServerToRouter.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramConnectionStatsServerToRouter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramConnectionStatsServerToRouter.Merge(m, src)
}
func (m *CMsgSteamDatagramConnectionStatsServerToRouter) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsServerToRouter.Size(m)
}
func (m *CMsgSteamDatagramConnectionStatsServerToRouter) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramConnectionStatsServerToRouter.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramConnectionStatsServerToRouter proto.InternalMessageInfo

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetQualityRelay() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.QualityRelay
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetQualityE2E() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.QualityE2E
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetAckRelay() []uint32 {
	if m != nil {
		return m.AckRelay
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetLegacyAckE2E() []uint32 {
	if m != nil {
		return m.LegacyAckE2E
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetSeqNumS2R() uint32 {
	if m != nil && m.SeqNumS2R != nil {
		return *m.SeqNumS2R
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetSeqNumE2E() uint32 {
	if m != nil && m.SeqNumE2E != nil {
		return *m.SeqNumE2E
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetRelaySessionId() uint32 {
	if m != nil && m.RelaySessionId != nil {
		return *m.RelaySessionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetClientConnectionId() uint32 {
	if m != nil && m.ClientConnectionId != nil {
		return *m.ClientConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetServerConnectionId() uint32 {
	if m != nil && m.ServerConnectionId != nil {
		return *m.ServerConnectionId
	}
	return 0
}

type CMsgSteamDatagramP2PSessionRequestBody struct {
	ChallengeTime        *uint32  `protobuf:"fixed32,1,opt,name=challenge_time,json=challengeTime" json:"challenge_time,omitempty"`
	Challenge            *uint64  `protobuf:"fixed64,2,opt,name=challenge" json:"challenge,omitempty"`
	ClientConnectionId   *uint32  `protobuf:"fixed32,3,opt,name=client_connection_id,json=clientConnectionId" json:"client_connection_id,omitempty"`
	LegacyPeerSteamId    *uint64  `protobuf:"fixed64,4,opt,name=legacy_peer_steam_id,json=legacyPeerSteamId" json:"legacy_peer_steam_id,omitempty"`
	PeerIdentityString   *string  `protobuf:"bytes,11,opt,name=peer_identity_string,json=peerIdentityString" json:"peer_identity_string,omitempty"`
	PeerConnectionId     *uint32  `protobuf:"fixed32,5,opt,name=peer_connection_id,json=peerConnectionId" json:"peer_connection_id,omitempty"`
	ProtocolVersion      *uint32  `protobuf:"varint,8,opt,name=protocol_version,json=protocolVersion" json:"protocol_version,omitempty"`
	NetworkConfigVersion *uint32  `protobuf:"varint,9,opt,name=network_config_version,json=networkConfigVersion" json:"network_config_version,omitempty"`
	UnusedPublicIp       *uint32  `protobuf:"fixed32,10,opt,name=unused_public_ip,json=unusedPublicIp" json:"unused_public_ip,omitempty"`
	Platform             *string  `protobuf:"bytes,12,opt,name=platform" json:"platform,omitempty"`
	Build                *string  `protobuf:"bytes,13,opt,name=build" json:"build,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramP2PSessionRequestBody) Reset() {
	*m = CMsgSteamDatagramP2PSessionRequestBody{}
}
func (m *CMsgSteamDatagramP2PSessionRequestBody) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramP2PSessionRequestBody) ProtoMessage()    {}
func (*CMsgSteamDatagramP2PSessionRequestBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{21}
}

func (m *CMsgSteamDatagramP2PSessionRequestBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramP2PSessionRequestBody.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramP2PSessionRequestBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramP2PSessionRequestBody.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramP2PSessionRequestBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramP2PSessionRequestBody.Merge(m, src)
}
func (m *CMsgSteamDatagramP2PSessionRequestBody) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramP2PSessionRequestBody.Size(m)
}
func (m *CMsgSteamDatagramP2PSessionRequestBody) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramP2PSessionRequestBody.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramP2PSessionRequestBody proto.InternalMessageInfo

func (m *CMsgSteamDatagramP2PSessionRequestBody) GetChallengeTime() uint32 {
	if m != nil && m.ChallengeTime != nil {
		return *m.ChallengeTime
	}
	return 0
}

func (m *CMsgSteamDatagramP2PSessionRequestBody) GetChallenge() uint64 {
	if m != nil && m.Challenge != nil {
		return *m.Challenge
	}
	return 0
}

func (m *CMsgSteamDatagramP2PSessionRequestBody) GetClientConnectionId() uint32 {
	if m != nil && m.ClientConnectionId != nil {
		return *m.ClientConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramP2PSessionRequestBody) GetLegacyPeerSteamId() uint64 {
	if m != nil && m.LegacyPeerSteamId != nil {
		return *m.LegacyPeerSteamId
	}
	return 0
}

func (m *CMsgSteamDatagramP2PSessionRequestBody) GetPeerIdentityString() string {
	if m != nil && m.PeerIdentityString != nil {
		return *m.PeerIdentityString
	}
	return ""
}

func (m *CMsgSteamDatagramP2PSessionRequestBody) GetPeerConnectionId() uint32 {
	if m != nil && m.PeerConnectionId != nil {
		return *m.PeerConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramP2PSessionRequestBody) GetProtocolVersion() uint32 {
	if m != nil && m.ProtocolVersion != nil {
		return *m.ProtocolVersion
	}
	return 0
}

func (m *CMsgSteamDatagramP2PSessionRequestBody) GetNetworkConfigVersion() uint32 {
	if m != nil && m.NetworkConfigVersion != nil {
		return *m.NetworkConfigVersion
	}
	return 0
}

func (m *CMsgSteamDatagramP2PSessionRequestBody) GetUnusedPublicIp() uint32 {
	if m != nil && m.UnusedPublicIp != nil {
		return *m.UnusedPublicIp
	}
	return 0
}

func (m *CMsgSteamDatagramP2PSessionRequestBody) GetPlatform() string {
	if m != nil && m.Platform != nil {
		return *m.Platform
	}
	return ""
}

func (m *CMsgSteamDatagramP2PSessionRequestBody) GetBuild() string {
	if m != nil && m.Build != nil {
		return *m.Build
	}
	return ""
}

type CMsgSteamDatagramP2PSessionRequest struct {
	Cert                 *CMsgSteamDatagramCertificateSigned `protobuf:"bytes,1,opt,name=cert" json:"cert,omitempty"`
	Body                 []byte                              `protobuf:"bytes,2,opt,name=body" json:"body,omitempty"`
	Signature            []byte                              `protobuf:"bytes,3,opt,name=signature" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *CMsgSteamDatagramP2PSessionRequest) Reset()         { *m = CMsgSteamDatagramP2PSessionRequest{} }
func (m *CMsgSteamDatagramP2PSessionRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramP2PSessionRequest) ProtoMessage()    {}
func (*CMsgSteamDatagramP2PSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{22}
}

func (m *CMsgSteamDatagramP2PSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramP2PSessionRequest.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramP2PSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramP2PSessionRequest.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramP2PSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramP2PSessionRequest.Merge(m, src)
}
func (m *CMsgSteamDatagramP2PSessionRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramP2PSessionRequest.Size(m)
}
func (m *CMsgSteamDatagramP2PSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramP2PSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramP2PSessionRequest proto.InternalMessageInfo

func (m *CMsgSteamDatagramP2PSessionRequest) GetCert() *CMsgSteamDatagramCertificateSigned {
	if m != nil {
		return m.Cert
	}
	return nil
}

func (m *CMsgSteamDatagramP2PSessionRequest) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *CMsgSteamDatagramP2PSessionRequest) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type CMsgSteamDatagramP2PSessionEstablished struct {
	ConnectionId         *uint32  `protobuf:"fixed32,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	SecondsUntilShutdown *uint32  `protobuf:"varint,3,opt,name=seconds_until_shutdown,json=secondsUntilShutdown" json:"seconds_until_shutdown,omitempty"`
	RelayRoutingToken    []byte   `protobuf:"bytes,4,opt,name=relay_routing_token,json=relayRoutingToken" json:"relay_routing_token,omitempty"`
	SeqNumR2C            *uint32  `protobuf:"varint,5,opt,name=seq_num_r2c,json=seqNumR2c" json:"seq_num_r2c,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramP2PSessionEstablished) Reset() {
	*m = CMsgSteamDatagramP2PSessionEstablished{}
}
func (m *CMsgSteamDatagramP2PSessionEstablished) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramP2PSessionEstablished) ProtoMessage()    {}
func (*CMsgSteamDatagramP2PSessionEstablished) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{23}
}

func (m *CMsgSteamDatagramP2PSessionEstablished) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramP2PSessionEstablished.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramP2PSessionEstablished) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramP2PSessionEstablished.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramP2PSessionEstablished) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramP2PSessionEstablished.Merge(m, src)
}
func (m *CMsgSteamDatagramP2PSessionEstablished) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramP2PSessionEstablished.Size(m)
}
func (m *CMsgSteamDatagramP2PSessionEstablished) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramP2PSessionEstablished.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramP2PSessionEstablished proto.InternalMessageInfo

func (m *CMsgSteamDatagramP2PSessionEstablished) GetConnectionId() uint32 {
	if m != nil && m.ConnectionId != nil {
		return *m.ConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramP2PSessionEstablished) GetSecondsUntilShutdown() uint32 {
	if m != nil && m.SecondsUntilShutdown != nil {
		return *m.SecondsUntilShutdown
	}
	return 0
}

func (m *CMsgSteamDatagramP2PSessionEstablished) GetRelayRoutingToken() []byte {
	if m != nil {
		return m.RelayRoutingToken
	}
	return nil
}

func (m *CMsgSteamDatagramP2PSessionEstablished) GetSeqNumR2C() uint32 {
	if m != nil && m.SeqNumR2C != nil {
		return *m.SeqNumR2C
	}
	return 0
}

type CMsgSteamDatagramConnectionStatsP2PClientToRouter struct {
	QualityRelay                   *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,1,opt,name=quality_relay,json=qualityRelay" json:"quality_relay,omitempty"`
	QualityE2E                     *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,2,opt,name=quality_e2e,json=qualityE2e" json:"quality_e2e,omitempty"`
	P2PRoutingSummary              *CMsgSteamDatagramP2PRoutingSummary `protobuf:"bytes,14,opt,name=p2p_routing_summary,json=p2pRoutingSummary" json:"p2p_routing_summary,omitempty"`
	AckRelay                       []uint32                            `protobuf:"fixed32,3,rep,name=ack_relay,json=ackRelay" json:"ack_relay,omitempty"`
	LegacyAckE2E                   []uint32                            `protobuf:"fixed32,4,rep,name=legacy_ack_e2e,json=legacyAckE2e" json:"legacy_ack_e2e,omitempty"`
	Flags                          *uint32                             `protobuf:"varint,5,opt,name=flags" json:"flags,omitempty"`
	ForwardTargetRelayRoutingToken []byte                              `protobuf:"bytes,6,opt,name=forward_target_relay_routing_token,json=forwardTargetRelayRoutingToken" json:"forward_target_relay_routing_token,omitempty"`
	ForwardTargetRevision          *uint32                             `protobuf:"varint,7,opt,name=forward_target_revision,json=forwardTargetRevision" json:"forward_target_revision,omitempty"`
	Routes                         []byte                              `protobuf:"bytes,8,opt,name=routes" json:"routes,omitempty"`
	AckPeerRoutesRevision          *uint32                             `protobuf:"varint,9,opt,name=ack_peer_routes_revision,json=ackPeerRoutesRevision" json:"ack_peer_routes_revision,omitempty"`
	ConnectionId                   *uint32                             `protobuf:"fixed32,10,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	SeqNumC2R                      *uint32                             `protobuf:"varint,11,opt,name=seq_num_c2r,json=seqNumC2r" json:"seq_num_c2r,omitempty"`
	SeqNumE2E                      *uint32                             `protobuf:"varint,12,opt,name=seq_num_e2e,json=seqNumE2e" json:"seq_num_e2e,omitempty"`
	XXX_NoUnkeyedLiteral           struct{}                            `json:"-"`
	XXX_unrecognized               []byte                              `json:"-"`
	XXX_sizecache                  int32                               `json:"-"`
}

func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) Reset() {
	*m = CMsgSteamDatagramConnectionStatsP2PClientToRouter{}
}
func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramConnectionStatsP2PClientToRouter) ProtoMessage() {}
func (*CMsgSteamDatagramConnectionStatsP2PClientToRouter) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{24}
}

func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsP2PClientToRouter.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsP2PClientToRouter.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramConnectionStatsP2PClientToRouter.Merge(m, src)
}
func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsP2PClientToRouter.Size(m)
}
func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramConnectionStatsP2PClientToRouter.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramConnectionStatsP2PClientToRouter proto.InternalMessageInfo

func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) GetQualityRelay() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.QualityRelay
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) GetQualityE2E() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.QualityE2E
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) GetP2PRoutingSummary() *CMsgSteamDatagramP2PRoutingSummary {
	if m != nil {
		return m.P2PRoutingSummary
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) GetAckRelay() []uint32 {
	if m != nil {
		return m.AckRelay
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) GetLegacyAckE2E() []uint32 {
	if m != nil {
		return m.LegacyAckE2E
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) GetForwardTargetRelayRoutingToken() []byte {
	if m != nil {
		return m.ForwardTargetRelayRoutingToken
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) GetForwardTargetRevision() uint32 {
	if m != nil && m.ForwardTargetRevision != nil {
		return *m.ForwardTargetRevision
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) GetRoutes() []byte {
	if m != nil {
		return m.Routes
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) GetAckPeerRoutesRevision() uint32 {
	if m != nil && m.AckPeerRoutesRevision != nil {
		return *m.AckPeerRoutesRevision
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) GetConnectionId() uint32 {
	if m != nil && m.ConnectionId != nil {
		return *m.ConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) GetSeqNumC2R() uint32 {
	if m != nil && m.SeqNumC2R != nil {
		return *m.SeqNumC2R
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) GetSeqNumE2E() uint32 {
	if m != nil && m.SeqNumE2E != nil {
		return *m.SeqNumE2E
	}
	return 0
}

type CMsgSteamDatagramConnectionStatsP2PRouterToClient struct {
	QualityRelay               *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,1,opt,name=quality_relay,json=qualityRelay" json:"quality_relay,omitempty"`
	QualityE2E                 *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,2,opt,name=quality_e2e,json=qualityE2e" json:"quality_e2e,omitempty"`
	SecondsUntilShutdown       *uint32                             `protobuf:"varint,3,opt,name=seconds_until_shutdown,json=secondsUntilShutdown" json:"seconds_until_shutdown,omitempty"`
	MigrateRequestIp           *uint32                             `protobuf:"fixed32,4,opt,name=migrate_request_ip,json=migrateRequestIp" json:"migrate_request_ip,omitempty"`
	MigrateRequestPort         *uint32                             `protobuf:"varint,5,opt,name=migrate_request_port,json=migrateRequestPort" json:"migrate_request_port,omitempty"`
	ScoringPenaltyRelayCluster *uint32                             `protobuf:"varint,6,opt,name=scoring_penalty_relay_cluster,json=scoringPenaltyRelayCluster" json:"scoring_penalty_relay_cluster,omitempty"`
	AckRelay                   []uint32                            `protobuf:"fixed32,7,rep,name=ack_relay,json=ackRelay" json:"ack_relay,omitempty"`
	LegacyAckE2E               []uint32                            `protobuf:"fixed32,8,rep,name=legacy_ack_e2e,json=legacyAckE2e" json:"legacy_ack_e2e,omitempty"`
	Flags                      *uint32                             `protobuf:"varint,9,opt,name=flags" json:"flags,omitempty"`
	AckForwardTargetRevision   *uint32                             `protobuf:"varint,10,opt,name=ack_forward_target_revision,json=ackForwardTargetRevision" json:"ack_forward_target_revision,omitempty"`
	Routes                     []byte                              `protobuf:"bytes,11,opt,name=routes" json:"routes,omitempty"`
	AckPeerRoutesRevision      *uint32                             `protobuf:"varint,12,opt,name=ack_peer_routes_revision,json=ackPeerRoutesRevision" json:"ack_peer_routes_revision,omitempty"`
	ConnectionId               *uint32                             `protobuf:"fixed32,13,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	SeqNumR2C                  *uint32                             `protobuf:"varint,14,opt,name=seq_num_r2c,json=seqNumR2c" json:"seq_num_r2c,omitempty"`
	SeqNumE2E                  *uint32                             `protobuf:"varint,15,opt,name=seq_num_e2e,json=seqNumE2e" json:"seq_num_e2e,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                            `json:"-"`
	XXX_unrecognized           []byte                              `json:"-"`
	XXX_sizecache              int32                               `json:"-"`
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) Reset() {
	*m = CMsgSteamDatagramConnectionStatsP2PRouterToClient{}
}
func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramConnectionStatsP2PRouterToClient) ProtoMessage() {}
func (*CMsgSteamDatagramConnectionStatsP2PRouterToClient) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{25}
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsP2PRouterToClient.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsP2PRouterToClient.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramConnectionStatsP2PRouterToClient.Merge(m, src)
}
func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsP2PRouterToClient.Size(m)
}
func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramConnectionStatsP2PRouterToClient.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramConnectionStatsP2PRouterToClient proto.InternalMessageInfo

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) GetQualityRelay() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.QualityRelay
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) GetQualityE2E() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.QualityE2E
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) GetSecondsUntilShutdown() uint32 {
	if m != nil && m.SecondsUntilShutdown != nil {
		return *m.SecondsUntilShutdown
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) GetMigrateRequestIp() uint32 {
	if m != nil && m.MigrateRequestIp != nil {
		return *m.MigrateRequestIp
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) GetMigrateRequestPort() uint32 {
	if m != nil && m.MigrateRequestPort != nil {
		return *m.MigrateRequestPort
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) GetScoringPenaltyRelayCluster() uint32 {
	if m != nil && m.ScoringPenaltyRelayCluster != nil {
		return *m.ScoringPenaltyRelayCluster
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) GetAckRelay() []uint32 {
	if m != nil {
		return m.AckRelay
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) GetLegacyAckE2E() []uint32 {
	if m != nil {
		return m.LegacyAckE2E
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) GetAckForwardTargetRevision() uint32 {
	if m != nil && m.AckForwardTargetRevision != nil {
		return *m.AckForwardTargetRevision
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) GetRoutes() []byte {
	if m != nil {
		return m.Routes
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) GetAckPeerRoutesRevision() uint32 {
	if m != nil && m.AckPeerRoutesRevision != nil {
		return *m.AckPeerRoutesRevision
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) GetConnectionId() uint32 {
	if m != nil && m.ConnectionId != nil {
		return *m.ConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) GetSeqNumR2C() uint32 {
	if m != nil && m.SeqNumR2C != nil {
		return *m.SeqNumR2C
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) GetSeqNumE2E() uint32 {
	if m != nil && m.SeqNumE2E != nil {
		return *m.SeqNumE2E
	}
	return 0
}

type CMsgSteamDatagramP2PBadRouteRouterToClient struct {
	ConnectionId             *uint32  `protobuf:"fixed32,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	FailedRelayRoutingToken  []byte   `protobuf:"bytes,2,opt,name=failed_relay_routing_token,json=failedRelayRoutingToken" json:"failed_relay_routing_token,omitempty"`
	AckForwardTargetRevision *uint32  `protobuf:"varint,3,opt,name=ack_forward_target_revision,json=ackForwardTargetRevision" json:"ack_forward_target_revision,omitempty"`
	KludgePad                *uint64  `protobuf:"fixed64,99,opt,name=kludge_pad,json=kludgePad" json:"kludge_pad,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *CMsgSteamDatagramP2PBadRouteRouterToClient) Reset() {
	*m = CMsgSteamDatagramP2PBadRouteRouterToClient{}
}
func (m *CMsgSteamDatagramP2PBadRouteRouterToClient) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramP2PBadRouteRouterToClient) ProtoMessage() {}
func (*CMsgSteamDatagramP2PBadRouteRouterToClient) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{26}
}

func (m *CMsgSteamDatagramP2PBadRouteRouterToClient) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramP2PBadRouteRouterToClient.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramP2PBadRouteRouterToClient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramP2PBadRouteRouterToClient.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramP2PBadRouteRouterToClient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramP2PBadRouteRouterToClient.Merge(m, src)
}
func (m *CMsgSteamDatagramP2PBadRouteRouterToClient) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramP2PBadRouteRouterToClient.Size(m)
}
func (m *CMsgSteamDatagramP2PBadRouteRouterToClient) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramP2PBadRouteRouterToClient.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramP2PBadRouteRouterToClient proto.InternalMessageInfo

func (m *CMsgSteamDatagramP2PBadRouteRouterToClient) GetConnectionId() uint32 {
	if m != nil && m.ConnectionId != nil {
		return *m.ConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramP2PBadRouteRouterToClient) GetFailedRelayRoutingToken() []byte {
	if m != nil {
		return m.FailedRelayRoutingToken
	}
	return nil
}

func (m *CMsgSteamDatagramP2PBadRouteRouterToClient) GetAckForwardTargetRevision() uint32 {
	if m != nil && m.AckForwardTargetRevision != nil {
		return *m.AckForwardTargetRevision
	}
	return 0
}

func (m *CMsgSteamDatagramP2PBadRouteRouterToClient) GetKludgePad() uint64 {
	if m != nil && m.KludgePad != nil {
		return *m.KludgePad
	}
	return 0
}

type CMsgSteamDatagramP2PRoutes struct {
	RelayClusters        []*CMsgSteamDatagramP2PRoutes_RelayCluster `protobuf:"bytes,1,rep,name=relay_clusters,json=relayClusters" json:"relay_clusters,omitempty"`
	Routes               []*CMsgSteamDatagramP2PRoutes_Route        `protobuf:"bytes,2,rep,name=routes" json:"routes,omitempty"`
	Revision             *uint32                                    `protobuf:"varint,3,opt,name=revision" json:"revision,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *CMsgSteamDatagramP2PRoutes) Reset()         { *m = CMsgSteamDatagramP2PRoutes{} }
func (m *CMsgSteamDatagramP2PRoutes) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramP2PRoutes) ProtoMessage()    {}
func (*CMsgSteamDatagramP2PRoutes) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{27}
}

func (m *CMsgSteamDatagramP2PRoutes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramP2PRoutes.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramP2PRoutes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramP2PRoutes.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramP2PRoutes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramP2PRoutes.Merge(m, src)
}
func (m *CMsgSteamDatagramP2PRoutes) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramP2PRoutes.Size(m)
}
func (m *CMsgSteamDatagramP2PRoutes) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramP2PRoutes.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramP2PRoutes proto.InternalMessageInfo

func (m *CMsgSteamDatagramP2PRoutes) GetRelayClusters() []*CMsgSteamDatagramP2PRoutes_RelayCluster {
	if m != nil {
		return m.RelayClusters
	}
	return nil
}

func (m *CMsgSteamDatagramP2PRoutes) GetRoutes() []*CMsgSteamDatagramP2PRoutes_Route {
	if m != nil {
		return m.Routes
	}
	return nil
}

func (m *CMsgSteamDatagramP2PRoutes) GetRevision() uint32 {
	if m != nil && m.Revision != nil {
		return *m.Revision
	}
	return 0
}

type CMsgSteamDatagramP2PRoutes_RelayCluster struct {
	PopId                    *uint32  `protobuf:"fixed32,1,opt,name=pop_id,json=popId" json:"pop_id,omitempty"`
	PingMs                   *uint32  `protobuf:"varint,2,opt,name=ping_ms,json=pingMs" json:"ping_ms,omitempty"`
	ScorePenalty             *uint32  `protobuf:"varint,3,opt,name=score_penalty,json=scorePenalty" json:"score_penalty,omitempty"`
	SessionRelayRoutingToken []byte   `protobuf:"bytes,4,opt,name=session_relay_routing_token,json=sessionRelayRoutingToken" json:"session_relay_routing_token,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *CMsgSteamDatagramP2PRoutes_RelayCluster) Reset() {
	*m = CMsgSteamDatagramP2PRoutes_RelayCluster{}
}
func (m *CMsgSteamDatagramP2PRoutes_RelayCluster) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramP2PRoutes_RelayCluster) ProtoMessage()    {}
func (*CMsgSteamDatagramP2PRoutes_RelayCluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{27, 0}
}

func (m *CMsgSteamDatagramP2PRoutes_RelayCluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramP2PRoutes_RelayCluster.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramP2PRoutes_RelayCluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramP2PRoutes_RelayCluster.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramP2PRoutes_RelayCluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramP2PRoutes_RelayCluster.Merge(m, src)
}
func (m *CMsgSteamDatagramP2PRoutes_RelayCluster) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramP2PRoutes_RelayCluster.Size(m)
}
func (m *CMsgSteamDatagramP2PRoutes_RelayCluster) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramP2PRoutes_RelayCluster.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramP2PRoutes_RelayCluster proto.InternalMessageInfo

func (m *CMsgSteamDatagramP2PRoutes_RelayCluster) GetPopId() uint32 {
	if m != nil && m.PopId != nil {
		return *m.PopId
	}
	return 0
}

func (m *CMsgSteamDatagramP2PRoutes_RelayCluster) GetPingMs() uint32 {
	if m != nil && m.PingMs != nil {
		return *m.PingMs
	}
	return 0
}

func (m *CMsgSteamDatagramP2PRoutes_RelayCluster) GetScorePenalty() uint32 {
	if m != nil && m.ScorePenalty != nil {
		return *m.ScorePenalty
	}
	return 0
}

func (m *CMsgSteamDatagramP2PRoutes_RelayCluster) GetSessionRelayRoutingToken() []byte {
	if m != nil {
		return m.SessionRelayRoutingToken
	}
	return nil
}

type CMsgSteamDatagramP2PRoutes_Route struct {
	MyPopId              *uint32  `protobuf:"fixed32,1,opt,name=my_pop_id,json=myPopId" json:"my_pop_id,omitempty"`
	YourPopId            *uint32  `protobuf:"fixed32,2,opt,name=your_pop_id,json=yourPopId" json:"your_pop_id,omitempty"`
	Score                *uint32  `protobuf:"varint,3,opt,name=score" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramP2PRoutes_Route) Reset()         { *m = CMsgSteamDatagramP2PRoutes_Route{} }
func (m *CMsgSteamDatagramP2PRoutes_Route) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramP2PRoutes_Route) ProtoMessage()    {}
func (*CMsgSteamDatagramP2PRoutes_Route) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{27, 1}
}

func (m *CMsgSteamDatagramP2PRoutes_Route) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramP2PRoutes_Route.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramP2PRoutes_Route) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramP2PRoutes_Route.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramP2PRoutes_Route) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramP2PRoutes_Route.Merge(m, src)
}
func (m *CMsgSteamDatagramP2PRoutes_Route) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramP2PRoutes_Route.Size(m)
}
func (m *CMsgSteamDatagramP2PRoutes_Route) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramP2PRoutes_Route.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramP2PRoutes_Route proto.InternalMessageInfo

func (m *CMsgSteamDatagramP2PRoutes_Route) GetMyPopId() uint32 {
	if m != nil && m.MyPopId != nil {
		return *m.MyPopId
	}
	return 0
}

func (m *CMsgSteamDatagramP2PRoutes_Route) GetYourPopId() uint32 {
	if m != nil && m.YourPopId != nil {
		return *m.YourPopId
	}
	return 0
}

func (m *CMsgSteamDatagramP2PRoutes_Route) GetScore() uint32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

type CMsgSteamDatagramSetSecondaryAddressRequest struct {
	ClientMainIp           *uint32  `protobuf:"fixed32,1,opt,name=client_main_ip,json=clientMainIp" json:"client_main_ip,omitempty"`
	ClientMainPort         *uint32  `protobuf:"fixed32,2,opt,name=client_main_port,json=clientMainPort" json:"client_main_port,omitempty"`
	ClientConnectionId     *uint32  `protobuf:"fixed32,3,opt,name=client_connection_id,json=clientConnectionId" json:"client_connection_id,omitempty"`
	ClientIdentity         *string  `protobuf:"bytes,4,opt,name=client_identity,json=clientIdentity" json:"client_identity,omitempty"`
	RequestSendDuplication *bool    `protobuf:"varint,5,opt,name=request_send_duplication,json=requestSendDuplication" json:"request_send_duplication,omitempty"`
	KludgePad              []byte   `protobuf:"bytes,99,opt,name=kludge_pad,json=kludgePad" json:"kludge_pad,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *CMsgSteamDatagramSetSecondaryAddressRequest) Reset() {
	*m = CMsgSteamDatagramSetSecondaryAddressRequest{}
}
func (m *CMsgSteamDatagramSetSecondaryAddressRequest) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramSetSecondaryAddressRequest) ProtoMessage() {}
func (*CMsgSteamDatagramSetSecondaryAddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{28}
}

func (m *CMsgSteamDatagramSetSecondaryAddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramSetSecondaryAddressRequest.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramSetSecondaryAddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramSetSecondaryAddressRequest.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramSetSecondaryAddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramSetSecondaryAddressRequest.Merge(m, src)
}
func (m *CMsgSteamDatagramSetSecondaryAddressRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramSetSecondaryAddressRequest.Size(m)
}
func (m *CMsgSteamDatagramSetSecondaryAddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramSetSecondaryAddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramSetSecondaryAddressRequest proto.InternalMessageInfo

func (m *CMsgSteamDatagramSetSecondaryAddressRequest) GetClientMainIp() uint32 {
	if m != nil && m.ClientMainIp != nil {
		return *m.ClientMainIp
	}
	return 0
}

func (m *CMsgSteamDatagramSetSecondaryAddressRequest) GetClientMainPort() uint32 {
	if m != nil && m.ClientMainPort != nil {
		return *m.ClientMainPort
	}
	return 0
}

func (m *CMsgSteamDatagramSetSecondaryAddressRequest) GetClientConnectionId() uint32 {
	if m != nil && m.ClientConnectionId != nil {
		return *m.ClientConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramSetSecondaryAddressRequest) GetClientIdentity() string {
	if m != nil && m.ClientIdentity != nil {
		return *m.ClientIdentity
	}
	return ""
}

func (m *CMsgSteamDatagramSetSecondaryAddressRequest) GetRequestSendDuplication() bool {
	if m != nil && m.RequestSendDuplication != nil {
		return *m.RequestSendDuplication
	}
	return false
}

func (m *CMsgSteamDatagramSetSecondaryAddressRequest) GetKludgePad() []byte {
	if m != nil {
		return m.KludgePad
	}
	return nil
}

type CMsgSteamDatagramSetSecondaryAddressResult struct {
	Success              *bool    `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Message              *string  `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramSetSecondaryAddressResult) Reset() {
	*m = CMsgSteamDatagramSetSecondaryAddressResult{}
}
func (m *CMsgSteamDatagramSetSecondaryAddressResult) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramSetSecondaryAddressResult) ProtoMessage() {}
func (*CMsgSteamDatagramSetSecondaryAddressResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_b47bf0c83d151fdc, []int{29}
}

func (m *CMsgSteamDatagramSetSecondaryAddressResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramSetSecondaryAddressResult.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramSetSecondaryAddressResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramSetSecondaryAddressResult.Marshal(b, m, deterministic)
}
func (m *CMsgSteamDatagramSetSecondaryAddressResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramSetSecondaryAddressResult.Merge(m, src)
}
func (m *CMsgSteamDatagramSetSecondaryAddressResult) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramSetSecondaryAddressResult.Size(m)
}
func (m *CMsgSteamDatagramSetSecondaryAddressResult) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramSetSecondaryAddressResult.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramSetSecondaryAddressResult proto.InternalMessageInfo

func (m *CMsgSteamDatagramSetSecondaryAddressResult) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func (m *CMsgSteamDatagramSetSecondaryAddressResult) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func init() {
	proto.RegisterEnum("dota.ESteamDatagramMsgID", ESteamDatagramMsgID_name, ESteamDatagramMsgID_value)
	proto.RegisterEnum("dota.CMsgSteamDatagramRouterPingReply_Flags", CMsgSteamDatagramRouterPingReply_Flags_name, CMsgSteamDatagramRouterPingReply_Flags_value)
	proto.RegisterEnum("dota.CMsgSteamDatagramRouterPingReply_AltAddress_Protocol", CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_name, CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_value)
	proto.RegisterEnum("dota.CMsgSteamDatagramConnectionClosed_ERelayMode", CMsgSteamDatagramConnectionClosed_ERelayMode_name, CMsgSteamDatagramConnectionClosed_ERelayMode_value)
	proto.RegisterEnum("dota.CMsgSteamDatagramConnectionStatsClientToRouter_Flags", CMsgSteamDatagramConnectionStatsClientToRouter_Flags_name, CMsgSteamDatagramConnectionStatsClientToRouter_Flags_value)
	proto.RegisterEnum("dota.CMsgSteamDatagramConnectionStatsRouterToClient_Flags", CMsgSteamDatagramConnectionStatsRouterToClient_Flags_name, CMsgSteamDatagramConnectionStatsRouterToClient_Flags_value)
	proto.RegisterEnum("dota.CMsgSteamDatagramConnectionStatsRouterToServer_Flags", CMsgSteamDatagramConnectionStatsRouterToServer_Flags_name, CMsgSteamDatagramConnectionStatsRouterToServer_Flags_value)
	proto.RegisterEnum("dota.CMsgSteamDatagramConnectionStatsServerToRouter_Flags", CMsgSteamDatagramConnectionStatsServerToRouter_Flags_name, CMsgSteamDatagramConnectionStatsServerToRouter_Flags_value)
	proto.RegisterEnum("dota.CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags", CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_name, CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_value)
	proto.RegisterEnum("dota.CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags", CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_name, CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_value)
	proto.RegisterType((*CMsgSteamDatagramRouterPingReply)(nil), "dota.CMsgSteamDatagramRouterPingReply")
	proto.RegisterType((*CMsgSteamDatagramRouterPingReply_RouteException)(nil), "dota.CMsgSteamDatagramRouterPingReply.RouteException")
	proto.RegisterType((*CMsgSteamDatagramRouterPingReply_AltAddress)(nil), "dota.CMsgSteamDatagramRouterPingReply.AltAddress")
	proto.RegisterType((*CMsgSteamDatagramGameserverPingRequest)(nil), "dota.CMsgSteamDatagramGameserverPingRequest")
	proto.RegisterType((*CMsgSteamDatagramLegacyGameserverPingReply)(nil), "dota.CMsgSteamDatagramLegacyGameserverPingReply")
	proto.RegisterType((*CMsgSteamDatagramGameserverPingReply)(nil), "dota.CMsgSteamDatagramGameserverPingReply")
	proto.RegisterType((*CMsgSteamDatagramGameserverPingReply_SignedData)(nil), "dota.CMsgSteamDatagramGameserverPingReply.SignedData")
	proto.RegisterType((*CMsgSteamDatagramNoSessionRelayToClient)(nil), "dota.CMsgSteamDatagramNoSessionRelayToClient")
	proto.RegisterType((*CMsgSteamDatagramNoSessionRelayToPeer)(nil), "dota.CMsgSteamDatagramNoSessionRelayToPeer")
	proto.RegisterType((*CMsgSteamDatagramClientPingSampleRequest)(nil), "dota.CMsgSteamDatagramClientPingSampleRequest")
	proto.RegisterType((*CMsgSteamDatagramClientPingSampleReply)(nil), "dota.CMsgSteamDatagramClientPingSampleReply")
	proto.RegisterType((*CMsgSteamDatagramClientPingSampleReply_POP)(nil), "dota.CMsgSteamDatagramClientPingSampleReply.POP")
	proto.RegisterType((*CMsgSteamDatagramClientPingSampleReply_POP_AltAddress)(nil), "dota.CMsgSteamDatagramClientPingSampleReply.POP.AltAddress")
	proto.RegisterType((*CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter)(nil), "dota.CMsgSteamDatagramClientPingSampleReply.LegacyDataCenter")
	proto.RegisterType((*CMsgSteamDatagramClientSwitchedPrimary)(nil), "dota.CMsgSteamDatagramClientSwitchedPrimary")
	proto.RegisterType((*CMsgSteamDatagramClientSwitchedPrimary_RouterQuality)(nil), "dota.CMsgSteamDatagramClientSwitchedPrimary.RouterQuality")
	proto.RegisterType((*CMsgSteamDatagramConnectRequest)(nil), "dota.CMsgSteamDatagramConnectRequest")
	proto.RegisterType((*CMsgSteamDatagramConnectOK)(nil), "dota.CMsgSteamDatagramConnectOK")
	proto.RegisterType((*CMsgSteamNetworkingP2PSDRRoutingSummary)(nil), "dota.CMsgSteamNetworkingP2PSDRRoutingSummary")
	proto.RegisterType((*CMsgSteamDatagramP2PRoutingSummary)(nil), "dota.CMsgSteamDatagramP2PRoutingSummary")
	proto.RegisterType((*CMsgSteamDatagramConnectionClosed)(nil), "dota.CMsgSteamDatagramConnectionClosed")
	proto.RegisterType((*CMsgSteamDatagramNoConnection)(nil), "dota.CMsgSteamDatagramNoConnection")
	proto.RegisterType((*CMsgSteamDatagramGameserverSessionRequest)(nil), "dota.CMsgSteamDatagramGameserverSessionRequest")
	proto.RegisterType((*CMsgSteamDatagramGameserverSessionEstablished)(nil), "dota.CMsgSteamDatagramGameserverSessionEstablished")
	proto.RegisterType((*CMsgSteamDatagramConnectionStatsClientToRouter)(nil), "dota.CMsgSteamDatagramConnectionStatsClientToRouter")
	proto.RegisterType((*CMsgSteamDatagramConnectionStatsRouterToClient)(nil), "dota.CMsgSteamDatagramConnectionStatsRouterToClient")
	proto.RegisterType((*CMsgSteamDatagramConnectionStatsRouterToServer)(nil), "dota.CMsgSteamDatagramConnectionStatsRouterToServer")
	proto.RegisterType((*CMsgSteamDatagramConnectionStatsServerToRouter)(nil), "dota.CMsgSteamDatagramConnectionStatsServerToRouter")
	proto.RegisterType((*CMsgSteamDatagramP2PSessionRequestBody)(nil), "dota.CMsgSteamDatagramP2PSessionRequestBody")
	proto.RegisterType((*CMsgSteamDatagramP2PSessionRequest)(nil), "dota.CMsgSteamDatagramP2PSessionRequest")
	proto.RegisterType((*CMsgSteamDatagramP2PSessionEstablished)(nil), "dota.CMsgSteamDatagramP2PSessionEstablished")
	proto.RegisterType((*CMsgSteamDatagramConnectionStatsP2PClientToRouter)(nil), "dota.CMsgSteamDatagramConnectionStatsP2PClientToRouter")
	proto.RegisterType((*CMsgSteamDatagramConnectionStatsP2PRouterToClient)(nil), "dota.CMsgSteamDatagramConnectionStatsP2PRouterToClient")
	proto.RegisterType((*CMsgSteamDatagramP2PBadRouteRouterToClient)(nil), "dota.CMsgSteamDatagramP2PBadRouteRouterToClient")
	proto.RegisterType((*CMsgSteamDatagramP2PRoutes)(nil), "dota.CMsgSteamDatagramP2PRoutes")
	proto.RegisterType((*CMsgSteamDatagramP2PRoutes_RelayCluster)(nil), "dota.CMsgSteamDatagramP2PRoutes.RelayCluster")
	proto.RegisterType((*CMsgSteamDatagramP2PRoutes_Route)(nil), "dota.CMsgSteamDatagramP2PRoutes.Route")
	proto.RegisterType((*CMsgSteamDatagramSetSecondaryAddressRequest)(nil), "dota.CMsgSteamDatagramSetSecondaryAddressRequest")
	proto.RegisterType((*CMsgSteamDatagramSetSecondaryAddressResult)(nil), "dota.CMsgSteamDatagramSetSecondaryAddressResult")
}

func init() { proto.RegisterFile("steamdatagram_messages_sdr.proto", fileDescriptor_b47bf0c83d151fdc) }

var fileDescriptor_b47bf0c83d151fdc = []byte{
	// 4332 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x5b, 0xcb, 0x6f, 0xe3, 0x48,
	0x7a, 0x1f, 0x49, 0xd6, 0xeb, 0xd3, 0x8b, 0x2e, 0x3f, 0x5a, 0xad, 0x7e, 0xb9, 0x35, 0xed, 0x6e,
	0xf7, 0xcb, 0xdb, 0xad, 0x9d, 0xd9, 0xd9, 0xcc, 0x23, 0x0b, 0xb7, 0xad, 0xde, 0xf5, 0x6e, 0xdb,
	0xad, 0xa5, 0x3c, 0x93, 0x4c, 0x2e, 0x1c, 0x9a, 0x2c, 0xab, 0x09, 0x4b, 0x24, 0x87, 0x55, 0x72,
	0xaf, 0x6f, 0x01, 0x02, 0xe4, 0x1a, 0x04, 0x09, 0x72, 0x0e, 0x92, 0x53, 0x8e, 0x41, 0x2e, 0x39,
	0x05, 0x08, 0x16, 0xb9, 0xe4, 0x90, 0xcb, 0xde, 0xf7, 0x30, 0x41, 0x6e, 0xc9, 0x1f, 0x90, 0x4b,
	0x26, 0xa8, 0x07, 0x29, 0x92, 0x22, 0xf5, 0x98, 0x36, 0x82, 0xcc, 0xde, 0xc4, 0xef, 0x51, 0xac,
	0xfa, 0xea, 0xfb, 0x7e, 0xf5, 0x7d, 0xa5, 0x8f, 0xb0, 0x45, 0x28, 0xd6, 0x47, 0xa6, 0x4e, 0xf5,
	0x81, 0xa7, 0x8f, 0xb4, 0x11, 0x26, 0x44, 0x1f, 0x60, 0xa2, 0x11, 0xd3, 0xdb, 0x75, 0x3d, 0x87,
	0x3a, 0x68, 0xc5, 0x74, 0xa8, 0xde, 0x7a, 0xcc, 0xe5, 0x6c, 0x4c, 0xdf, 0x3a, 0xde, 0xb9, 0x65,
	0x0f, 0x88, 0x63, 0x9c, 0x63, 0x4a, 0x26, 0x0a, 0x06, 0xf6, 0x28, 0x11, 0x2a, 0xad, 0xed, 0x39,
	0xc2, 0x42, 0xac, 0xfd, 0x4d, 0x09, 0xb6, 0xf6, 0x8f, 0xc8, 0xa0, 0xcf, 0xa4, 0x0f, 0xe4, 0x14,
	0x54, 0x67, 0x4c, 0xb1, 0xd7, 0xb3, 0xec, 0x81, 0x8a, 0xdd, 0xe1, 0x25, 0x7a, 0x08, 0x8a, 0x31,
	0xb4, 0xb0, 0x4d, 0x35, 0x6a, 0x8d, 0x30, 0xa1, 0xfa, 0xc8, 0x6d, 0x66, 0xb6, 0x32, 0x3b, 0x45,
	0xb5, 0x21, 0xe8, 0x27, 0x3e, 0x19, 0xfd, 0x18, 0x36, 0x87, 0x3a, 0xc5, 0xb6, 0x71, 0xa9, 0xb1,
	0x05, 0x19, 0xd8, 0xa6, 0xd8, 0xd3, 0x2c, 0x93, 0x34, 0xb3, 0x5b, 0xb9, 0x9d, 0xe2, 0x8b, 0xac,
	0x92, 0x51, 0xd7, 0xa5, 0xc4, 0x41, 0x20, 0x70, 0x68, 0x12, 0xf4, 0x08, 0x1a, 0xbe, 0xa6, 0x6b,
	0xd9, 0x03, 0x6d, 0x44, 0x9a, 0xb9, 0xad, 0xdc, 0x4e, 0x8d, 0xab, 0xd4, 0x24, 0x8b, 0xcd, 0xe9,
	0x88, 0xa0, 0x7b, 0x50, 0xbf, 0x74, 0xc6, 0x9e, 0xe6, 0x8e, 0x4f, 0x87, 0x96, 0xa1, 0x59, 0x6e,
	0x73, 0x85, 0x4f, 0xa7, 0xca, 0xa8, 0x3d, 0x4e, 0x3c, 0x74, 0xd1, 0x0e, 0x28, 0x61, 0x29, 0xd7,
	0xf1, 0x68, 0xb3, 0xc2, 0xe5, 0xea, 0x13, 0xb9, 0x9e, 0xe3, 0x51, 0x74, 0x07, 0x2a, 0x04, 0x7b,
	0x17, 0xd8, 0xe3, 0x0b, 0x6c, 0xe6, 0xb9, 0x10, 0x08, 0x12, 0x5b, 0x1b, 0xba, 0x09, 0x65, 0xe3,
	0x8d, 0x3e, 0x1c, 0x62, 0x7b, 0x80, 0x9b, 0x85, 0xad, 0xcc, 0x4e, 0x41, 0x9d, 0x10, 0xd0, 0x07,
	0xb0, 0x49, 0xb0, 0xe1, 0xd8, 0x26, 0xd1, 0xc6, 0x36, 0xb5, 0x86, 0x1a, 0x79, 0x33, 0xa6, 0xa6,
	0xf3, 0xd6, 0x6e, 0x16, 0xb7, 0x32, 0x3b, 0x35, 0x75, 0x5d, 0x72, 0x3f, 0x67, 0xcc, 0xbe, 0xe4,
	0xa1, 0xf7, 0xa1, 0x26, 0xad, 0x6a, 0x38, 0xce, 0xb9, 0x85, 0x9b, 0x25, 0xb1, 0x06, 0x41, 0xdc,
	0xe7, 0x34, 0xb4, 0x07, 0xb7, 0x88, 0xe1, 0x78, 0xcc, 0x20, 0x2e, 0xb6, 0xf5, 0x21, 0xbd, 0xd4,
	0x3c, 0x3c, 0xd4, 0x2f, 0x35, 0x63, 0x38, 0x26, 0x14, 0x7b, 0xcd, 0x32, 0x7f, 0x43, 0x4b, 0x0a,
	0xf5, 0x84, 0x8c, 0xca, 0x44, 0xf6, 0x85, 0x04, 0x5a, 0x87, 0xfc, 0xd9, 0x50, 0x1f, 0x90, 0x66,
	0x95, 0x8b, 0x8a, 0x07, 0xf4, 0x15, 0x28, 0x1e, 0xdb, 0x66, 0x0d, 0xff, 0xca, 0xc0, 0x2e, 0xb5,
	0x1c, 0x9b, 0x34, 0x61, 0x2b, 0xb7, 0x53, 0xe9, 0x7c, 0xb8, 0xcb, 0xbc, 0x6d, 0x77, 0x9e, 0x57,
	0xec, 0xf2, 0xe7, 0xae, 0xaf, 0xad, 0x36, 0xbc, 0xc8, 0x33, 0x41, 0x5f, 0x40, 0x4d, 0x1f, 0x52,
	0x4d, 0x37, 0x4d, 0x0f, 0x13, 0x82, 0x49, 0xb3, 0xc6, 0x87, 0x7f, 0xbe, 0xe0, 0xf0, 0x7b, 0x43,
	0xba, 0x27, 0x54, 0xd5, 0xaa, 0x1e, 0xfc, 0xc6, 0xa4, 0x75, 0x06, 0xf5, 0xe8, 0xab, 0x99, 0x3b,
	0x30, 0x67, 0xd3, 0x02, 0x6f, 0x93, 0xde, 0x59, 0x65, 0xd4, 0x7d, 0xe9, 0x61, 0x13, 0x3b, 0x64,
	0xc3, 0x76, 0x68, 0x42, 0x51, 0x1a, 0xb6, 0x99, 0xe3, 0x74, 0xff, 0xb1, 0xf5, 0xdf, 0x19, 0x80,
	0xc9, 0x24, 0x10, 0x82, 0x15, 0xcb, 0xbd, 0xf8, 0x40, 0x0e, 0xcd, 0x7f, 0x33, 0x1a, 0xf7, 0x2a,
	0x31, 0x22, 0xff, 0x9d, 0x3e, 0x20, 0x1a, 0x40, 0x89, 0x07, 0x9d, 0xe1, 0x0c, 0xb9, 0xbf, 0xd6,
	0x3b, 0x1f, 0x2f, 0x6d, 0x8b, 0xdd, 0x9e, 0x1c, 0xe1, 0xe3, 0xc6, 0x01, 0x3e, 0xd3, 0xc7, 0x43,
	0xea, 0x13, 0xd4, 0x60, 0x70, 0x54, 0x87, 0xac, 0x65, 0x72, 0x2f, 0x2e, 0xab, 0x59, 0xcb, 0x6c,
	0x3f, 0x83, 0x92, 0x2f, 0x85, 0xd6, 0x20, 0xae, 0xa8, 0xbc, 0x87, 0x1a, 0x50, 0x39, 0x16, 0x48,
	0x71, 0x8c, 0x7f, 0x45, 0x95, 0x4c, 0xfb, 0x15, 0xe4, 0x5f, 0x72, 0xf3, 0x6c, 0xc1, 0xcd, 0x97,
	0xaf, 0xf6, 0x7e, 0xaa, 0x1d, 0xed, 0x7d, 0xf9, 0xa2, 0xab, 0x1d, 0xbd, 0x56, 0xbb, 0xda, 0xc1,
	0xde, 0xc9, 0x9e, 0xb6, 0xdf, 0x3d, 0x3e, 0xe9, 0xaa, 0x7d, 0x25, 0x83, 0xee, 0xc2, 0xad, 0xb8,
	0xc4, 0xde, 0xab, 0x13, 0x6d, 0xef, 0xe0, 0x40, 0xed, 0xf6, 0xfb, 0xdd, 0xbe, 0x92, 0x6d, 0x7f,
	0x93, 0x81, 0xfb, 0x53, 0x6b, 0xfc, 0xa9, 0x3e, 0xc2, 0x22, 0xc2, 0xc4, 0x3a, 0xbf, 0x1e, 0x63,
	0x42, 0x13, 0x22, 0x3b, 0xb3, 0x60, 0x64, 0xe7, 0x17, 0x89, 0xec, 0xec, 0xec, 0xc8, 0xce, 0xc5,
	0x23, 0xfb, 0xa1, 0x8c, 0x12, 0x2f, 0x84, 0x7c, 0x02, 0x6a, 0x84, 0xbb, 0x7b, 0x01, 0xf2, 0xb5,
	0x29, 0x3c, 0x9a, 0x5a, 0xe3, 0x2b, 0x3c, 0xd0, 0x8d, 0xcb, 0xf8, 0x4a, 0x25, 0xa4, 0x2e, 0x38,
	0x30, 0xba, 0x01, 0x65, 0x73, 0x3c, 0x1a, 0x5d, 0x6a, 0xae, 0x6e, 0x36, 0x0d, 0x3e, 0xc3, 0x12,
	0x27, 0xf4, 0x74, 0xb3, 0xfd, 0xdb, 0x2c, 0xdc, 0x9b, 0x6b, 0x5a, 0xf6, 0xc2, 0x4f, 0x61, 0x85,
	0x1d, 0x0f, 0xdc, 0x9c, 0x95, 0xce, 0x4e, 0x8a, 0xe3, 0xed, 0x63, 0x8f, 0x5a, 0x67, 0x96, 0xa1,
	0x53, 0xdc, 0xb7, 0x06, 0x36, 0x36, 0x55, 0xae, 0xc5, 0xcd, 0xc8, 0x9f, 0x39, 0xaa, 0x73, 0x33,
	0x56, 0x55, 0x10, 0x24, 0xa6, 0xcb, 0xcc, 0xc8, 0x9e, 0x74, 0x3a, 0xf6, 0x84, 0x19, 0xab, 0xea,
	0x84, 0xd0, 0xfa, 0xc7, 0x0c, 0x40, 0x7f, 0x22, 0xbc, 0x0d, 0xf5, 0xc0, 0xc4, 0xe1, 0x7d, 0xa9,
	0x05, 0xd4, 0x2b, 0xdd, 0x9a, 0x04, 0x7c, 0xc8, 0x27, 0xe3, 0x83, 0xee, 0xba, 0x96, 0xc9, 0xf1,
	0xbd, 0xa6, 0x8a, 0x87, 0xf6, 0x5f, 0x64, 0xe1, 0xc1, 0x94, 0x99, 0x8e, 0x9d, 0x3e, 0x26, 0x84,
	0xa1, 0x1e, 0x03, 0xda, 0x13, 0x67, 0x9f, 0x43, 0x36, 0x47, 0x74, 0xc7, 0xb6, 0xb1, 0xc1, 0x50,
	0x89, 0xbd, 0xa6, 0x28, 0x11, 0x3d, 0x20, 0x1e, 0x9a, 0x09, 0x1e, 0x9e, 0x5d, 0xd0, 0xc3, 0x0b,
	0x8b, 0x78, 0x78, 0x6e, 0xb6, 0x87, 0xaf, 0x2c, 0x7e, 0x76, 0xe5, 0xd3, 0xcf, 0xae, 0xf6, 0x6f,
	0x33, 0xb0, 0x3d, 0xd7, 0x2a, 0x3d, 0x8c, 0x3d, 0xf4, 0x21, 0x5c, 0x1b, 0xf2, 0x28, 0x90, 0xe7,
	0x16, 0x11, 0x22, 0x3e, 0x48, 0xd7, 0xd4, 0x75, 0xc1, 0xe6, 0x3a, 0x52, 0xff, 0xd0, 0x44, 0xcf,
	0x61, 0xe3, 0xcc, 0x73, 0x46, 0xd3, 0x4a, 0xc2, 0x58, 0x88, 0x31, 0x63, 0x2a, 0x4f, 0x80, 0x53,
	0xb5, 0xa4, 0x2d, 0x50, 0x18, 0x67, 0x3f, 0xbc, 0x0d, 0xb7, 0x00, 0xce, 0x87, 0x63, 0x73, 0x80,
	0x43, 0x61, 0x55, 0x16, 0x14, 0x16, 0x57, 0xaf, 0x61, 0x67, 0x3a, 0x38, 0xf8, 0x2e, 0xb3, 0x90,
	0xea, 0xeb, 0x23, 0x77, 0x88, 0x7d, 0xcc, 0x9a, 0xda, 0xf6, 0xcc, 0xf4, 0xb6, 0xb7, 0xff, 0x0e,
	0x12, 0x30, 0x70, 0x7a, 0x44, 0x16, 0xaa, 0x8b, 0x8c, 0x87, 0x1e, 0x40, 0xc3, 0xb9, 0xc0, 0x9e,
	0x67, 0x99, 0x58, 0xd3, 0x0d, 0x6a, 0x5d, 0x88, 0xbd, 0x2d, 0xa9, 0x75, 0x9f, 0xbc, 0xc7, 0xa9,
	0xe8, 0x80, 0x9d, 0x51, 0xae, 0xc8, 0xbf, 0x2a, 0x9d, 0x67, 0x69, 0x81, 0x9f, 0x34, 0x93, 0xdd,
	0xde, 0xeb, 0x9e, 0xca, 0xb5, 0xd1, 0x08, 0xd6, 0xe4, 0x36, 0x86, 0x22, 0x49, 0x64, 0x68, 0x95,
	0xce, 0x67, 0x4b, 0x0d, 0x2a, 0x40, 0xf1, 0x20, 0x08, 0x3d, 0x75, 0x75, 0x18, 0xa3, 0x90, 0xd6,
	0x37, 0x05, 0xc8, 0xf5, 0x5e, 0xf7, 0xd0, 0x06, 0x14, 0x5c, 0xc7, 0x9d, 0xd8, 0x20, 0xef, 0x3a,
	0xae, 0xf0, 0x0e, 0x53, 0x1c, 0x62, 0xda, 0x99, 0xe7, 0xd8, 0x34, 0xc8, 0x18, 0xc5, 0x41, 0x8c,
	0x24, 0xf3, 0x25, 0xe3, 0xc9, 0x94, 0xf1, 0x01, 0x34, 0x64, 0xca, 0xe4, 0x27, 0x52, 0xdc, 0x5e,
	0x35, 0xb5, 0x2e, 0xc9, 0x32, 0x75, 0x42, 0x5f, 0xc5, 0xd3, 0x96, 0x22, 0x5f, 0xe3, 0x27, 0xcb,
	0x1a, 0x2e, 0x35, 0x81, 0x41, 0x4f, 0x61, 0xcd, 0x9f, 0x3d, 0xee, 0xe0, 0x50, 0xb6, 0xcb, 0xa6,
	0xa3, 0x48, 0x56, 0xb7, 0x83, 0xe5, 0xcc, 0x1f, 0xc1, 0x6a, 0x58, 0x9c, 0x65, 0x7a, 0x58, 0x06,
	0x67, 0x63, 0x22, 0xdc, 0x67, 0x64, 0xf4, 0x11, 0x5c, 0x77, 0x3b, 0xae, 0x76, 0x61, 0xe9, 0x9a,
	0x8b, 0xb1, 0x27, 0xc3, 0x47, 0x9a, 0x50, 0xe0, 0xc7, 0xba, 0xdb, 0x71, 0xbf, 0xb0, 0x74, 0x16,
	0x9c, 0x3c, 0x80, 0x7a, 0xdc, 0xa2, 0xdb, 0xd0, 0x38, 0xc5, 0x84, 0x6a, 0xa6, 0x11, 0xcc, 0x47,
	0x64, 0x96, 0x55, 0x46, 0x3e, 0x30, 0xe4, 0x5c, 0xda, 0x50, 0xf3, 0xc5, 0xc4, 0x3c, 0x80, 0x0b,
	0x55, 0x84, 0x90, 0x98, 0xc3, 0x87, 0xd0, 0xf4, 0x65, 0xd8, 0x3c, 0x22, 0x53, 0x10, 0xe9, 0xf7,
	0x9a, 0x10, 0xff, 0xc2, 0xd2, 0x43, 0x33, 0x78, 0x0c, 0xfe, 0xb6, 0x85, 0x27, 0x51, 0x8d, 0xac,
	0x33, 0x98, 0xc7, 0x0e, 0x28, 0x21, 0x61, 0x31, 0x95, 0x9a, 0xd8, 0xce, 0x40, 0x54, 0xcc, 0xe6,
	0x13, 0xb8, 0x11, 0x92, 0x9c, 0x9a, 0x50, 0x9d, 0x4f, 0x68, 0x33, 0x50, 0x8a, 0xce, 0x69, 0x1b,
	0x1a, 0x34, 0x66, 0x95, 0x86, 0xb0, 0x0a, 0x8d, 0x59, 0x85, 0x46, 0xac, 0xa2, 0x08, 0xab, 0xd0,
	0xa8, 0x55, 0x68, 0x9a, 0x55, 0x56, 0x85, 0x55, 0xe8, 0xb4, 0x55, 0x5a, 0x7f, 0x14, 0xc9, 0x41,
	0x45, 0x62, 0x97, 0xf1, 0x13, 0x3b, 0xf6, 0xe2, 0x24, 0xff, 0xaf, 0x9c, 0x85, 0x1c, 0x3f, 0x3d,
	0xc1, 0xfd, 0xab, 0x0c, 0x28, 0xf1, 0x60, 0x5c, 0x30, 0x97, 0x9e, 0xb5, 0xc7, 0xd9, 0xf4, 0x3d,
	0x4e, 0xf0, 0xb2, 0xdc, 0xb4, 0x97, 0xb5, 0xff, 0xa4, 0x98, 0x8a, 0x95, 0xfd, 0xb7, 0x16, 0x35,
	0xde, 0x60, 0xb3, 0xe7, 0x59, 0x23, 0xdd, 0x5b, 0x10, 0x2b, 0xaf, 0x41, 0x91, 0x9f, 0x0c, 0xc1,
	0x59, 0x5b, 0x60, 0x8f, 0x87, 0x3c, 0xb5, 0xe2, 0x0c, 0x7e, 0xbc, 0x8a, 0x99, 0x94, 0x18, 0x81,
	0x1f, 0xac, 0xbb, 0xb0, 0x26, 0x8e, 0x20, 0x91, 0x65, 0xf8, 0x05, 0x97, 0xc8, 0x31, 0x56, 0xf9,
	0x01, 0xc4, 0x39, 0x7e, 0x9d, 0xb5, 0x03, 0xfc, 0x94, 0x91, 0x68, 0x3c, 0xa9, 0x24, 0x6b, 0x6a,
	0x9d, 0xd1, 0x05, 0x1c, 0xf3, 0x13, 0xf9, 0x23, 0x68, 0x86, 0x25, 0x5d, 0x5d, 0x94, 0xe6, 0x1e,
	0x36, 0x2e, 0x64, 0xf2, 0xb1, 0x31, 0xd1, 0xe8, 0x09, 0xae, 0x8a, 0x8d, 0x8b, 0x60, 0x4a, 0xa6,
	0xe7, 0xb8, 0x2e, 0x36, 0x35, 0x0f, 0xeb, 0xc4, 0x11, 0x55, 0x66, 0x59, 0x4c, 0xe9, 0x40, 0x70,
	0x54, 0xce, 0x60, 0xf0, 0x39, 0xd0, 0x5d, 0x66, 0xe6, 0x92, 0xc8, 0x69, 0x06, 0xba, 0x7b, 0x44,
	0x90, 0x29, 0x67, 0xfa, 0xf5, 0x58, 0x1f, 0x5a, 0xf4, 0x52, 0xb3, 0x9d, 0xb7, 0x3c, 0xda, 0x2b,
	0xa9, 0x05, 0x49, 0xa2, 0xf1, 0x45, 0x05, 0xe8, 0xfd, 0x52, 0x8c, 0x22, 0x56, 0x29, 0x1f, 0x8e,
	0x9d, 0xb7, 0xe8, 0x2b, 0xa8, 0x53, 0x27, 0xf2, 0x0e, 0x78, 0xe7, 0x77, 0x54, 0xa9, 0x13, 0x7a,
	0xc3, 0x19, 0xac, 0x46, 0xd6, 0x41, 0xdf, 0x60, 0x9b, 0x43, 0xcc, 0xbb, 0xbd, 0xa4, 0x11, 0x5a,
	0xc8, 0xc9, 0x1b, 0x6c, 0xa3, 0x53, 0x68, 0x84, 0x56, 0xc2, 0xdf, 0x52, 0x7d, 0xe7, 0xb7, 0xd4,
	0x82, 0xa5, 0xb0, 0x77, 0xb4, 0xfe, 0x2c, 0x03, 0xb5, 0x88, 0x00, 0xcb, 0x47, 0x05, 0x9a, 0x88,
	0x3c, 0x49, 0x3c, 0xb0, 0xbc, 0x65, 0x12, 0xf2, 0x32, 0xde, 0xcb, 0x41, 0xbc, 0x33, 0x8f, 0x3e,
	0xd5, 0x8d, 0x73, 0xc1, 0x95, 0x1e, 0xcd, 0x08, 0x9c, 0xf9, 0x04, 0x50, 0x34, 0xd7, 0xe3, 0x79,
	0x9e, 0x38, 0x06, 0x95, 0x70, 0x9e, 0x77, 0xc0, 0x72, 0xbc, 0x7f, 0xcd, 0xc1, 0x9d, 0xe9, 0x95,
	0x89, 0xb8, 0x5a, 0x26, 0xf5, 0x41, 0x77, 0xa1, 0x3a, 0xba, 0x8c, 0x65, 0xe9, 0x05, 0xb5, 0x32,
	0xba, 0x9c, 0x64, 0xe8, 0xb7, 0xa1, 0xc2, 0x01, 0x81, 0x81, 0xc3, 0x88, 0xc8, 0xb0, 0x29, 0x33,
	0x52, 0x97, 0xd0, 0x23, 0xc2, 0x86, 0xb8, 0xb0, 0x3c, 0x3a, 0xd6, 0x87, 0x22, 0x56, 0xc5, 0xd9,
	0x54, 0x91, 0x34, 0x1e, 0xae, 0x9f, 0xc1, 0x8d, 0x41, 0x50, 0xf7, 0x24, 0xe7, 0x8d, 0x35, 0xb5,
	0x39, 0x11, 0x89, 0x65, 0x8f, 0xfb, 0x90, 0x37, 0xbc, 0x4b, 0x57, 0x64, 0xd9, 0x95, 0xce, 0xd3,
	0x94, 0x9d, 0x95, 0x0a, 0xfb, 0x4c, 0xf4, 0xd0, 0x3e, 0x73, 0x64, 0x95, 0x24, 0x74, 0x83, 0x22,
	0xab, 0xf8, 0x9d, 0x8a, 0xac, 0x6d, 0xa8, 0x33, 0xac, 0x61, 0x76, 0x20, 0xd8, 0xf0, 0x30, 0xe5,
	0x01, 0x53, 0x50, 0x6b, 0x92, 0xda, 0xe7, 0x44, 0xf4, 0x43, 0xd8, 0x94, 0xa9, 0x98, 0xbc, 0x3e,
	0xe2, 0x37, 0x7d, 0x6c, 0x8d, 0xa2, 0x46, 0x92, 0x89, 0x9a, 0xf4, 0x41, 0xc6, 0x3b, 0x34, 0xdb,
	0x7f, 0x9e, 0x83, 0x56, 0xda, 0x66, 0xbe, 0xfe, 0x05, 0x7a, 0x06, 0xeb, 0xc1, 0x5d, 0xd4, 0xf4,
	0x76, 0x22, 0xff, 0x4a, 0x2a, 0xb4, 0xa9, 0xcf, 0x60, 0x5d, 0x9a, 0x3a, 0x29, 0xdf, 0x46, 0x82,
	0x17, 0xd1, 0xd8, 0x96, 0x85, 0xcf, 0xc4, 0x11, 0xc4, 0x7c, 0x6b, 0x8c, 0x3a, 0x71, 0x85, 0xfb,
	0xd0, 0x30, 0xf9, 0xe6, 0x31, 0x39, 0x6d, 0x4c, 0xb0, 0x21, 0x3d, 0xb4, 0xc6, 0xc9, 0x4c, 0xf0,
	0x73, 0x82, 0x8d, 0x2b, 0xdb, 0xef, 0xfc, 0x15, 0xec, 0x77, 0xe1, 0xbb, 0xec, 0x77, 0xfb, 0xaf,
	0xf3, 0xa1, 0xd2, 0xf2, 0x38, 0xb8, 0xa9, 0xed, 0x75, 0x7a, 0xfd, 0x03, 0x55, 0x95, 0x7b, 0x3e,
	0x1e, 0xf1, 0x73, 0xee, 0x2e, 0x54, 0x2d, 0xdb, 0xa2, 0x16, 0x0b, 0x00, 0x16, 0xda, 0x02, 0x13,
	0x2a, 0x92, 0xc6, 0xa3, 0xfb, 0x23, 0x68, 0x86, 0x45, 0x64, 0x66, 0x3c, 0x74, 0x0c, 0x7d, 0x28,
	0xad, 0xb1, 0x11, 0x12, 0xe7, 0xb9, 0xf1, 0x2b, 0xc6, 0x44, 0xbf, 0x07, 0xd7, 0x13, 0x14, 0x3d,
	0x3c, 0x72, 0x28, 0x96, 0x18, 0xb2, 0x19, 0xd7, 0x54, 0x39, 0x97, 0xc5, 0xbf, 0xaf, 0x2a, 0xb0,
	0x4a, 0x6c, 0x95, 0x3f, 0x57, 0x91, 0xfa, 0x3c, 0x82, 0xd5, 0x60, 0x7c, 0xc7, 0x95, 0x33, 0x12,
	0x15, 0x78, 0xc3, 0x1f, 0xd7, 0x71, 0xc5, 0x5c, 0x9e, 0x00, 0x0a, 0xcb, 0xca, 0x49, 0x88, 0xcc,
	0x55, 0x99, 0x08, 0xcb, 0xd7, 0x33, 0xb4, 0x63, 0x90, 0xc1, 0x4d, 0x52, 0x91, 0x68, 0x87, 0x89,
	0x80, 0xc2, 0xe7, 0xb0, 0x11, 0x30, 0x23, 0xc6, 0x10, 0x39, 0x25, 0xf2, 0x05, 0x43, 0x96, 0xf8,
	0x21, 0x6c, 0xc6, 0x55, 0xe4, 0x0c, 0x44, 0x72, 0xb9, 0x16, 0xd1, 0x91, 0x93, 0xb8, 0x05, 0xc0,
	0x95, 0x84, 0x01, 0xea, 0x02, 0xba, 0x18, 0x45, 0xac, 0xfe, 0x1e, 0xd4, 0xc5, 0x98, 0xc1, 0xd2,
	0x1b, 0x02, 0x23, 0xf9, 0x58, 0xfe, 0xba, 0xef, 0xcb, 0xcc, 0x28, 0xb4, 0x68, 0x45, 0xdc, 0x89,
	0x48, 0xb1, 0xd8, 0x8a, 0x79, 0x76, 0xb1, 0x3a, 0x59, 0x31, 0xcf, 0x2b, 0xb6, 0xa1, 0x6e, 0xe3,
	0x81, 0x43, 0x2d, 0x9d, 0x47, 0xe3, 0x88, 0xc8, 0xfb, 0xe7, 0x5a, 0x88, 0x7a, 0x44, 0xd0, 0x43,
	0x50, 0x08, 0x1e, 0x62, 0x83, 0x62, 0x53, 0x93, 0xa8, 0x2f, 0xf3, 0x83, 0x86, 0x4f, 0xef, 0x0b,
	0x72, 0xfb, 0x6f, 0x33, 0xd0, 0x9e, 0xf2, 0xe7, 0x5e, 0xa7, 0x17, 0xf3, 0xce, 0x4f, 0x21, 0x67,
	0x19, 0xe2, 0x16, 0xa7, 0xd2, 0x79, 0x14, 0x0b, 0x83, 0x89, 0x67, 0x1f, 0xee, 0x77, 0x65, 0x3c,
	0x49, 0x45, 0x95, 0xa9, 0xa1, 0x9f, 0x40, 0x8e, 0x98, 0x1e, 0xf7, 0xb4, 0xe9, 0x40, 0x9c, 0x1d,
	0x17, 0x2a, 0xd3, 0x6c, 0xff, 0x4b, 0x19, 0xee, 0xa6, 0x81, 0x1b, 0x0b, 0xde, 0xa1, 0x43, 0xb0,
	0xc9, 0xf2, 0x33, 0xea, 0x24, 0xa2, 0x55, 0x9d, 0x3a, 0x11, 0xa4, 0x4a, 0xbe, 0x49, 0x28, 0xa5,
	0xdc, 0x24, 0x3c, 0x83, 0x75, 0x91, 0x5d, 0x9a, 0xd8, 0xa6, 0x2c, 0x41, 0x20, 0xd4, 0x63, 0xfe,
	0xd8, 0xe0, 0x59, 0x19, 0x1f, 0xe9, 0x50, 0xb2, 0xfa, 0x9c, 0x83, 0x86, 0x70, 0x43, 0x22, 0x78,
	0x54, 0xf1, 0xd4, 0xb2, 0x75, 0xef, 0x92, 0xfb, 0xda, 0x2c, 0x43, 0xf8, 0xa3, 0x89, 0xdc, 0xfd,
	0x05, 0x57, 0x52, 0x9b, 0x62, 0xc4, 0x97, 0xa1, 0xb7, 0x09, 0x0e, 0xfa, 0x01, 0xac, 0x87, 0xdf,
	0x16, 0x3b, 0x2d, 0x56, 0x27, 0x7a, 0xf2, 0xac, 0x40, 0x3f, 0x87, 0xb6, 0x54, 0x98, 0x0f, 0xb0,
	0xb7, 0x87, 0xb1, 0x2b, 0xce, 0x18, 0xcc, 0x3e, 0x85, 0x35, 0xea, 0x4c, 0x2b, 0x97, 0x85, 0x2d,
	0xa9, 0xb3, 0xe8, 0xb5, 0x0f, 0xa4, 0x5e, 0xfb, 0xfc, 0x1c, 0xda, 0x67, 0x8e, 0xf7, 0x56, 0xf7,
	0x4c, 0x8d, 0xea, 0xde, 0x00, 0x53, 0xa9, 0xec, 0x1f, 0xa5, 0xd4, 0x39, 0x97, 0x59, 0x61, 0x55,
	0xbd, 0x2d, 0x25, 0x4f, 0xb8, 0x20, 0x1f, 0x48, 0xfa, 0xd3, 0x09, 0x93, 0x42, 0x3f, 0x82, 0x6b,
	0x53, 0x63, 0x5d, 0x58, 0xec, 0x45, 0x12, 0x34, 0x36, 0x62, 0x03, 0x08, 0x26, 0xfa, 0x03, 0x00,
	0xf1, 0xd2, 0x91, 0x63, 0x62, 0x79, 0xb7, 0xdf, 0x49, 0x3b, 0x0d, 0x62, 0x7e, 0xb9, 0xdb, 0xe5,
	0xf3, 0x38, 0x72, 0x4c, 0xfc, 0xf1, 0xca, 0xb1, 0x63, 0x63, 0xb5, 0xec, 0xf9, 0x04, 0x96, 0x03,
	0x9a, 0xf8, 0x74, 0x3c, 0x90, 0x97, 0xf9, 0xe2, 0x01, 0xdd, 0x81, 0x8a, 0xc8, 0xfc, 0x35, 0x83,
	0xbd, 0x4f, 0x94, 0x0c, 0x20, 0x48, 0xfb, 0x4c, 0x6d, 0x3a, 0x93, 0xa8, 0x27, 0x65, 0x12, 0xbb,
	0xb0, 0x66, 0x3b, 0x54, 0x73, 0x45, 0x7e, 0xea, 0x9b, 0x9b, 0x03, 0x4f, 0x49, 0x5d, 0xb5, 0x1d,
	0x2a, 0x33, 0x57, 0x69, 0x6c, 0xd4, 0x81, 0x8d, 0xb0, 0x3c, 0xf5, 0x74, 0x9b, 0xf0, 0x74, 0x6c,
	0x8d, 0x6b, 0xac, 0x4d, 0x34, 0x4e, 0x7c, 0x16, 0x3a, 0x82, 0x9a, 0x9f, 0x38, 0xf3, 0x65, 0x71,
	0xd0, 0x9a, 0x71, 0x56, 0x06, 0xd6, 0x09, 0x52, 0x7e, 0xa9, 0xce, 0xad, 0x84, 0x0e, 0xa1, 0xe2,
	0x0f, 0x87, 0x3b, 0xb8, 0x89, 0x96, 0x1c, 0x0c, 0xa4, 0x72, 0xb7, 0x83, 0xd1, 0x1f, 0xc2, 0x9a,
	0xdb, 0x71, 0x03, 0x3f, 0x21, 0x02, 0x51, 0x9a, 0x1b, 0x33, 0x87, 0x9c, 0xc2, 0x3e, 0x75, 0xd5,
	0xed, 0xb8, 0x51, 0x52, 0xfb, 0x47, 0x00, 0x93, 0x4d, 0x45, 0x25, 0xe0, 0xdb, 0xaa, 0xbc, 0x87,
	0xaa, 0x50, 0xea, 0xda, 0xe6, 0x89, 0xd3, 0xb5, 0x4d, 0x25, 0x83, 0x14, 0xa8, 0x0a, 0x0f, 0x78,
	0x71, 0xd9, 0xc3, 0xd8, 0x53, 0xb2, 0xed, 0x5f, 0x17, 0xe0, 0x56, 0xc2, 0xad, 0xea, 0x64, 0x19,
	0x89, 0x18, 0x96, 0x5f, 0x02, 0xc3, 0x0a, 0x29, 0x18, 0xf6, 0xfd, 0x0a, 0xf9, 0x34, 0xc4, 0x2d,
	0xa6, 0x22, 0xee, 0xd2, 0x18, 0x78, 0x13, 0x00, 0xdb, 0xa6, 0x46, 0x1d, 0x0d, 0xdb, 0xa6, 0xbc,
	0x59, 0x2d, 0x61, 0xb9, 0x79, 0x69, 0x81, 0x53, 0x5d, 0x3a, 0x70, 0x1a, 0x4b, 0x04, 0x4e, 0xed,
	0x2a, 0x03, 0xa7, 0x7e, 0xf5, 0x81, 0xa3, 0xbc, 0x73, 0xe0, 0x24, 0xe0, 0x56, 0x25, 0x09, 0xb7,
	0x6e, 0x86, 0xff, 0x11, 0xfb, 0x56, 0x9c, 0xe1, 0x93, 0xbf, 0xc4, 0xbe, 0xcd, 0xc2, 0xc3, 0x19,
	0x7f, 0x89, 0x05, 0xff, 0x51, 0x88, 0x0a, 0x76, 0x13, 0x0a, 0xd4, 0x32, 0xce, 0xb1, 0xf8, 0x67,
	0xac, 0xaa, 0xca, 0xa7, 0x84, 0xff, 0xa8, 0x72, 0x73, 0xff, 0xa3, 0x9a, 0xfa, 0x73, 0x25, 0xad,
	0xac, 0xca, 0x2f, 0x5d, 0x56, 0x95, 0x52, 0xcb, 0xaa, 0x0f, 0x60, 0x53, 0x76, 0x79, 0x30, 0x95,
	0x33, 0x6b, 0xa0, 0x5d, 0x60, 0x8f, 0xbb, 0xa3, 0x38, 0x17, 0xd6, 0x25, 0x77, 0x9f, 0x33, 0xbf,
	0x10, 0x3c, 0x96, 0x03, 0xfa, 0x7f, 0x17, 0x07, 0xf2, 0x22, 0x59, 0x6c, 0xf8, 0x74, 0x5f, 0xb4,
	0x05, 0x25, 0x77, 0xa8, 0xd3, 0x33, 0xc7, 0x1b, 0xf1, 0x20, 0x2e, 0xab, 0xc1, 0x33, 0x3b, 0x9f,
	0x4e, 0xc7, 0xd6, 0x50, 0x04, 0x6b, 0x59, 0x15, 0x0f, 0xed, 0xff, 0xc8, 0xc2, 0xd3, 0xf9, 0x3b,
	0xd0, 0x25, 0x54, 0x3f, 0x1d, 0x5a, 0xe4, 0x0d, 0x36, 0x17, 0xbb, 0x47, 0xf8, 0x14, 0x5a, 0x21,
	0x74, 0x8a, 0x07, 0x7f, 0x96, 0xcf, 0x20, 0x54, 0xf0, 0xc5, 0x20, 0x20, 0xfd, 0x8f, 0xae, 0x95,
	0x19, 0x4d, 0x1a, 0xb7, 0xa1, 0x42, 0xf0, 0xd7, 0x9a, 0x3d, 0x1e, 0x69, 0x5e, 0xc7, 0x90, 0x26,
	0x2d, 0x13, 0xfc, 0xf5, 0xf1, 0x78, 0xa4, 0x76, 0x0c, 0xf4, 0x13, 0xb8, 0x29, 0x5c, 0x51, 0xc2,
	0x4b, 0x3c, 0x97, 0x2b, 0x72, 0xa7, 0xba, 0xce, 0x65, 0x44, 0xbe, 0x16, 0xcb, 0xce, 0x3e, 0x86,
	0xeb, 0xd3, 0xc8, 0xcb, 0xf1, 0x29, 0x80, 0xa7, 0x6b, 0x71, 0xc0, 0xed, 0x0b, 0x76, 0xfb, 0x7f,
	0x72, 0x30, 0x2b, 0x76, 0xfb, 0x54, 0xa7, 0x44, 0x5c, 0x03, 0x9c, 0x38, 0xe2, 0x6e, 0x69, 0x1a,
	0x55, 0x32, 0x57, 0x89, 0x2a, 0xd9, 0x77, 0x40, 0x95, 0x1b, 0x50, 0xd6, 0x8d, 0x73, 0x39, 0xab,
	0x95, 0xad, 0x1c, 0x8b, 0x69, 0xdd, 0x38, 0x17, 0xef, 0xb9, 0x07, 0x75, 0x69, 0x25, 0x26, 0xc3,
	0x5e, 0x95, 0xe7, 0x12, 0x55, 0x41, 0xdd, 0x33, 0xce, 0xd9, 0x10, 0x41, 0x87, 0x47, 0x21, 0xdc,
	0xe1, 0x91, 0x16, 0x84, 0xa5, 0xd4, 0x20, 0x0c, 0x6d, 0xba, 0xd1, 0xf1, 0x5b, 0x6c, 0xe4, 0xa6,
	0xef, 0x77, 0xbc, 0x30, 0x9f, 0x4d, 0x05, 0xc2, 0xfc, 0x6e, 0x07, 0xb7, 0x07, 0x7e, 0xf7, 0xc4,
	0x06, 0xac, 0xee, 0xed, 0xff, 0x42, 0x53, 0xbb, 0xbf, 0xfc, 0xbc, 0xdb, 0x3f, 0xd1, 0xd4, 0xee,
	0xab, 0xbd, 0x2f, 0x95, 0x0c, 0x5a, 0x83, 0x46, 0x98, 0xdc, 0xed, 0x74, 0x95, 0x2c, 0xba, 0x0e,
	0x1b, 0x61, 0xe2, 0xe1, 0xd1, 0x51, 0xf7, 0xe0, 0x70, 0xef, 0xa4, 0xab, 0xac, 0xa0, 0x6b, 0xb0,
	0x76, 0xfc, 0xfa, 0x44, 0xeb, 0xa9, 0x87, 0x47, 0x7b, 0xea, 0x97, 0x5a, 0xbf, 0xdb, 0xef, 0x1f,
	0xbe, 0x3e, 0x56, 0x4a, 0xed, 0x7f, 0xca, 0xcf, 0x77, 0x00, 0xb1, 0xf1, 0xc1, 0x7f, 0xd4, 0xff,
	0x7f, 0x1d, 0x20, 0x3d, 0x40, 0x0b, 0x33, 0x02, 0xf4, 0x09, 0xa0, 0x91, 0x35, 0xf0, 0x74, 0x8a,
	0x35, 0x4f, 0x40, 0xba, 0x66, 0xb9, 0x32, 0x77, 0x50, 0x24, 0x47, 0x62, 0xfd, 0xa1, 0xcb, 0x7c,
	0x21, 0x2e, 0x1d, 0xb4, 0x85, 0xd5, 0x54, 0x14, 0x95, 0xe7, 0xd7, 0x8a, 0x73, 0x1b, 0xb0, 0xaa,
	0x73, 0x1b, 0xb0, 0x22, 0x9e, 0x5d, 0x9b, 0xeb, 0xd9, 0xf5, 0x59, 0x9e, 0xdd, 0x58, 0xc4, 0xb3,
	0x8b, 0x8b, 0x78, 0x36, 0x83, 0xb3, 0x52, 0x1c, 0xce, 0x62, 0x9e, 0x5d, 0x8e, 0x7b, 0xf6, 0xf1,
	0xd5, 0x7a, 0x76, 0xfb, 0x37, 0x4b, 0x38, 0x70, 0x9f, 0x63, 0xdf, 0xf7, 0x05, 0xc1, 0x60, 0xee,
	0x3e, 0x57, 0x66, 0xed, 0x73, 0xa4, 0x57, 0x2f, 0xb2, 0x6b, 0xc1, 0xed, 0xb8, 0xbf, 0x6b, 0x24,
	0xbe, 0x6b, 0x85, 0xd8, 0xae, 0xb1, 0xc8, 0x92, 0x7e, 0x92, 0x7c, 0x47, 0x21, 0xbd, 0x28, 0x76,
	0x60, 0xa6, 0xdf, 0x33, 0x17, 0x53, 0xef, 0x99, 0x59, 0x81, 0x32, 0x95, 0xc8, 0x0b, 0x2f, 0xab,
	0x7b, 0x53, 0x49, 0x7c, 0xa2, 0xf3, 0x96, 0x97, 0xce, 0x8d, 0x6a, 0xb3, 0xae, 0x9c, 0x17, 0xa8,
	0x83, 0xaf, 0xdc, 0xab, 0xff, 0x79, 0x65, 0xbe, 0x57, 0x0b, 0x6f, 0xfe, 0xbe, 0x9d, 0xcb, 0xa5,
	0xb9, 0x5e, 0x5d, 0x9e, 0xe5, 0xd5, 0x90, 0xe2, 0xd5, 0xa4, 0xe3, 0xc9, 0x8b, 0x66, 0xe9, 0xb5,
	0xfd, 0xe9, 0x53, 0x76, 0x25, 0xee, 0xd5, 0x49, 0xae, 0x56, 0x58, 0xca, 0xd5, 0x8a, 0x4b, 0xbb,
	0x5a, 0x25, 0xcd, 0xd5, 0xae, 0xdc, 0x87, 0xfe, 0x2b, 0x97, 0xf0, 0x1f, 0x78, 0xaf, 0xd3, 0x8b,
	0x96, 0x2f, 0x2f, 0x1c, 0xf3, 0x32, 0xa1, 0x54, 0xc9, 0xcc, 0x2d, 0x55, 0xb2, 0x8b, 0x96, 0x2a,
	0xb9, 0x54, 0x1b, 0x4d, 0x6a, 0x6a, 0xde, 0x6a, 0x12, 0xa0, 0xc3, 0x4a, 0xb8, 0xa6, 0xee, 0x61,
	0x99, 0xae, 0x0a, 0xa3, 0x72, 0xc9, 0x38, 0x08, 0x55, 0x44, 0xd9, 0xce, 0x78, 0x31, 0x08, 0x7a,
	0x02, 0x9c, 0x9a, 0x58, 0x3d, 0x29, 0x8c, 0x13, 0x99, 0x50, 0x52, 0x4d, 0x53, 0x4a, 0xae, 0x69,
	0xd2, 0x8b, 0xa6, 0xf2, 0x8c, 0xa2, 0x69, 0x07, 0x94, 0xb1, 0x3d, 0x26, 0xd8, 0x0c, 0x35, 0xef,
	0x89, 0x4c, 0xa3, 0x2e, 0xe8, 0x41, 0xfb, 0x5e, 0xb8, 0x66, 0xaa, 0xa6, 0xd5, 0x4c, 0xb5, 0x70,
	0xcd, 0xf4, 0x97, 0x29, 0x37, 0xed, 0xb1, 0x72, 0xf5, 0xdd, 0xda, 0x38, 0x11, 0xac, 0x9c, 0x3a,
	0xe6, 0xa5, 0xec, 0xdf, 0xe4, 0xbf, 0x67, 0x77, 0x6e, 0xb6, 0x7f, 0x93, 0x99, 0xe9, 0x86, 0x4b,
	0xd7, 0x70, 0xe9, 0x49, 0x5e, 0x6e, 0x46, 0x92, 0xb7, 0x0b, 0x6b, 0x49, 0x97, 0xba, 0x2b, 0x7c,
	0xb6, 0xab, 0xde, 0xd4, 0x3d, 0x6e, 0x2c, 0xcd, 0x89, 0x1d, 0x98, 0x46, 0xfb, 0xd7, 0x05, 0x78,
	0x3e, 0x0f, 0xa0, 0x7b, 0x9d, 0xde, 0xf7, 0xa6, 0x76, 0x4a, 0xb9, 0x91, 0xa9, 0xbf, 0xfb, 0x8d,
	0x4c, 0x04, 0xfd, 0x73, 0x73, 0xd1, 0x7f, 0x65, 0x16, 0xfa, 0xe7, 0xc3, 0xe8, 0xbf, 0xd8, 0xb5,
	0x7d, 0xe1, 0x5d, 0xaf, 0xed, 0x8b, 0xb3, 0xae, 0xed, 0x37, 0xa1, 0xc0, 0x9b, 0x7b, 0xc4, 0xdf,
	0x5f, 0x55, 0x55, 0x3e, 0xa1, 0x8f, 0xa0, 0xc9, 0x7b, 0x28, 0x78, 0x07, 0x1d, 0x27, 0x4d, 0x06,
	0x14, 0xf8, 0xb0, 0xa1, 0x1b, 0xe7, 0xbc, 0x83, 0x8e, 0x73, 0x83, 0x01, 0xa7, 0x42, 0x00, 0x12,
	0x42, 0x20, 0x56, 0x5d, 0x56, 0xe6, 0x54, 0x97, 0xd5, 0x78, 0x0e, 0xfe, 0xa7, 0x99, 0xff, 0xa3,
	0xf2, 0x12, 0xdd, 0x82, 0xeb, 0x61, 0xc6, 0x89, 0xba, 0x77, 0xdc, 0xef, 0xbd, 0x56, 0xc5, 0x90,
	0x4a, 0xfb, 0xdf, 0x17, 0x8b, 0xa2, 0xdf, 0x81, 0x02, 0x34, 0xb7, 0x74, 0x01, 0xba, 0xb2, 0x64,
	0x01, 0x9a, 0xff, 0xee, 0x05, 0x68, 0x61, 0xb9, 0x02, 0xb4, 0x38, 0x37, 0x88, 0x4b, 0xb3, 0x82,
	0xb8, 0x1c, 0x0e, 0xe2, 0xcf, 0xe0, 0x06, 0x53, 0x4a, 0x0b, 0x3e, 0x91, 0xee, 0xb1, 0x58, 0x7a,
	0x39, 0x27, 0xfe, 0x2a, 0x0b, 0xc7, 0x5f, 0x75, 0xa9, 0xf8, 0xab, 0xcd, 0x8e, 0x3f, 0x76, 0x38,
	0xd4, 0xe7, 0xd4, 0xc0, 0x8d, 0x78, 0xfc, 0x8d, 0xae, 0x38, 0xfc, 0xe6, 0x44, 0xd9, 0x7f, 0x66,
	0x12, 0x3e, 0x2c, 0xe9, 0x75, 0x7a, 0x2f, 0x74, 0x93, 0xaf, 0x3e, 0x16, 0x5e, 0x0b, 0x9d, 0xc2,
	0x9f, 0x40, 0xeb, 0x4c, 0xb7, 0x86, 0xbc, 0x83, 0x70, 0x1a, 0x74, 0x45, 0x76, 0x70, 0x4d, 0x48,
	0x4c, 0xa3, 0xed, 0x9c, 0x4d, 0xcf, 0xcd, 0xd9, 0xf4, 0x39, 0x8d, 0xf7, 0xff, 0x96, 0xd4, 0xa8,
	0xe4, 0xa3, 0x08, 0x41, 0x27, 0x50, 0x8f, 0x78, 0x3f, 0x69, 0x66, 0x78, 0x7b, 0xf6, 0xd3, 0xd9,
	0x87, 0x1c, 0x26, 0xbb, 0xe1, 0x88, 0x50, 0x6b, 0x5e, 0xe8, 0x89, 0xa0, 0xdf, 0x0f, 0x1c, 0x51,
	0x74, 0xc9, 0xdf, 0x9f, 0x3f, 0x1a, 0x37, 0xbd, 0xef, 0xb0, 0x2d, 0x28, 0xc5, 0xd6, 0x1f, 0x3c,
	0xb7, 0xfe, 0x26, 0x03, 0xd5, 0x48, 0x34, 0xa6, 0xf4, 0xb4, 0x5f, 0x83, 0x62, 0xb4, 0x8b, 0xb7,
	0xe0, 0x8a, 0x06, 0xde, 0xf7, 0xa1, 0xc6, 0x5b, 0x4b, 0xb4, 0x68, 0x1b, 0x6f, 0x95, 0x13, 0xfd,
	0xae, 0xf5, 0xcf, 0xe0, 0x86, 0x5f, 0x06, 0xa5, 0x67, 0x4a, 0x4d, 0x12, 0xfa, 0x3e, 0x23, 0xbc,
	0xa7, 0xad, 0x2f, 0x21, 0xcf, 0x57, 0x84, 0x5a, 0x50, 0x1e, 0x05, 0x9d, 0xbc, 0x62, 0x7e, 0xc5,
	0x91, 0xec, 0xde, 0xbd, 0x0d, 0x15, 0xf1, 0x4d, 0x4a, 0xb8, 0xcf, 0xb7, 0xcc, 0x3f, 0x47, 0xe1,
	0xfc, 0xa0, 0x61, 0x31, 0x17, 0x6a, 0x58, 0x6c, 0xff, 0x7d, 0x16, 0x1e, 0x27, 0xb4, 0x55, 0x51,
	0xd1, 0x62, 0xa2, 0x7b, 0x97, 0x7e, 0x93, 0xfc, 0xe4, 0x0b, 0x30, 0x59, 0x88, 0x8c, 0x74, 0xcb,
	0x0e, 0x7d, 0x01, 0x26, 0xa8, 0x47, 0xba, 0x65, 0x8b, 0xef, 0x63, 0xc2, 0x52, 0xc1, 0x57, 0x78,
	0x45, 0xb5, 0x3e, 0x91, 0xe3, 0xf8, 0xb9, 0x7c, 0x61, 0xc3, 0x3f, 0x15, 0x88, 0x5c, 0x97, 0x70,
	0xfb, 0x95, 0xfd, 0xa1, 0xfd, 0x22, 0x05, 0xfd, 0x18, 0x9a, 0x3e, 0x88, 0x13, 0x6c, 0x9b, 0x9a,
	0x39, 0x76, 0x87, 0x2c, 0xe9, 0x66, 0x6e, 0x90, 0xe7, 0xff, 0xec, 0x6d, 0x4a, 0x7e, 0x1f, 0xdb,
	0xe6, 0xc1, 0x84, 0x9b, 0x10, 0x04, 0xd5, 0x70, 0x10, 0x7c, 0x95, 0x10, 0xf2, 0x89, 0x26, 0x23,
	0xe3, 0x21, 0xff, 0xe2, 0x90, 0x8c, 0x0d, 0x03, 0x13, 0xc2, 0x4d, 0x55, 0x52, 0xfd, 0x47, 0xc6,
	0x91, 0xdf, 0xfb, 0xca, 0xbf, 0x47, 0xfc, 0xc7, 0x47, 0xff, 0x50, 0x81, 0xb5, 0x6e, 0x64, 0xfc,
	0x23, 0x32, 0x38, 0x3c, 0x40, 0x77, 0xe0, 0xc6, 0xb9, 0x36, 0xc5, 0xd0, 0x0e, 0xed, 0x0b, 0x7d,
	0x68, 0x99, 0xca, 0x7b, 0xe8, 0x21, 0x6c, 0x27, 0x09, 0x84, 0xbf, 0x58, 0xe4, 0x2b, 0x56, 0x32,
	0xe8, 0x01, 0xbc, 0x3f, 0x4f, 0xd4, 0x1d, 0x5e, 0x2a, 0x59, 0xf4, 0x14, 0x1e, 0x26, 0x09, 0x26,
	0x7e, 0x21, 0xa8, 0xe4, 0xd0, 0x73, 0x78, 0x9a, 0x24, 0x9e, 0xfa, 0xb1, 0x9d, 0xb2, 0x82, 0x9e,
	0xc1, 0x93, 0xd9, 0x6f, 0x88, 0x96, 0x59, 0x4a, 0x1e, 0x7d, 0x00, 0xcf, 0x16, 0xd2, 0x08, 0x55,
	0x40, 0x4a, 0x01, 0xdd, 0x85, 0x5b, 0x49, 0x5a, 0xc1, 0x97, 0x51, 0x4a, 0x11, 0xb5, 0xe1, 0x76,
	0x92, 0xc8, 0x81, 0xa5, 0x0f, 0x6c, 0x87, 0x50, 0xcb, 0x50, 0x4a, 0xe8, 0x11, 0xdc, 0x4f, 0x94,
	0xd1, 0xa9, 0x1e, 0xad, 0x49, 0x94, 0xf2, 0x2c, 0xd9, 0xe8, 0xcd, 0xa9, 0x02, 0xb3, 0x64, 0xa3,
	0xf7, 0x51, 0x4a, 0x65, 0x91, 0x71, 0xc5, 0x5c, 0x94, 0x2a, 0x3b, 0xc2, 0x92, 0x64, 0x79, 0x06,
	0xa8, 0xd4, 0xd0, 0x0f, 0xe0, 0x71, 0x12, 0x3b, 0xe5, 0x7b, 0x2a, 0xa5, 0x9e, 0xe6, 0x10, 0x89,
	0xdf, 0xda, 0x28, 0x0d, 0xf4, 0x21, 0x3c, 0x4f, 0x17, 0xf7, 0x97, 0x14, 0xeb, 0xc6, 0x56, 0x14,
	0xf4, 0x3e, 0xdc, 0x49, 0xf4, 0x4f, 0x86, 0x8e, 0x3f, 0xc3, 0xfa, 0x90, 0xbe, 0x51, 0x56, 0xd1,
	0x7d, 0x68, 0x27, 0x8e, 0x1d, 0xe9, 0x83, 0x56, 0x50, 0xda, 0xce, 0x07, 0x2d, 0xb6, 0xca, 0x1a,
	0xda, 0x81, 0x7b, 0x33, 0x44, 0x82, 0x86, 0x20, 0x65, 0x1d, 0xdd, 0x83, 0xad, 0x64, 0x37, 0x9a,
	0xc8, 0x2a, 0x1b, 0x69, 0x66, 0x95, 0x5f, 0xdf, 0x89, 0xcf, 0x2e, 0x42, 0x81, 0xb3, 0x99, 0x66,
	0xd6, 0x69, 0x05, 0x66, 0xd6, 0x6b, 0x69, 0xa1, 0x3e, 0x75, 0x29, 0xa1, 0x34, 0xd3, 0x46, 0x4e,
	0xbc, 0x28, 0x50, 0xae, 0xa7, 0x19, 0x95, 0x89, 0x4f, 0xfe, 0xb3, 0x54, 0x5a, 0x68, 0x1b, 0xee,
	0xce, 0x92, 0xe3, 0x33, 0x56, 0x6e, 0xa4, 0x6d, 0x64, 0x28, 0x49, 0x52, 0x6e, 0xa2, 0xc7, 0xf0,
	0x60, 0x11, 0x90, 0x61, 0x4b, 0xbf, 0x85, 0x76, 0xe1, 0xd1, 0x6c, 0x61, 0x15, 0x0f, 0x2c, 0x42,
	0x3d, 0x8e, 0xe6, 0xca, 0x6d, 0xd4, 0x81, 0xdd, 0xc4, 0x00, 0x48, 0x3d, 0xe6, 0x94, 0x3b, 0x69,
	0x30, 0x96, 0x8a, 0xf3, 0xca, 0xd6, 0x8b, 0xfc, 0xcf, 0x32, 0x7f, 0x9c, 0x79, 0xef, 0x7f, 0x03,
	0x00, 0x00, 0xff, 0xff, 0xf4, 0x60, 0xc5, 0x7f, 0x31, 0x42, 0x00, 0x00,
}
